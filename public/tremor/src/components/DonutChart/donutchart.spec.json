{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "src/components/DonutChart/donutchart.spec",
  "type": "registry:file",
  "dependencies": [
    "@playwright/test"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "src/components/DonutChart/donutchart.spec.ts",
      "content": "import { expect, test } from \"@playwright/test\"\n\ntest.beforeEach(async ({ page }) => {\n  await page.goto(\n    \"http://localhost:6006/?path=/story/visualization-donutchart--default\",\n  )\n})\n\ntest.describe(\"DonutChart Tests\", () => {\n  test(\"Default DonutChart renders correctly\", async ({ page }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n    await expect(frame.getByTestId(\"donut-chart\")).toBeVisible()\n    await expect(frame.locator(\".recharts-sector\")).toHaveCount(7)\n  })\n\n  test(\"ValueFormatter displays formatted values\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-donutchart--value-formatter\",\n    )\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n    await expect(frame.getByText(/\\d+ units/)).toBeVisible()\n  })\n\n  test(\"LabelDisabled does not show label\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-donutchart--label-disabled\",\n    )\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n    await expect(frame.getByText(\"Custom Label\")).not.toBeVisible()\n  })\n\n  test(\"OtherColors uses provided colors\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-donutchart--other-colors\",\n    )\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n    const sectors = frame.locator(\".recharts-sector\")\n    const expectedColors = [\n      \"blue\",\n      \"amber\",\n      \"pink\",\n      \"emerald\",\n      \"violet\",\n      \"cyan\",\n    ]\n    for (let i = 0; i < expectedColors.length; i++) {\n      await expect(sectors.nth(i)).toHaveClass(\n        new RegExp(`fill-${expectedColors[i]}-500`),\n      )\n    }\n    await expect(sectors.nth(6)).toHaveClass(/fill-blue-500/)\n  })\n\n  test(\"MoreDatapointsThanColors handles excess data points\", async ({\n    page,\n  }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-donutchart--more-datapoints-than-colors\",\n    )\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n    await expect(frame.locator(\".recharts-sector\")).toHaveCount(14)\n  })\n})\n",
      "path": "src/components/DonutChart/donutchart.spec.ts"
    }
  ]
}
