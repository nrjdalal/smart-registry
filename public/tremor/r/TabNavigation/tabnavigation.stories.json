{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "TabNavigation/tabnavigation.stories",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-navigation-menu",
    "@remixicon/react",
    "@storybook/react",
    "clsx",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "utils/cx.ts",
      "content": "// Tremor cx [v0.0.0]\n\nimport clsx, { type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cx(...args: ClassValue[]) {\n  return twMerge(clsx(...args))\n}\n",
      "path": "src/utils/cx.ts"
    },
    {
      "type": "registry:file",
      "target": "utils/focusRing.ts",
      "content": "// Tremor focusRing [v0.0.1]\n\nexport const focusRing = [\n  // base\n  \"outline outline-offset-2 outline-0 focus-visible:outline-2\",\n  // outline color\n  \"outline-blue-500 dark:outline-blue-500\",\n]\n",
      "path": "src/utils/focusRing.ts"
    },
    {
      "type": "registry:component",
      "target": "components/TabNavigation/tabnavigation.stories.tsx",
      "content": "import {\n  RiBankCard2Line,\n  RiCustomerService2Fill,\n  RiExchange2Line,\n  RiHome2Line,\n} from \"@remixicon/react\"\nimport type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { TabNavigation, TabNavigationLink } from \"@//Users/nrjdalal/Desktop/smart-registry/public/tremor/components/TabNavigation/TabNavigation\"\n\nconst meta: Meta<typeof TabNavigation> = {\n  title: \"ui/TabNavigation\",\n  component: TabNavigation,\n  parameters: {},\n}\n\nexport default meta\ntype Story = StoryObj<typeof TabNavigation>\n\nexport const Default: Story = {\n  render: () => (\n    <TabNavigation>\n      <TabNavigationLink href=\"#\" active>\n        Home\n      </TabNavigationLink>\n      <TabNavigationLink href=\"#\">Balances</TabNavigationLink>\n      <TabNavigationLink href=\"#\">Transactions</TabNavigationLink>\n      <TabNavigationLink href=\"#\" disabled>\n        Customers\n      </TabNavigationLink>\n    </TabNavigation>\n  ),\n}\n\nexport const Icons: Story = {\n  render: () => (\n    <TabNavigation>\n      <TabNavigationLink href=\"#\" active className=\"inline-flex gap-2\">\n        <RiHome2Line className=\"size-4\" aria-hidden=\"true\" />\n        Home\n      </TabNavigationLink>\n      <TabNavigationLink href=\"#\" className=\"inline-flex gap-2\">\n        <RiBankCard2Line className=\"-ml-1 size-4\" aria-hidden=\"true\" />\n        Balances\n      </TabNavigationLink>\n      <TabNavigationLink href=\"#\" className=\"inline-flex gap-2\">\n        <RiExchange2Line className=\"-ml-1 size-4\" aria-hidden=\"true\" />\n        Transactions\n      </TabNavigationLink>\n      <TabNavigationLink href=\"#\" className=\"inline-flex gap-2\">\n        <RiCustomerService2Fill className=\"-ml-1 size-4\" aria-hidden=\"true\" />\n        Customers\n      </TabNavigationLink>\n    </TabNavigation>\n  ),\n}\n",
      "path": "src/components/TabNavigation/tabnavigation.stories.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/TabNavigation/TabNavigation.tsx",
      "content": "// Tremor TabNavigation [v0.1.0]\n\nimport React from \"react\"\nimport * as NavigationMenuPrimitives from \"@radix-ui/react-navigation-menu\"\n\nimport { cx } from \"@//Users/nrjdalal/Desktop/smart-registry/public/tremor/utils/cx\"\nimport { focusRing } from \"@//Users/nrjdalal/Desktop/smart-registry/public/tremor/utils/focusRing\"\n\nfunction getSubtree(\n  options: { asChild: boolean | undefined; children: React.ReactNode },\n  content: React.ReactNode | ((children: React.ReactNode) => React.ReactNode),\n) {\n  const { asChild, children } = options\n  if (!asChild)\n    return typeof content === \"function\" ? content(children) : content\n\n  const firstChild = React.Children.only(children) as React.ReactElement\n  return React.cloneElement(firstChild, {\n    children:\n      typeof content === \"function\"\n        ? content(firstChild.props.children)\n        : content,\n  })\n}\n\nconst TabNavigation = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitives.Root>,\n  Omit<\n    React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitives.Root>,\n    \"orientation\" | \"defaultValue\" | \"dir\"\n  >\n>(({ className, children, ...props }, forwardedRef) => (\n  <NavigationMenuPrimitives.Root\n    ref={forwardedRef}\n    {...props}\n    tremor-id=\"tremor-raw\"\n    asChild={false}\n  >\n    <NavigationMenuPrimitives.List\n      className={cx(\n        // base\n        \"flex items-center justify-start whitespace-nowrap border-b [scrollbar-width:none] [&::-webkit-scrollbar]:hidden\",\n        // border color\n        \"border-gray-200 dark:border-gray-800\",\n        className,\n      )}\n    >\n      {children}\n    </NavigationMenuPrimitives.List>\n  </NavigationMenuPrimitives.Root>\n))\n\nTabNavigation.displayName = \"TabNavigation\"\n\nconst TabNavigationLink = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitives.Link>,\n  Omit<\n    React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitives.Link>,\n    \"onSelect\"\n  > & { disabled?: boolean }\n>(({ asChild, disabled, className, children, ...props }, forwardedRef) => (\n  <NavigationMenuPrimitives.Item className=\"flex\" aria-disabled={disabled}>\n    <NavigationMenuPrimitives.Link\n      aria-disabled={disabled}\n      className={cx(\n        \"group relative flex shrink-0 select-none items-center justify-center\",\n        disabled ? \"pointer-events-none\" : \"\",\n      )}\n      ref={forwardedRef}\n      onSelect={() => {}}\n      asChild={asChild}\n      {...props}\n    >\n      {getSubtree({ asChild, children }, (children) => (\n        <span\n          className={cx(\n            // base\n            \"-mb-px flex items-center justify-center whitespace-nowrap border-b-2 border-transparent px-3 pb-2 text-sm font-medium transition-all\",\n            // text color\n            \"text-gray-500 dark:text-gray-500\",\n            // hover\n            \"group-hover:text-gray-700 group-hover:dark:text-gray-400\",\n            // border hover\n            \"group-hover:border-gray-300 group-hover:dark:border-gray-400\",\n            // selected\n            \"group-data-[active]:border-blue-500 group-data-[active]:text-blue-500\",\n            \"group-data-[active]:dark:border-blue-500 group-data-[active]:dark:text-blue-500\",\n            // disabled\n            disabled\n              ? \"pointer-events-none text-gray-300 dark:text-gray-700\"\n              : \"\",\n            focusRing,\n            className,\n          )}\n        >\n          {children}\n        </span>\n      ))}\n    </NavigationMenuPrimitives.Link>\n  </NavigationMenuPrimitives.Item>\n))\n\nTabNavigationLink.displayName = \"TabNavigationLink\"\n\nexport { TabNavigation, TabNavigationLink }\n",
      "path": "src/components/TabNavigation/TabNavigation.tsx"
    }
  ]
}
