{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-avatar",
    "@radix-ui/react-dialog",
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-progress",
    "@radix-ui/react-separator",
    "@radix-ui/react-slot",
    "@radix-ui/react-tooltip",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "next",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/dashboard.tsx",
      "content": "import Content from \"@/components/kokonutui/blocks/dashboard/content\";\nimport Layout from \"@/components/kokonutui/blocks/dashboard/layout\";\n\nexport default function Dashboard() {\n    return (\n        <div>\n            <Layout>\n                <Content />\n            </Layout>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/dashboard.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/app-sidebar.tsx",
      "content": "\"use client\";\n\nimport Image from \"next/image\";\nimport {\n    BarChart,\n    BarChart2,\n    Database,\n    FileText,\n    Folder,\n    HelpCircle,\n    LayoutDashboard,\n    List,\n    Search,\n    Settings,\n    Users,\n} from \"lucide-react\";\n\nimport {\n    Sidebar,\n    SidebarContent,\n    SidebarFooter,\n    SidebarHeader,\n    SidebarMenu,\n    SidebarMenuButton,\n    SidebarMenuItem,\n} from \"@/components/ui/sidebar\";\nimport { NavMain } from \"@/components/kokonutui/blocks/dashboard/nav-main\";\nimport { NavDocuments } from \"@/components/kokonutui/blocks/dashboard/nav-documents\";\nimport { NavSecondary } from \"@/components/kokonutui/blocks/dashboard/nav-secondary\";\nimport { NavUser } from \"@/components/kokonutui/blocks/dashboard/nav-user\";\n\nconst data = {\n    user: {\n        name: \"kokonut\",\n        email: \"hi@kokonut.com\",\n        avatar: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/kokonutui-ViPVkO6aBLcXfRnAupAA1dkqgyrF7T.png\",\n        image: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/kokonutui-ViPVkO6aBLcXfRnAupAA1dkqgyrF7T.png\",\n    },\n    navMain: [\n        {\n            title: \"Dashboard\",\n            url: \"#\",\n            icon: LayoutDashboard,\n        },\n        {\n            title: \"Lifecycle\",\n            url: \"#\",\n            icon: List,\n        },\n        {\n            title: \"Analytics\",\n            url: \"#\",\n            icon: BarChart2,\n        },\n        {\n            title: \"Projects\",\n            url: \"#\",\n            icon: Folder,\n        },\n        {\n            title: \"Team\",\n            url: \"#\",\n            icon: Users,\n        },\n    ],\n    navSecondary: [\n        {\n            title: \"Settings\",\n            url: \"#\",\n            icon: Settings,\n        },\n        {\n            title: \"Get Help\",\n            url: \"#\",\n            icon: HelpCircle,\n        },\n        {\n            title: \"Search\",\n            url: \"#\",\n            icon: Search,\n        },\n    ],\n    documents: [\n        {\n            name: \"Invoices\",\n            url: \"#\",\n            icon: Database,\n        },\n        {\n            name: \"Payments Analytics\",\n            url: \"#\",\n            icon: BarChart,\n        },\n        {\n            name: \"Reports\",\n            url: \"#\",\n            icon: FileText,\n        },\n    ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n    return (\n        <Sidebar collapsible=\"offcanvas\" {...props}>\n            <SidebarHeader>\n                <SidebarMenu>\n                    <SidebarMenuItem>\n                        <SidebarMenuButton\n                            asChild\n                            className=\"data-[slot=sidebar-menu-button]:p-1.5\"\n                        >\n                            <a\n                                href=\"/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                <div className=\"flex items-center gap-3\">\n                                    <Image\n                                        src=\"https://kokonutui.com/logo.svg\"\n                                        alt=\"Kokonut Logo\"\n                                        width={24}\n                                        height={24}\n                                        className=\"flex-shrink-0 hidden dark:block rounded-full\"\n                                    />\n                                    <Image\n                                        src=\"https://kokonutui.com/logo-black.svg\"\n                                        alt=\"Kokonut Logo\"\n                                        width={24}\n                                        height={24}\n                                        className=\"flex-shrink-0 block dark:hidden rounded-full\"\n                                    />\n                                    <div>\n                                        <div className=\"font-semibold hover:cursor-pointer text-gray-900 dark:text-white\">\n                                            Kokonut\n                                        </div>\n                                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                                            Team workspace\n                                        </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </SidebarMenuButton>\n                    </SidebarMenuItem>\n                </SidebarMenu>\n            </SidebarHeader>\n            <SidebarContent>\n                <NavMain items={data.navMain} />\n                <NavDocuments items={data.documents} />\n                <NavSecondary items={data.navSecondary} className=\"mt-auto\" />\n            </SidebarContent>\n            <SidebarFooter>\n                <NavUser user={data.user} />\n            </SidebarFooter>\n        </Sidebar>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/app-sidebar.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/btn-11.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { ChevronRight } from \"lucide-react\";\n\ninterface Btn11Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    children?: React.ReactNode;\n    showIcon?: boolean;\n}\n\nexport default function Btn11({\n    className,\n    children = \"Button\",\n    showIcon = true,\n    ...props\n}: Btn11Props) {\n    return (\n        <Button\n            className={cn(\n                \"relative h-10 px-4\",\n                \"bg-linear-to-b from-zinc-50 to-zinc-100/80\",\n                \"dark:from-zinc-900 dark:to-zinc-800/80\",\n                \"text-zinc-800 dark:text-zinc-200\",\n                \"border border-zinc-200 dark:border-zinc-800\",\n                \"hover:border-zinc-300 dark:hover:border-zinc-700\",\n                \"shadow-xs hover:shadow-sm\",\n                \"transition-all duration-200\",\n                \"group\",\n                className\n            )}\n            {...props}\n        >\n            <div className=\"flex items-center justify-center gap-2\">\n                <span className=\"relative\">\n                    {children}\n                    <span className={cn(\n                        \"absolute -bottom-px left-0 w-full h-px\",\n                        \"bg-linear-to-r from-zinc-400/0 via-zinc-400/50 to-zinc-400/0\",\n                        \"dark:from-zinc-600/0 dark:via-zinc-600/50 dark:to-zinc-600/0\",\n                        \"opacity-0 group-hover:opacity-100\",\n                        \"transition-opacity duration-200\"\n                    )} />\n                </span>\n                {showIcon && (\n                    <ChevronRight \n                        className={cn(\n                            \"w-4 h-4\",\n                            \"transform group-hover:translate-x-0.5\",\n                            \"transition-transform duration-200\"\n                        )}\n                    />\n                )}\n            </div>\n        </Button>\n    );\n} ",
      "path": "components/kokonutui/blocks/dashboard/btn-11.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/content.tsx",
      "content": "import { Calendar, CreditCard, Wallet } from \"lucide-react\";\nimport List01 from \"@/components/kokonutui/blocks/dashboard/list-01\";\nimport List02 from \"@/components/kokonutui/blocks/dashboard/list-02\";\nimport List03 from \"@/components/kokonutui/blocks/dashboard/list-03\";\n\nexport default function Content() {\n    return (\n        <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3\">\n                <div className=\"p-4 flex flex-col \">\n                    <h2 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4 text-left flex items-center gap-2\">\n                        <Wallet className=\"w-3.5 h-3.5 text-zinc-900 dark:text-zinc-50\" />\n                        Accounts\n                    </h2>\n                    <List01 className=\"h-full\" />\n                </div>\n                <div className=\"p-4 flex flex-col \">\n                    <h2 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4 text-left flex items-center gap-2\">\n                        <CreditCard className=\"w-3.5 h-3.5 text-zinc-900 dark:text-zinc-50\" />\n                        Recent Transactions\n                    </h2>\n                    <List02 className=\"h-full\" />\n                </div>\n            </div>\n\n            <div className=\"p-4 flex flex-col items-start justify-start\">\n                <h2 className=\"text-lg font-bold text-gray-900 dark:text-white mb-4 text-left flex items-center gap-2\">\n                    <Calendar className=\"w-3.5 h-3.5 text-zinc-900 dark:text-zinc-50\" />\n                    Upcoming Events\n                </h2>\n                <List03 />\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/content.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/layout.tsx",
      "content": "import type { ReactNode } from \"react\";\nimport TopNav from \"@/components/kokonutui/blocks/dashboard/top-nav\";\nimport { AppSidebar } from \"@/components/kokonutui/blocks/dashboard/app-sidebar\";\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\";\n\ninterface LayoutProps {\n    children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n    return (\n        <div className=\"flex h-screen\">\n            <SidebarProvider\n                style={\n                    {\n                        \"--sidebar-width\": \"calc(var(--spacing) * 72)\",\n                        \"--header-height\": \"calc(var(--spacing) * 12)\",\n                    } as React.CSSProperties\n                }\n            >\n                <AppSidebar variant=\"inset\" />\n                <SidebarInset>\n                    <div className=\"w-full flex flex-1 flex-col\">\n                        <TopNav />\n                        <main className=\"flex-1 overflow-auto p-6\">\n                            {children}\n                        </main>\n                    </div>\n                </SidebarInset>\n            </SidebarProvider>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/layout.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/list-01.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport {\n    ArrowUpRight,\n    ArrowDownLeft,\n    Wallet,\n    SendHorizontal,\n    QrCode,\n    Plus,\n    ArrowRight,\n    CreditCard,\n} from \"lucide-react\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface AccountItem {\n    id: string;\n    title: string;\n    description?: string;\n    balance: string;\n    type: \"savings\" | \"checking\" | \"investment\" | \"debt\";\n}\n\ninterface List01Props {\n    totalBalance?: string;\n    accounts?: AccountItem[];\n    className?: string;\n}\n\nconst ACCOUNTS: AccountItem[] = [\n    {\n        id: \"1\",\n        title: \"Main Savings\",\n        description: \"Personal savings\",\n        balance: \"$8,459.45\",\n        type: \"savings\",\n    },\n    {\n        id: \"2\",\n        title: \"Checking Account\",\n        description: \"Daily expenses\",\n        balance: \"$2,850.00\",\n        type: \"checking\",\n    },\n    {\n        id: \"3\",\n        title: \"Investment Portfolio\",\n        description: \"Stock & ETFs\",\n        balance: \"$15,230.80\",\n        type: \"investment\",\n    },\n    {\n        id: \"4\",\n        title: \"Credit Card\",\n        description: \"Pending charges\",\n        balance: \"$1,200.00\",\n        type: \"debt\",\n    },\n    {\n        id: \"5\",\n        title: \"Savings Account\",\n        description: \"Emergency fund\",\n        balance: \"$3,000.00\",\n        type: \"savings\",\n    },\n];\n\nexport default function List01({\n    totalBalance = \"$26,540.25\",\n    accounts = ACCOUNTS,\n    className,\n}: List01Props) {\n    return (\n        <Card\n            className={cn(\n                \"w-full max-w-xl\",\n                \"bg-white dark:bg-zinc-900/70\",\n                \"border border-zinc-100 dark:border-zinc-800\",\n                \"rounded-xl shadow-sm backdrop-blur-xl\",\n                className\n            )}\n        >\n            <CardHeader className=\"p-4 border-b border-zinc-100 dark:border-zinc-800\">\n                <CardDescription className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                    Total Balance\n                </CardDescription>\n                <CardTitle className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-50\">\n                    {totalBalance}\n                </CardTitle>\n            </CardHeader>\n\n            <CardContent className=\"p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                    <h2 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                        Your Accounts\n                    </h2>\n                </div>\n\n                <div className=\"space-y-1\">\n                    {accounts.map((account) => (\n                        <div\n                            key={account.id}\n                            className={cn(\n                                \"group flex items-center justify-between\",\n                                \"p-2 rounded-lg\",\n                                \"hover:bg-zinc-100 dark:hover:bg-zinc-800/50\",\n                                \"transition-all duration-200\"\n                            )}\n                        >\n                            <div className=\"flex items-center gap-2\">\n                                <div\n                                    className={cn(\"p-1.5 rounded-lg\", {\n                                        \"bg-emerald-100 dark:bg-emerald-900/30\":\n                                            account.type === \"savings\",\n                                        \"bg-blue-100 dark:bg-blue-900/30\":\n                                            account.type === \"checking\",\n                                        \"bg-purple-100 dark:bg-purple-900/30\":\n                                            account.type === \"investment\",\n                                        \"bg-red-100 dark:bg-red-900/30\":\n                                            account.type === \"debt\",\n                                    })}\n                                >\n                                    {account.type === \"savings\" && (\n                                        <Wallet className=\"w-3.5 h-3.5 text-emerald-600 dark:text-emerald-400\" />\n                                    )}\n                                    {account.type === \"checking\" && (\n                                        <QrCode className=\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\" />\n                                    )}\n                                    {account.type === \"investment\" && (\n                                        <ArrowUpRight className=\"w-3.5 h-3.5 text-purple-600 dark:text-purple-400\" />\n                                    )}\n                                    {account.type === \"debt\" && (\n                                        <CreditCard className=\"w-3.5 h-3.5 text-red-600 dark:text-red-400\" />\n                                    )}\n                                </div>\n                                <div>\n                                    <h3 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                        {account.title}\n                                    </h3>\n                                    {account.description && (\n                                        <p className=\"text-[11px] text-zinc-600 dark:text-zinc-400\">\n                                            {account.description}\n                                        </p>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"text-right\">\n                                <span className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                    {account.balance}\n                                </span>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n\n            <CardFooter className=\"p-2 border-t border-zinc-100 dark:border-zinc-800\">\n                <div className=\"grid grid-cols-4 gap-2 w-full\">\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <Plus className=\"w-3.5 h-3.5\" />\n                        <span>Add</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <SendHorizontal className=\"w-3.5 h-3.5\" />\n                        <span>Send</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <ArrowDownLeft className=\"w-3.5 h-3.5\" />\n                        <span>Top-up</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <ArrowRight className=\"w-3.5 h-3.5\" />\n                        <span>More</span>\n                    </Button>\n                </div>\n            </CardFooter>\n        </Card>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/list-01.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/list-02.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport {\n    ArrowUpRight,\n    ArrowDownLeft,\n    Wallet,\n    ShoppingCart,\n    CreditCard,\n    type LucideIcon,\n    ArrowRight,\n} from \"lucide-react\";\nimport {\n    Card,\n    CardContent,\n    CardFooter,\n    CardHeader,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface Transaction {\n    id: string;\n    title: string;\n    amount: string;\n    type: \"incoming\" | \"outgoing\";\n    category: string;\n    icon: LucideIcon;\n    timestamp: string;\n    status: \"completed\" | \"pending\" | \"failed\";\n}\n\ninterface List02Props {\n    transactions?: Transaction[];\n    className?: string;\n}\n\nconst TRANSACTIONS: Transaction[] = [\n    {\n        id: \"1\",\n        title: \"Apple Store Purchase\",\n        amount: \"$999.00\",\n        type: \"outgoing\",\n        category: \"shopping\",\n        icon: ShoppingCart,\n        timestamp: \"Today, 2:45 PM\",\n        status: \"completed\",\n    },\n    {\n        id: \"2\",\n        title: \"Salary Deposit\",\n        amount: \"$4,500.00\",\n        type: \"incoming\",\n        category: \"transport\",\n        icon: Wallet,\n        timestamp: \"Today, 9:00 AM\",\n        status: \"completed\",\n    },\n    {\n        id: \"3\",\n        title: \"Netflix Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n    {\n        id: \"4\",\n        title: \"Apple Store Purchase\",\n        amount: \"$999.00\",\n        type: \"outgoing\",\n        category: \"shopping\",\n        icon: ShoppingCart,\n        timestamp: \"Today, 2:45 PM\",\n        status: \"completed\",\n    },\n    {\n        id: \"5\",\n        title: \"Supabase Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n    {\n        id: \"6\",\n        title: \"Vercel Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n];\n\nexport default function List02({\n    transactions = TRANSACTIONS,\n    className,\n}: List02Props) {\n    return (\n        <Card\n            className={cn(\n                \"w-full max-w-xl\",\n                \"bg-white dark:bg-zinc-900/70\",\n                \"border border-zinc-100 dark:border-zinc-800\",\n                \"rounded-xl shadow-sm backdrop-blur-xl\",\n                className\n            )}\n        >\n            <CardHeader className=\"p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                    <h2 className=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n                        Recent Activity\n                        <span className=\"text-xs font-normal text-zinc-600 dark:text-zinc-400 ml-1\">\n                            (23 transactions)\n                        </span>\n                    </h2>\n                    <span className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                        This Month\n                    </span>\n                </div>\n            </CardHeader>\n\n            <CardContent className=\"p-3 pt-0\">\n                <div className=\"space-y-1\">\n                    {transactions.map((transaction) => (\n                        <div\n                            key={transaction.id}\n                            className={cn(\n                                \"group flex items-center gap-3\",\n                                \"p-2 rounded-lg\",\n                                \"hover:bg-zinc-100 dark:hover:bg-zinc-800/50\",\n                                \"transition-all duration-200\"\n                            )}\n                        >\n                            <div\n                                className={cn(\n                                    \"p-2 rounded-lg\",\n                                    \"bg-zinc-100 dark:bg-zinc-800\",\n                                    \"border border-zinc-200 dark:border-zinc-700\"\n                                )}\n                            >\n                                <transaction.icon className=\"w-4 h-4 text-zinc-900 dark:text-zinc-100\" />\n                            </div>\n\n                            <div className=\"flex-1 flex items-center justify-between min-w-0\">\n                                <div className=\"space-y-0.5\">\n                                    <h3 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                        {transaction.title}\n                                    </h3>\n                                    <p className=\"text-[11px] text-zinc-600 dark:text-zinc-400\">\n                                        {transaction.timestamp}\n                                    </p>\n                                </div>\n\n                                <div className=\"flex items-center gap-1.5 pl-3\">\n                                    <span\n                                        className={cn(\n                                            \"text-xs font-medium\",\n                                            transaction.type === \"incoming\"\n                                                ? \"text-emerald-600 dark:text-emerald-400\"\n                                                : \"text-red-600 dark:text-red-400\"\n                                        )}\n                                    >\n                                        {transaction.type === \"incoming\"\n                                            ? \"+\"\n                                            : \"-\"}\n                                        {transaction.amount}\n                                    </span>\n                                    {transaction.type === \"incoming\" ? (\n                                        <ArrowDownLeft className=\"w-3.5 h-3.5 text-emerald-600 dark:text-emerald-400\" />\n                                    ) : (\n                                        <ArrowUpRight className=\"w-3.5 h-3.5 text-red-600 dark:text-red-400\" />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n\n            <CardFooter className=\"p-2 border-t border-zinc-100 dark:border-zinc-800\">\n                <Button\n                    variant=\"default\"\n                    size=\"sm\"\n                    className={cn(\n                        \"w-full flex items-center justify-center gap-2\",\n                        \"text-xs font-medium\",\n                        \"bg-gradient-to-r from-zinc-900 to-zinc-800\",\n                        \"dark:from-zinc-50 dark:to-zinc-200\",\n                        \"text-zinc-50 dark:text-zinc-900\",\n                        \"hover:from-zinc-800 hover:to-zinc-700\",\n                        \"dark:hover:from-zinc-200 dark:hover:to-zinc-300\",\n                        \"shadow-sm hover:shadow\",\n                        \"transform transition-all duration-200\",\n                        \"hover:-translate-y-0.5\",\n                        \"active:translate-y-0\"\n                    )}\n                >\n                    <span>View All Transactions</span>\n                    <ArrowRight className=\"w-3.5 h-3.5\" />\n                </Button>\n            </CardFooter>\n        </Card>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/list-02.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/list-03.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport {\n    Calendar,\n    Users,\n    FileText,\n    type LucideIcon,\n    Clock,\n    ArrowRight,\n    CheckCircle2,\n    Timer,\n    AlertCircle,\n    PiggyBank,\n    TrendingUp,\n    CreditCard,\n} from \"lucide-react\";\nimport React from \"react\";\nimport {\n    Card,\n    CardContent,\n    CardFooter,\n    CardHeader,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\n\ninterface ListItem {\n    id: string;\n    title: string;\n    subtitle: string;\n    icon: LucideIcon;\n    iconStyle: string;\n    date: string;\n    time?: string;\n    amount?: string;\n    status: \"pending\" | \"in-progress\" | \"completed\";\n    progress?: number;\n}\n\ninterface List03Props {\n    items?: ListItem[];\n    className?: string;\n}\n\nconst iconStyles = {\n    savings: \"bg-zinc-100 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100\",\n    investment: \"bg-zinc-100 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100\",\n    debt: \"bg-zinc-100 dark:bg-zinc-800 text-zinc-900 dark:text-zinc-100\",\n};\n\nconst statusConfig = {\n    pending: {\n        icon: Timer,\n        class: \"text-amber-600 dark:text-amber-400\",\n        bg: \"bg-amber-100 dark:bg-amber-900/30\",\n    },\n    \"in-progress\": {\n        icon: AlertCircle,\n        class: \"text-blue-600 dark:text-blue-400\",\n        bg: \"bg-blue-100 dark:bg-blue-900/30\",\n    },\n    completed: {\n        icon: CheckCircle2,\n        class: \"text-emerald-600 dark:text-emerald-400\",\n        bg: \"bg-emerald-100 dark:bg-emerald-900/30\",\n    },\n};\n\nconst ITEMS: ListItem[] = [\n    {\n        id: \"1\",\n        title: \"Emergency Fund\",\n        subtitle: \"3 months of expenses saved\",\n        icon: PiggyBank,\n        iconStyle: \"savings\",\n        date: \"Target: Dec 2024\",\n        amount: \"$15,000\",\n        status: \"in-progress\",\n        progress: 65,\n    },\n    {\n        id: \"2\",\n        title: \"Stock Portfolio\",\n        subtitle: \"Tech sector investment plan\",\n        icon: TrendingUp,\n        iconStyle: \"investment\",\n        date: \"Target: Jun 2024\",\n        amount: \"$50,000\",\n        status: \"pending\",\n        progress: 30,\n    },\n    {\n        id: \"3\",\n        title: \"Debt Repayment\",\n        subtitle: \"Student loan payoff plan\",\n        icon: CreditCard,\n        iconStyle: \"debt\",\n        date: \"Target: Mar 2025\",\n        amount: \"$25,000\",\n        status: \"in-progress\",\n        progress: 45,\n    },\n];\n\nexport default function List03({ items = ITEMS, className }: List03Props) {\n    return (\n        <div className={cn(\"w-full overflow-x-auto scrollbar-none\", className)}>\n            <div className=\"flex gap-3 min-w-full p-1\">\n                {items.map((item) => (\n                    <Card\n                        key={item.id}\n                        className={cn(\n                            \"flex flex-col\",\n                            \"w-[280px] shrink-0\",\n                            \"bg-white dark:bg-zinc-900/70\",\n                            \"rounded-xl\",\n                            \"border border-zinc-100 dark:border-zinc-800\",\n                            \"hover:border-zinc-200 dark:hover:border-zinc-700\",\n                            \"transition-all duration-200\",\n                            \"shadow-sm backdrop-blur-xl\"\n                        )}\n                    >\n                        <CardHeader className=\"p-4 pb-0\">\n                            <div className=\"flex items-start justify-between\">\n                                <div\n                                    className={cn(\n                                        \"p-2 rounded-lg\",\n                                        iconStyles[\n                                            item.iconStyle as keyof typeof iconStyles\n                                        ]\n                                    )}\n                                >\n                                    <item.icon className=\"w-4 h-4\" />\n                                </div>\n                                <div\n                                    className={cn(\n                                        \"px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1.5\",\n                                        statusConfig[item.status].bg,\n                                        statusConfig[item.status].class\n                                    )}\n                                >\n                                    {React.createElement(\n                                        statusConfig[item.status].icon,\n                                        { className: \"w-3.5 h-3.5\" }\n                                    )}\n                                    {item.status.charAt(0).toUpperCase() +\n                                        item.status.slice(1)}\n                                </div>\n                            </div>\n                        </CardHeader>\n\n                        <CardContent className=\"p-4 space-y-3 flex-grow\">\n                            <div>\n                                <h3 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100 mb-1\">\n                                    {item.title}\n                                </h3>\n                                <p className=\"text-xs text-zinc-600 dark:text-zinc-400 line-clamp-2\">\n                                    {item.subtitle}\n                                </p>\n                            </div>\n\n                            {typeof item.progress === \"number\" && (\n                                <div className=\"space-y-1.5\">\n                                    <div className=\"flex items-center justify-between text-xs\">\n                                        <span className=\"text-zinc-600 dark:text-zinc-400\">\n                                            Progress\n                                        </span>\n                                        <span className=\"text-zinc-900 dark:text-zinc-100\">\n                                            {item.progress}%\n                                        </span>\n                                    </div>\n                                    <Progress\n                                        value={item.progress}\n                                        className=\"h-1.5 bg-zinc-100 dark:bg-zinc-800 bg-zinc-900 dark:bg-zinc-100\"\n                                    />\n                                </div>\n                            )}\n\n                            {item.amount && (\n                                <div className=\"flex items-center gap-1.5\">\n                                    <span className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                        {item.amount}\n                                    </span>\n                                    <span className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                                        target\n                                    </span>\n                                </div>\n                            )}\n\n                            <div className=\"flex items-center text-xs text-zinc-600 dark:text-zinc-400\">\n                                <Calendar className=\"w-3.5 h-3.5 mr-1.5\" />\n                                <span>{item.date}</span>\n                            </div>\n                        </CardContent>\n\n                        <CardFooter className=\"mt-auto p-0 border-t border-zinc-100 dark:border-zinc-800\">\n                            <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className={cn(\n                                    \"w-full flex items-center justify-center gap-2\",\n                                    \"py-2.5 px-3\",\n                                    \"text-xs font-medium\",\n                                    \"text-zinc-600 dark:text-zinc-400\",\n                                    \"hover:text-zinc-900 dark:hover:text-zinc-100\",\n                                    \"hover:bg-zinc-100 dark:hover:bg-zinc-800/50\",\n                                    \"transition-colors duration-200\",\n                                    \"rounded-none rounded-b-xl\"\n                                )}\n                            >\n                                View Details\n                                <ArrowRight className=\"w-3.5 h-3.5\" />\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                ))}\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/list-03.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/nav-documents.tsx",
      "content": "import type { LucideIcon } from \"lucide-react\";\n\nimport {\n    SidebarGroup,\n    SidebarGroupLabel,\n    SidebarMenu,\n    SidebarMenuButton,\n    SidebarMenuItem,\n} from \"@/components/ui/sidebar\";\n\nexport function NavDocuments({\n    items,\n}: {\n    items: {\n        name: string;\n        url: string;\n        icon: LucideIcon;\n    }[];\n}) {\n    return (\n        <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n            <SidebarGroupLabel>Documents</SidebarGroupLabel>\n            <SidebarMenu>\n                {items.map((item) => (\n                    <SidebarMenuItem key={item.name}>\n                        <SidebarMenuButton asChild>\n                            <a href={item.url}>\n                                <item.icon />\n                                <span>{item.name}</span>\n                            </a>\n                        </SidebarMenuButton>\n                    </SidebarMenuItem>\n                ))}\n            </SidebarMenu>\n        </SidebarGroup>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/nav-documents.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/nav-main.tsx",
      "content": "\"use client\";\n\nimport { Mail, WandSparkles, type LucideIcon } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n    SidebarGroup,\n    SidebarGroupContent,\n    SidebarMenu,\n    SidebarMenuButton,\n    SidebarMenuItem,\n} from \"@/components/ui/sidebar\";\n\nexport function NavMain({\n    items,\n}: {\n    items: {\n        title: string;\n        url: string;\n        icon?: LucideIcon;\n    }[];\n}) {\n    return (\n        <SidebarGroup>\n            <SidebarGroupContent className=\"flex flex-col gap-2\">\n                <SidebarMenu>\n                    <SidebarMenuItem className=\"flex items-center gap-2\">\n                        <Button\n                            size=\"icon\"\n                            className=\"w-full group-data-[collapsible=icon]:opacity-0\"\n                            variant=\"outline\"\n                        >\n                            <span className=\"sr-only\">Ask AI</span>\n                            <WandSparkles />\n                            <span className=\"flex items-center gap-2 justify-between\">\n                                Ask AI<kbd>⌘K</kbd>\n                            </span>\n                        </Button>\n                    </SidebarMenuItem>\n                </SidebarMenu>\n                <SidebarMenu>\n                    {items.map((item) => (\n                        <SidebarMenuItem key={item.title}>\n                            <SidebarMenuButton tooltip={item.title}>\n                                {item.icon && <item.icon />}\n                                <span>{item.title}</span>\n                            </SidebarMenuButton>\n                        </SidebarMenuItem>\n                    ))}\n                </SidebarMenu>\n            </SidebarGroupContent>\n        </SidebarGroup>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/nav-main.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/nav-secondary.tsx",
      "content": "import type { LucideIcon } from \"lucide-react\";\n\nimport {\n    SidebarGroup,\n    SidebarGroupContent,\n    SidebarMenu,\n    SidebarMenuButton,\n    SidebarMenuItem,\n} from \"@/components/ui/sidebar\";\n\nexport function NavSecondary({\n    items,\n    ...props\n}: {\n    items: {\n        title: string;\n        url: string;\n        icon: LucideIcon;\n    }[];\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n    return (\n        <SidebarGroup {...props}>\n            <SidebarGroupContent>\n                <SidebarMenu>\n                    {items.map((item) => (\n                        <SidebarMenuItem key={item.title}>\n                            <SidebarMenuButton asChild>\n                                <a href={item.url}>\n                                    <item.icon />\n                                    <span>{item.title}</span>\n                                </a>\n                            </SidebarMenuButton>\n                        </SidebarMenuItem>\n                    ))}\n                </SidebarMenu>\n            </SidebarGroupContent>\n        </SidebarGroup>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/nav-secondary.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/nav-user.tsx",
      "content": "\"use client\";\n\nimport { ArrowRight, CreditCard, LogOut, UserCircle } from \"lucide-react\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuGroup,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n    SidebarMenu,\n    SidebarMenuButton,\n    SidebarMenuItem,\n    useSidebar,\n} from \"@/components/ui/sidebar\";\nimport { Button } from \"@/components/ui/button\";\n\nexport function NavUser({\n    user,\n}: {\n    user: {\n        name: string;\n        email: string;\n        image: string;\n    };\n}) {\n    const { isMobile } = useSidebar();\n\n    return (\n        <SidebarMenu>\n            <SidebarMenuItem>\n                <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <SidebarMenuButton\n                            size=\"lg\"\n                            className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n                        >\n                            <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                                <AvatarImage src={user.image} alt={user.name} />\n                                <AvatarFallback className=\"rounded-lg\">\n                                    CN\n                                </AvatarFallback>\n                            </Avatar>\n                            <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                                <span className=\"truncate font-medium\">\n                                    {user.name}\n                                </span>\n                                <span className=\"text-muted-foreground truncate text-xs\">\n                                    {user.email}\n                                </span>\n                            </div>\n                            <ArrowRight className=\"ml-auto size-4\" />\n                        </SidebarMenuButton>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent\n                        className=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\n                        side={isMobile ? \"bottom\" : \"right\"}\n                        align=\"end\"\n                        sideOffset={4}\n                    >\n                        <DropdownMenuLabel className=\"p-0 font-normal\">\n                            <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                                <Avatar className=\"h-8 w-8 rounded-lg\">\n                                    <AvatarImage\n                                        src={user.image}\n                                        alt={user.name}\n                                    />\n                                    <AvatarFallback className=\"rounded-lg\">\n                                        CN\n                                    </AvatarFallback>\n                                </Avatar>\n                                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                                    <span className=\"truncate font-medium\">\n                                        {user.name}\n                                    </span>\n                                    <span className=\"text-muted-foreground truncate text-xs\">\n                                        {user.email}\n                                    </span>\n                                </div>\n                            </div>\n                        </DropdownMenuLabel>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuGroup>\n                            <DropdownMenuItem className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-2\">\n                                    <CreditCard />\n                                    <span className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                        Subscription\n                                    </span>\n                                </div>\n                                <span className=\"text-sm text-zinc-500 dark:text-zinc-400 mr-2\">\n                                    Free Trial\n                                </span>\n                            </DropdownMenuItem>\n                            <DropdownMenuItem>\n                                <UserCircle />\n                                Profie\n                            </DropdownMenuItem>\n                            <DropdownMenuItem>\n                                <CreditCard />\n                                Billing\n                            </DropdownMenuItem>\n                        </DropdownMenuGroup>\n                        <DropdownMenuSeparator />\n                        <DropdownMenuItem>\n                            <LogOut />\n                            <Button variant=\"outline\" type=\"button\">\n                                Log out\n                            </Button>\n                        </DropdownMenuItem>\n                    </DropdownMenuContent>\n                </DropdownMenu>\n            </SidebarMenuItem>\n        </SidebarMenu>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/nav-user.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/top-nav.tsx",
      "content": "import { ChevronRight } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { Separator } from \"@/components/ui/separator\";\nimport Btn11 from \"@/components/kokonutui/blocks/dashboard/btn-11\";\n\ninterface BreadcrumbItem {\n    label: string;\n    href?: string;\n}\n\nexport default function TopNav() {\n    const breadcrumbs: BreadcrumbItem[] = [\n        { label: \"kokonut/ui\", href: \"#\" },\n        { label: \"dashboard\", href: \"#\" },\n    ];\n\n    return (\n        <nav className=\"flex h-(--header-height) shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-(--header-height)\">\n            <div className=\"flex w-full items-center gap-1 px-4 lg:gap-2 lg:px-6 text-sm\">\n                <SidebarTrigger className=\"-ml-1\" />\n                <Separator\n                    orientation=\"vertical\"\n                    className=\"mx-2 data-[orientation=vertical]:h-4\"\n                />\n                {breadcrumbs.map((item, index) => (\n                    <div key={item.label} className=\"flex items-center\">\n                        {index > 0 && (\n                            <ChevronRight className=\"h-4 w-4 text-gray-500 dark:text-gray-400 mx-1\" />\n                        )}\n                        {item.href ? (\n                            <Link\n                                href={item.href}\n                                className=\"text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 transition-colors\"\n                            >\n                                {item.label}\n                            </Link>\n                        ) : (\n                            <span className=\"text-gray-900 dark:text-gray-100\">\n                                {item.label}\n                            </span>\n                        )}\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"flex items-center gap-2 sm:gap-4 sm:ml-0 mr-4\">\n                <Btn11 className=\"h-8\">Upgrade to Pro</Btn11>\n            </div>\n        </nav>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/top-nav.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-mobile.ts",
      "content": "import * as React from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n    const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n        undefined\n    );\n\n    React.useEffect(() => {\n        const mql = window.matchMedia(\n            `(max-width: ${MOBILE_BREAKPOINT - 1}px)`\n        );\n        const onChange = () => {\n            setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n        };\n        mql.addEventListener(\"change\", onChange);\n        setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\n        return () => mql.removeEventListener(\"change\", onChange);\n    }, []);\n\n    return !!isMobile;\n}\n",
      "path": "hooks/use-mobile.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/avatar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "path": "components/ui/avatar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-zinc-200 bg-white text-zinc-950 shadow-xs dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "components/ui/card.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/dropdown-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-zinc-100 data-[state=open]:bg-zinc-100 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus:bg-zinc-800 dark:data-[state=open]:bg-zinc-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-zinc-200 bg-white p-1 text-zinc-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-zinc-200 bg-white p-1 text-zinc-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-zinc-100 dark:bg-zinc-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n",
      "path": "components/ui/dropdown-menu.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/input.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-zinc-200 bg-white px-3 py-2 text-base ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
      "path": "components/ui/input.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/progress.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-zinc-900 transition-all dark:bg-zinc-50\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
      "path": "components/ui/progress.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/separator.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-zinc-200 dark:bg-zinc-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n",
      "path": "components/ui/separator.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/sheet.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-white p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500 dark:bg-zinc-950\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-hidden focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-zinc-100 dark:ring-offset-zinc-950 dark:focus:ring-zinc-300 dark:data-[state=open]:bg-zinc-800\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-zinc-950 dark:text-zinc-50\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
      "path": "components/ui/sheet.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/sidebar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon)\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"size-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-white relative flex w-full flex-1 flex-col dark:bg-zinc-950\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-white h-8 w-full shadow-none dark:bg-zinc-950\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-white shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))] dark:bg-zinc-950\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-(--skeleton-width) flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n",
      "path": "components/ui/sidebar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/skeleton.tsx",
      "content": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-zinc-100 dark:bg-zinc-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n",
      "path": "components/ui/skeleton.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/tooltip.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-zinc-200 bg-white px-3 py-1.5 text-sm text-zinc-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }",
      "path": "components/ui/tooltip.tsx"
    }
  ]
}
