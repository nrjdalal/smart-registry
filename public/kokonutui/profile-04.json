{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "profile-04",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-progress",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react",
    "next"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/profile/profile-04.tsx",
      "content": "import { LogOut, Flame, Shield, ArrowUpRight } from \"lucide-react\";\nimport Image from \"next/image\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\n\ninterface Profile04Props {\n    name: string;\n    role: string;\n    avatar: string;\n    subscription?: string;\n    email?: string;\n    level?: number;\n    currentExp?: number;\n    maxExp?: number;\n}\n\nconst defaultProfile = {\n    name: \"Kokonut\",\n    role: \"Making apps\",\n    avatar: \"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-04-uuYHWIRvVPi01gEt6NwnGyjqLeeZhz.png\",\n    subscription: \"Maker\",\n    email: \"hello@kokonutui.com\",\n    level: 42,\n    currentExp: 2800,\n    maxExp: 4000,\n} satisfies Required<Profile04Props>;\n\nexport default function Profile04({\n    name = defaultProfile.name,\n    role = defaultProfile.role,\n    avatar = defaultProfile.avatar,\n    subscription = defaultProfile.subscription,\n    email = defaultProfile.email,\n    level = defaultProfile.level,\n    currentExp = defaultProfile.currentExp,\n    maxExp = defaultProfile.maxExp,\n}: Partial<Profile04Props> = defaultProfile) {\n    const menuItems = [\n        {\n            icon: <ArrowUpRight className=\"w-4 h-4 text-amber-500\" />,\n            label: \"Current Level\",\n            value: level,\n            desc: `${currentExp} / ${maxExp} XP`,\n            progress: (currentExp / maxExp) * 100,\n        },\n        {\n            icon: <Flame className=\"w-4 h-4 text-red-500\" />,\n            label: \"Daily Streak\",\n            value: \"7 days\",\n            desc: \"ðŸ”¥ Keep it up!\",\n        },\n        {\n            icon: <Shield className=\"w-4 h-4 text-emerald-500\" />,\n            label: \"Achievements\",\n            value: \"12/30\",\n            desc: \"Master III\",\n        },\n    ];\n\n    return (\n        <div className=\"w-full max-w-md mx-auto\">\n            <div\n                className=\"relative p-6 rounded-2xl border border-zinc-200 dark:border-zinc-800 \n                bg-linear-to-b from-white to-zinc-50/50 dark:from-zinc-900 dark:to-zinc-900/50\"\n            >\n                <div className=\"flex items-start justify-between mb-6\">\n                    <div className=\"flex gap-4\">\n                        <div className=\"flex flex-col items-center\">\n                            <Image\n                                src={avatar}\n                                alt={name}\n                                width={64}\n                                height={64}\n                                className=\"rounded-xl ring-2 ring-zinc-100 dark:ring-zinc-800\"\n                            />\n                            <Badge\n                                variant=\"secondary\"\n                                className=\"mt-2 px-2 py-0.5 text-xs font-medium \n                                    bg-linear-to-r from-amber-100 to-amber-200 \n                                    dark:from-amber-900/50 dark:to-amber-800/50 \n                                    text-amber-700 dark:text-amber-400\n                                    border-amber-200/50 dark:border-amber-800/50\"\n                            >\n                                {subscription}\n                            </Badge>\n                        </div>\n                        <div className=\"space-y-1\">\n                            <p className=\"text-sm text-zinc-500\">{role}</p>\n                            <p className=\"text-sm text-zinc-400\">{email}</p>\n                        </div>\n                    </div>\n                    <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"text-zinc-400 hover:text-zinc-600 dark:hover:text-zinc-300\"\n                    >\n                        <LogOut className=\"w-4 h-4\" />\n                    </Button>\n                </div>\n\n                <div className=\"space-y-4\">\n                    {menuItems.map((item) => (\n                        <div\n                            key={item.label}\n                            className=\"p-4 rounded-xl bg-zinc-50 dark:bg-zinc-800/50 \n                                border border-zinc-200/50 dark:border-zinc-800/50\"\n                        >\n                            <div className=\"flex items-center justify-between mb-2\">\n                                <div className=\"flex items-center gap-2\">\n                                    {item.icon}\n                                    <span className=\"text-sm font-medium\">\n                                        {item.label}\n                                    </span>\n                                </div>\n                                <span className=\"text-lg font-semibold\">\n                                    {item.value}\n                                </span>\n                            </div>\n                            {item.progress ? (\n                                <div className=\"space-y-2\">\n                                    <Progress\n                                        value={item.progress}\n                                        className=\"h-2\"\n                                    />\n                                    <p className=\"text-xs text-zinc-400\">\n                                        {item.desc}\n                                    </p>\n                                </div>\n                            ) : (\n                                <p className=\"text-xs text-zinc-400\">\n                                    {item.desc}\n                                </p>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/profile/profile-04.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-zinc-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-hidden focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 dark:border-zinc-800 dark:focus:ring-zinc-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-zinc-900 text-zinc-50 hover:bg-zinc-900/80 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/80\",\n        secondary:\n          \"border-transparent bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-zinc-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/80\",\n        outline: \"text-zinc-950 dark:text-zinc-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
      "path": "components/ui/badge.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/progress.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-zinc-900 transition-all dark:bg-zinc-50\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
      "path": "components/ui/progress.tsx"
    }
  ]
}
