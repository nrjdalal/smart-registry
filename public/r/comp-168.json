{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components/smart-registry/comp-168",
  "type": "registry:component",
  "dependencies": [
    "react",
    "@radix-ui/react-radio-group",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/smart-registry/comp-168.tsx",
      "content": "import { RadioGroup, RadioGroupItem } from \"@/registry/default/ui/radio-group\";\nimport { useId } from \"react\";\n\nexport default function Component() {\n  const id = useId();\n  return (\n    <>\n      <fieldset className=\"space-y-4\">\n        <legend className=\"text-foreground text-sm leading-none font-medium\">\n          How likely are you to recommend us?\n        </legend>\n        <RadioGroup className=\"flex gap-0 -space-x-px rounded-md shadow-xs\">\n          {[\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"].map((value) => (\n            <label\n              key={value}\n              className=\"border-input has-data-[state=checked]:border-ring focus-within:border-ring focus-within:ring-ring/50 relative flex size-9 flex-1 cursor-pointer flex-col items-center justify-center gap-3 border text-center text-sm font-medium transition-[color,box-shadow] outline-none first:rounded-s-md last:rounded-e-md focus-within:ring-[3px] has-data-disabled:cursor-not-allowed has-data-disabled:opacity-50 has-data-[state=checked]:z-10\"\n            >\n              <RadioGroupItem\n                id={`${id}-${value}`}\n                value={value}\n                className=\"sr-only after:absolute after:inset-0\"\n              />\n              {value}\n            </label>\n          ))}\n        </RadioGroup>\n      </fieldset>\n      <div className=\"mt-1 flex justify-between text-xs font-medium\">\n        <p>\n          <span className=\"text-base\">üò°</span> Not likely\n        </p>\n        <p>\n          Very Likely <span className=\"text-base\">üòç</span>\n        </p>\n      </div>\n    </>\n  );\n}\n",
      "path": "registry/default/components/comp-168.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/smart-registry/radio-group.tsx",
      "content": "\"use client\";\n\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\n\nfunction RadioGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {\n  return (\n    <RadioGroupPrimitive.Root\n      data-slot=\"radio-group\"\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction RadioGroupItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(\n        \"border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center text-current\">\n        <svg\n          width=\"6\"\n          height=\"6\"\n          viewBox=\"0 0 6 6\"\n          fill=\"currentcolor\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"3\" cy=\"3\" r=\"3\" />\n        </svg>\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  );\n}\n\nexport { RadioGroup, RadioGroupItem };\n",
      "path": "registry/default/ui/radio-group.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/smart-registry/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ]
}