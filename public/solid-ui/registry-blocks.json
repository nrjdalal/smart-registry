{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "registry-blocks",
  "type": "registry:file",
  "dependencies": [
    "valibot"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "registry-blocks.ts",
      "content": "import type { Registry } from \"@/schema\"\n\nexport const blocks: Registry = [\n  {\n    name: \"sidebar-01\",\n    description: \"A simple sidebar with navigation grouped by section\",\n    type: \"block\",\n    registryDependencies: [\"sidebar\", \"breadcrumb\", \"separator\", \"label\", \"dropdown-menu\"],\n    files: [\n      {\n        path: \"block/sidebar-01/index.tsx\",\n        type: \"page\",\n        target: \"app/dashboard/page.tsx\"\n      },\n      {\n        path: \"block/sidebar-01/components/app-sidebar.tsx\",\n        type: \"component\"\n      },\n      {\n        path: \"block/sidebar-01/components/search-form.tsx\",\n        type: \"component\"\n      },\n      {\n        path: \"block/sidebar-01/components/version-switcher.tsx\",\n        type: \"component\"\n      }\n    ]\n  },\n  {\n    name: \"demo-sidebar\",\n    type: \"block\",\n    files: [\n      {\n        path: \"block/demo-sidebar.tsx\",\n        type: \"component\"\n      }\n    ]\n  }\n]\n",
      "path": "src/registry/registry-blocks.ts"
    },
    {
      "type": "registry:file",
      "target": "schema.ts",
      "content": "import * as v from \"valibot\"\n\nexport const registryTypeSchema = v.picklist([\"ui\", \"example\", \"block\", \"page\", \"component\"])\n\nexport const registryFileSchema = v.object({\n  path: v.string(),\n  content: v.optional(v.string()),\n  type: registryTypeSchema,\n  target: v.optional(v.string())\n})\n\nexport const registryItemSchema = v.object({\n  name: v.string(),\n  dependencies: v.optional(v.array(v.string())),\n  registryDependencies: v.optional(v.array(v.string())),\n  files: v.array(registryFileSchema),\n  type: registryTypeSchema,\n  description: v.optional(v.string())\n})\n\nexport const registryIndexSchema = v.record(\n  v.string(),\n  v.object({ ...registryItemSchema.entries, component: v.any() })\n)\n\nexport const registrySchema = v.array(registryItemSchema)\n\nexport type RegistryItem = v.InferOutput<typeof registryItemSchema>\nexport type RegistryIndex = v.InferOutput<typeof registryIndexSchema>\nexport type Registry = v.InferOutput<typeof registrySchema>\n",
      "path": "src/registry/schema.ts"
    }
  ]
}
