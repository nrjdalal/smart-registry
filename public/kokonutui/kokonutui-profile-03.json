{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "kokonutui-profile-03",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-avatar",
    "@radix-ui/react-label",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/profile/profile-03.tsx",
      "content": "import { Sparkles } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\n\ninterface ProfileFormProps {\n    defaultValues?: {\n        name: string;\n        username: string;\n        avatar: string;\n        bio: string;\n        location?: string;\n        website?: string;\n        twitter?: string;\n        instagram?: string;\n    };\n}\n\nexport default function ProfileForm({ defaultValues }: ProfileFormProps) {\n    return (\n        <div className=\"w-full max-w-2xl mx-auto space-y-8 p-6 bg-white/50 dark:bg-zinc-950/50 backdrop-blur-xs rounded-xl border border-zinc-200/80 dark:border-zinc-800/80 shadow-xs\">\n            <div className=\"flex items-center justify-center gap-6\">\n                <Avatar className=\"h-24 w-24 rounded-full border-2 border-zinc-200/80 dark:border-zinc-800/80 shadow-xs\">\n                    <AvatarImage\n                        src={defaultValues?.avatar}\n                        className=\"rounded-full object-cover\"\n                    />\n                    <AvatarFallback className=\"bg-zinc-100 dark:bg-zinc-900\">\n                        SC\n                    </AvatarFallback>\n                </Avatar>\n                <Button\n                    variant=\"outline\"\n                    className=\"h-24 w-24 rounded-full border-2 border-dashed border-zinc-200/80 dark:border-zinc-800/80 \n                             hover:border-zinc-300 dark:hover:border-zinc-700 hover:bg-zinc-50 dark:hover:bg-zinc-900/50\n                             transition-colors shadow-sm\"\n                >\n                    <Sparkles className=\"h-6 w-6 text-zinc-600 dark:text-zinc-400\" />\n                </Button>\n            </div>\n            <p className=\"text-zinc-700 dark:text-zinc-300 w-full text-center text-sm hover:cursor-pointer\">\n                Upload / Generate a new avatar\n            </p>\n\n            <div className=\"grid gap-6\">\n                <div className=\"grid gap-2\">\n                    <Label\n                        htmlFor=\"name\"\n                        className=\"text-zinc-700 dark:text-zinc-300\"\n                    >\n                        Display Name\n                    </Label>\n                    <Input\n                        id=\"name\"\n                        placeholder=\"Your full name\"\n                        defaultValue={defaultValues?.name}\n                        autoComplete=\"off\"\n                        className=\"bg-white dark:bg-zinc-900/50 border-zinc-200/80 dark:border-zinc-800/80\n                                 focus:border-zinc-300 dark:focus:border-zinc-700\n                                 focus:ring-1 focus:ring-zinc-200 dark:focus:ring-zinc-800\n                                 placeholder:text-zinc-400 dark:placeholder:text-zinc-600\"\n                    />\n                </div>\n\n                <div className=\"grid gap-2\">\n                    <Label\n                        htmlFor=\"username\"\n                        className=\"text-zinc-700 dark:text-zinc-300\"\n                    >\n                        Username\n                    </Label>\n                    <Input\n                        id=\"username\"\n                        placeholder=\"@username\"\n                        defaultValue={defaultValues?.username}\n                        autoComplete=\"off\"\n                        className=\"bg-white dark:bg-zinc-900/50 border-zinc-200/80 dark:border-zinc-800/80\n                                 focus:border-zinc-300 dark:focus:border-zinc-700\n                                 focus:ring-1 focus:ring-zinc-200 dark:focus:ring-zinc-800\n                                 placeholder:text-zinc-400 dark:placeholder:text-zinc-600\"\n                    />\n                </div>\n\n                <div className=\"grid gap-2\">\n                    <Label\n                        htmlFor=\"bio\"\n                        className=\"text-zinc-700 dark:text-zinc-300\"\n                    >\n                        Bio\n                    </Label>\n                    <Textarea\n                        id=\"bio\"\n                        placeholder=\"Tell us about yourself\"\n                        className=\"resize-none bg-white dark:bg-zinc-900/50 border-zinc-200/80 dark:border-zinc-800/80\n                                 focus:border-zinc-300 dark:focus:border-zinc-700\n                                 focus:ring-1 focus:ring-zinc-200 dark:focus:ring-zinc-800\n                                 placeholder:text-zinc-400 dark:placeholder:text-zinc-600\"\n                        rows={4}\n                        defaultValue={defaultValues?.bio}\n                        autoComplete=\"off\"\n                    />\n                </div>\n                <div className=\"space-y-4\">\n                    <h3 className=\"text-sm font-medium text-zinc-700 dark:text-zinc-300\">\n                        Social Links\n                    </h3>\n                    <div className=\"grid gap-4\">\n                        {[\"website\", \"twitter\", \"instagram\"].map((social) => (\n                            <div key={social} className=\"grid gap-2\">\n                                <Label\n                                    htmlFor={social}\n                                    className=\"capitalize text-zinc-700 dark:text-zinc-300\"\n                                >\n                                    {social}\n                                </Label>\n                                <Input\n                                    id={social}\n                                    placeholder={\n                                        social === \"website\"\n                                            ? \"https://your-website.com\"\n                                            : \"@username\"\n                                    }\n                                    defaultValue={\n                                        defaultValues?.[\n                                            social as keyof typeof defaultValues\n                                        ]\n                                    }\n                                    autoComplete=\"off\"\n                                    className=\"bg-white dark:bg-zinc-900/50 border-zinc-200/80 dark:border-zinc-800/80\n                                             focus:border-zinc-300 dark:focus:border-zinc-700\n                                             focus:ring-1 focus:ring-zinc-200 dark:focus:ring-zinc-800\n                                             placeholder:text-zinc-400 dark:placeholder:text-zinc-600\"\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-end gap-4\">\n                <Button\n                    variant=\"outline\"\n                    className=\"border-zinc-200/80 dark:border-zinc-800/80 hover:bg-zinc-50 dark:hover:bg-zinc-900/50\"\n                >\n                    Cancel\n                </Button>\n                <Button className=\"bg-zinc-900 dark:bg-zinc-100 text-white dark:text-zinc-900 hover:bg-zinc-800 dark:hover:bg-zinc-200\">\n                    Save Changes\n                </Button>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/profile/profile-03.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/avatar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "path": "components/ui/avatar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/input.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-zinc-200 bg-white px-3 py-2 text-base ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
      "path": "components/ui/input.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/label.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
      "path": "components/ui/label.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/textarea.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface TextareaProps\n    extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n    ({ className, ...props }, ref) => {\n        return (\n            <textarea\n                className={cn(\n                    \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n",
      "path": "components/ui/textarea.tsx"
    }
  ]
}
