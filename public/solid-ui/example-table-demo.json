{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "example-table-demo",
  "type": "registry:file",
  "dependencies": [
    "clsx",
    "solid-js",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "example/table-demo.tsx",
      "content": "import { For } from \"solid-js\"\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow\n} from \"@/components/ui/table\"\n\nconst invoices = [\n  {\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\"\n  },\n  {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\"\n  },\n  {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\"\n  },\n  {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\"\n  },\n  {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\"\n  },\n  {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\"\n  },\n  {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\"\n  }\n]\n\nexport default function TableDemo() {\n  return (\n    <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead class=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead class=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        <For each={invoices}>\n          {(invoice) => (\n            <TableRow>\n              <TableCell class=\"font-medium\">{invoice.invoice}</TableCell>\n              <TableCell>{invoice.paymentStatus}</TableCell>\n              <TableCell>{invoice.paymentMethod}</TableCell>\n              <TableCell class=\"text-right\">{invoice.totalAmount}</TableCell>\n            </TableRow>\n          )}\n        </For>\n      </TableBody>\n    </Table>\n  )\n}\n",
      "path": "src/registry/example/table-demo.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import type { ClassValue } from \"clsx\"\nimport { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function clamp(val: number, min: number, max: number) {\n  return val > max ? max : val < min ? min : val\n}\n\nexport function toggleValue<T>(array: T[], value: T): T[] {\n  return array.includes(value) ? array.filter((item) => item !== value) : [...array, value]\n}\n",
      "path": "src/lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/table.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table: Component<ComponentProps<\"table\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <div class=\"relative w-full overflow-auto\">\n      <table class={cn(\"w-full caption-bottom text-sm\", local.class)} {...others} />\n    </div>\n  )\n}\n\nconst TableHeader: Component<ComponentProps<\"thead\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <thead class={cn(\"[&_tr]:border-b\", local.class)} {...others} />\n}\n\nconst TableBody: Component<ComponentProps<\"tbody\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <tbody class={cn(\"[&_tr:last-child]:border-0\", local.class)} {...others} />\n}\n\nconst TableFooter: Component<ComponentProps<\"tfoot\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <tfoot class={cn(\"bg-primary font-medium text-primary-foreground\", local.class)} {...others} />\n  )\n}\n\nconst TableRow: Component<ComponentProps<\"tr\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <tr\n      class={cn(\n        \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nconst TableHead: Component<ComponentProps<\"th\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <th\n      class={cn(\n        \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nconst TableCell: Component<ComponentProps<\"td\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <td class={cn(\"p-2 align-middle [&:has([role=checkbox])]:pr-0\", local.class)} {...others} />\n  )\n}\n\nconst TableCaption: Component<ComponentProps<\"caption\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <caption class={cn(\"mt-4 text-sm text-muted-foreground\", local.class)} {...others} />\n}\n\nexport { Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption }\n",
      "path": "src/registry/ui/table.tsx"
    }
  ]
}
