{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "event-toast",
  "type": "registry:component",
  "dependencies": [
    "next",
    "sonner"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/event-toast.tsx",
      "content": "\"use client\";\n\nimport Link from \"next/link\";\n// import { toast } from \"sonner\";\nimport { useEffect } from \"react\";\n\nimport React from \"react\";\nimport { toast as sonnerToast } from \"sonner\";\nimport { ArrowRightBroken } from \"@/components/icons/arrow-right-broken\";\n\n/** A fully custom toast that still maintains the animations and interactions. */\nfunction Toast(props: ToastProps) {\n    const { title, description, id } = props;\n\n    return (\n        <Link\n            href=\"https://arca.directory/?utm_source=kokonutui.com&utm_medium=toast\"\n            target=\"_blank\"\n            className=\"block\"\n            tabIndex={0}\n            aria-label={`${title} - ${description}`}\n        >\n            <div\n                className=\"group flex rounded-lg bg-zinc-100 dark:bg-zinc-800 border border-black/10 dark:border-white/10 w-full md:max-w-[320px] items-center p-2 hover:border-black/20 dark:hover:border-white/20 hover:shadow-[0_2px_8px_rgba(0,0,0,0.08)] dark:hover:shadow-[0_2px_8px_rgba(255,255,255,0.05)] transition-all relative\"\n                style={{\n                    animation: \"slideIn 0.3s ease-out forwards\",\n                }}\n            >\n                <img\n                    src=\"/arca-directory.svg\"\n                    alt=\"Arca Directory\"\n                    className=\"w-12 h-12 mr-3 flex-shrink-0\"\n                />\n                <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium tracking-tighter text-zinc-900 dark:text-white\">\n                        {title}\n                    </p>\n                    <p className=\"text-xs tracking-tighter text-zinc-700 dark:text-zinc-300\">\n                        {description}\n                    </p>\n                </div>\n                <ArrowRightBroken className=\"w-4 h-4 -rotate-90 group-hover:-rotate-45 transition-transform duration-300\" />\n\n                {/* Close button that appears on hover */}\n                <button\n                    onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        sonnerToast.dismiss(id);\n                    }}\n                    className=\"absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded-full hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                    aria-label=\"Close toast\"\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"14\"\n                        height=\"14\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"text-zinc-500 dark:text-zinc-400\"\n                    >\n                        <path d=\"M18 6 6 18\"></path>\n                        <path d=\"m6 6 12 12\"></path>\n                    </svg>\n                </button>\n            </div>\n            <style jsx>{`\n                @keyframes slideIn {\n                    0% {\n                        transform: translateY(100%);\n                        opacity: 0;\n                    }\n                    100% {\n                        transform: translateY(0);\n                        opacity: 1;\n                    }\n                }\n            `}</style>\n        </Link>\n    );\n}\n\nfunction toast(toast: Omit<ToastProps, \"id\"> & { duration?: number }) {\n    return sonnerToast.custom(\n        (id) => (\n            <Toast\n                id={id}\n                title={toast.title}\n                description={toast.description}\n            />\n        ),\n        { duration: toast.duration || 4000 } // Default is 4000ms if not specified\n    );\n}\n\ninterface ToastProps {\n    id: string | number;\n    title: string;\n    description: string;\n}\n\nexport const EventToaster = () => {\n    useEffect(() => {\n        // Add a 1-second delay before showing the toast\n        const timeoutId = setTimeout(() => {\n            toast({\n                title: \"Arca.directory\",\n                description:\n                    \"Find the best tools for entrepreneurs, developers, and designers.\",\n                duration: 6000, // Reduced to 2 seconds (from default 4 seconds)\n            });\n        }, 1000);\n\n        // Clean up the timeout if the component unmounts\n        return () => clearTimeout(timeoutId);\n    }, []);\n\n    return null;\n};\n\nexport default EventToaster;\n",
      "path": "components/event-toast.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/arrow-right-broken.tsx",
      "content": "import type { SVGProps } from \"react\";\n\nexport function ArrowRightBroken(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 24 24\"\n            {...props}\n        >\n            <title>Arrow Right Down Broken</title>\n            <path\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.5\"\n                d=\"M18 18H9m9 0V9m0 9l-6.5-6.5M6 6l2.5 2.5\"\n            />\n        </svg>\n    );\n}\n",
      "path": "components/icons/arrow-right-broken.tsx"
    }
  ]
}
