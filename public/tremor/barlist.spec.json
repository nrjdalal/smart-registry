{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "barlist.spec",
  "type": "registry:component",
  "devDependencies": [
    "@playwright/test"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/BarList/barlist.spec.ts",
      "content": "import { expect, test } from \"@playwright/test\"\n\ntest.describe(\"Expect barlist default\", () => {\n  test(\"to render a barlist\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--default\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\"),\n    ).toBeVisible()\n  })\n\n  test(\"to render a barlist with bar, label and value\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--default\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByText(\"/home\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\")\n        .locator(\"div\")\n        .filter({ hasText: \"/home\" })\n        .nth(2),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^843$/ }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByText(\"/documentation\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\")\n        .locator(\"div\")\n        .filter({ hasText: \"/documentation\" })\n        .nth(2),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^384$/ }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByText(\"/blocks\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\")\n        .locator(\"div\")\n        .filter({ hasText: \"/blocks\" })\n        .nth(2),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^108$/ }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByText(\"/imprint\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\")\n        .locator(\"div\")\n        .filter({ hasText: \"/imprint\" })\n        .nth(2),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^46$/ }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByText(\"/cancellation\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\")\n        .locator(\"div\")\n        .filter({ hasText: \"/cancellation\" })\n        .nth(2),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^3$/ }),\n    ).toBeVisible()\n  })\n})\n\ntest.describe(\"Expect barlist href and value formatter\", () => {\n  test(\"to render a barlist with bar, href and formatted value\", async ({\n    page,\n  }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-href-and-value-formatter\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"link\", { name: \"/home\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^843 Visitors$/ }),\n    ).toBeVisible()\n  })\n})\n\ntest.describe(\"Expect barlist sort order\", () => {\n  test(\"to have aria-sort='ascending'\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-sort-order-ascending\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\"),\n    ).toHaveAttribute(\"aria-sort\", \"ascending\")\n  })\n})\n\ntest.describe(\"Expect barlist sort order\", () => {\n  test(\"to have aria-sort='none'\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-sort-order-none\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist\"),\n    ).toHaveAttribute(\"aria-sort\", \"none\")\n  })\n})\n\ntest.describe(\"Expect barlist onvaluechange\", () => {\n  test(\"to be clickable\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-on-value-change\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist-onvaluechange\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/home\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/documentation\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/blocks\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/imprint\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/cancellation\" }),\n    ).toBeVisible()\n  })\n\n  test(\"to be clickable and return value\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-on-value-change\",\n    )\n    await page\n      .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n      .getByRole(\"button\", { name: \"/cancellation\" })\n      .click()\n    //  improve test with check of payload\n  })\n})\n\ntest.describe(\"Expect barlist onvaluechange and href\", () => {\n  test(\"to be clickable,have href and button\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-on-value-change-and-href\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"barlist-onvaluechangehref\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"link\", { name: \"/home\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/home\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^843$/ }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"link\", { name: \"/documentation\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"/documentation\" }),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .locator(\"div\")\n        .filter({ hasText: /^384$/ }),\n    ).toBeVisible()\n  })\n\n  test(\"to be clickable and return value\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/visualization-barlist--with-on-value-change-and-href\",\n    )\n    await page\n      .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n      .getByRole(\"button\", { name: \"/cancellation\" })\n      .click()\n    //  improve test with check of payload\n  })\n})\n",
      "path": "src/components/BarList/barlist.spec.ts"
    }
  ]
}
