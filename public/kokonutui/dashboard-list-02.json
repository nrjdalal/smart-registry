{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard-list-02",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/list-02.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport {\n    ArrowUpRight,\n    ArrowDownLeft,\n    Wallet,\n    ShoppingCart,\n    CreditCard,\n    type LucideIcon,\n    ArrowRight,\n} from \"lucide-react\";\nimport {\n    Card,\n    CardContent,\n    CardFooter,\n    CardHeader,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface Transaction {\n    id: string;\n    title: string;\n    amount: string;\n    type: \"incoming\" | \"outgoing\";\n    category: string;\n    icon: LucideIcon;\n    timestamp: string;\n    status: \"completed\" | \"pending\" | \"failed\";\n}\n\ninterface List02Props {\n    transactions?: Transaction[];\n    className?: string;\n}\n\nconst TRANSACTIONS: Transaction[] = [\n    {\n        id: \"1\",\n        title: \"Apple Store Purchase\",\n        amount: \"$999.00\",\n        type: \"outgoing\",\n        category: \"shopping\",\n        icon: ShoppingCart,\n        timestamp: \"Today, 2:45 PM\",\n        status: \"completed\",\n    },\n    {\n        id: \"2\",\n        title: \"Salary Deposit\",\n        amount: \"$4,500.00\",\n        type: \"incoming\",\n        category: \"transport\",\n        icon: Wallet,\n        timestamp: \"Today, 9:00 AM\",\n        status: \"completed\",\n    },\n    {\n        id: \"3\",\n        title: \"Netflix Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n    {\n        id: \"4\",\n        title: \"Apple Store Purchase\",\n        amount: \"$999.00\",\n        type: \"outgoing\",\n        category: \"shopping\",\n        icon: ShoppingCart,\n        timestamp: \"Today, 2:45 PM\",\n        status: \"completed\",\n    },\n    {\n        id: \"5\",\n        title: \"Supabase Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n    {\n        id: \"6\",\n        title: \"Vercel Subscription\",\n        amount: \"$15.99\",\n        type: \"outgoing\",\n        category: \"entertainment\",\n        icon: CreditCard,\n        timestamp: \"Yesterday\",\n        status: \"pending\",\n    },\n];\n\nexport default function List02({\n    transactions = TRANSACTIONS,\n    className,\n}: List02Props) {\n    return (\n        <Card\n            className={cn(\n                \"w-full max-w-xl\",\n                \"bg-white dark:bg-zinc-900/70\",\n                \"border border-zinc-100 dark:border-zinc-800\",\n                \"rounded-xl shadow-sm backdrop-blur-xl\",\n                className\n            )}\n        >\n            <CardHeader className=\"p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                    <h2 className=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n                        Recent Activity\n                        <span className=\"text-xs font-normal text-zinc-600 dark:text-zinc-400 ml-1\">\n                            (23 transactions)\n                        </span>\n                    </h2>\n                    <span className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                        This Month\n                    </span>\n                </div>\n            </CardHeader>\n\n            <CardContent className=\"p-3 pt-0\">\n                <div className=\"space-y-1\">\n                    {transactions.map((transaction) => (\n                        <div\n                            key={transaction.id}\n                            className={cn(\n                                \"group flex items-center gap-3\",\n                                \"p-2 rounded-lg\",\n                                \"hover:bg-zinc-100 dark:hover:bg-zinc-800/50\",\n                                \"transition-all duration-200\"\n                            )}\n                        >\n                            <div\n                                className={cn(\n                                    \"p-2 rounded-lg\",\n                                    \"bg-zinc-100 dark:bg-zinc-800\",\n                                    \"border border-zinc-200 dark:border-zinc-700\"\n                                )}\n                            >\n                                <transaction.icon className=\"w-4 h-4 text-zinc-900 dark:text-zinc-100\" />\n                            </div>\n\n                            <div className=\"flex-1 flex items-center justify-between min-w-0\">\n                                <div className=\"space-y-0.5\">\n                                    <h3 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                        {transaction.title}\n                                    </h3>\n                                    <p className=\"text-[11px] text-zinc-600 dark:text-zinc-400\">\n                                        {transaction.timestamp}\n                                    </p>\n                                </div>\n\n                                <div className=\"flex items-center gap-1.5 pl-3\">\n                                    <span\n                                        className={cn(\n                                            \"text-xs font-medium\",\n                                            transaction.type === \"incoming\"\n                                                ? \"text-emerald-600 dark:text-emerald-400\"\n                                                : \"text-red-600 dark:text-red-400\"\n                                        )}\n                                    >\n                                        {transaction.type === \"incoming\"\n                                            ? \"+\"\n                                            : \"-\"}\n                                        {transaction.amount}\n                                    </span>\n                                    {transaction.type === \"incoming\" ? (\n                                        <ArrowDownLeft className=\"w-3.5 h-3.5 text-emerald-600 dark:text-emerald-400\" />\n                                    ) : (\n                                        <ArrowUpRight className=\"w-3.5 h-3.5 text-red-600 dark:text-red-400\" />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n\n            <CardFooter className=\"p-2 border-t border-zinc-100 dark:border-zinc-800\">\n                <Button\n                    variant=\"default\"\n                    size=\"sm\"\n                    className={cn(\n                        \"w-full flex items-center justify-center gap-2\",\n                        \"text-xs font-medium\",\n                        \"bg-gradient-to-r from-zinc-900 to-zinc-800\",\n                        \"dark:from-zinc-50 dark:to-zinc-200\",\n                        \"text-zinc-50 dark:text-zinc-900\",\n                        \"hover:from-zinc-800 hover:to-zinc-700\",\n                        \"dark:hover:from-zinc-200 dark:hover:to-zinc-300\",\n                        \"shadow-sm hover:shadow\",\n                        \"transform transition-all duration-200\",\n                        \"hover:-translate-y-0.5\",\n                        \"active:translate-y-0\"\n                    )}\n                >\n                    <span>View All Transactions</span>\n                    <ArrowRight className=\"w-3.5 h-3.5\" />\n                </Button>\n            </CardFooter>\n        </Card>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/list-02.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-zinc-200 bg-white text-zinc-950 shadow-xs dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "components/ui/card.tsx"
    }
  ]
}
