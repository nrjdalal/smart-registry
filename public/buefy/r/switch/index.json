{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "switch/index",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "target": "components/switch/index.js",
      "content": "import Switch from '@/components/switch/Switch'\n\nimport { use, registerComponent } from '@/utils/plugins'\n\nconst Plugin = {\n    install(Vue) {\n        registerComponent(Vue, Switch)\n    }\n}\n\nuse(Plugin)\n\nexport default Plugin\n\nexport {\n    Switch as BSwitch\n}\n",
      "path": "src/components/switch/index.js"
    },
    {
      "type": "registry:component",
      "target": "components/switch/Switch.vue",
      "content": "<template>\n    <label\n        class=\"switch\"\n        :class=\"newClass\"\n        ref=\"label\"\n        :disabled=\"disabled\"\n        @click=\"focus\"\n        @keydown.prevent.enter=\"$refs.label.click()\"\n        @mousedown=\"isMouseDown = true\"\n        @mouseup=\"isMouseDown = false\"\n        @mouseout=\"isMouseDown = false\"\n        @blur=\"isMouseDown = false\">\n        <input\n            v-model=\"computedValue\"\n            type=\"checkbox\"\n            ref=\"input\"\n            @click.stop\n            :disabled=\"disabled\"\n            :name=\"name\"\n            :required=\"required\"\n            :value=\"nativeValue\"\n            :true-value=\"trueValue\"\n            :false-value=\"falseValue\"\n            :aria-labelledby=\"ariaLabelledby\">\n        <span\n            class=\"check\"\n            :class=\"checkClasses\"/>\n        <span\n            v-if=\"showControlLabel\"\n            :id=\"ariaLabelledby\"\n            class=\"control-label\"><slot/></span>\n    </label>\n</template>\n\n<script>\nimport config from '@/utils/config'\n\nexport default {\n    name: 'BSwitch',\n    props: {\n        value: [String, Number, Boolean, Function, Object, Array, Date],\n        nativeValue: [String, Number, Boolean, Function, Object, Array, Date],\n        disabled: Boolean,\n        type: String,\n        passiveType: String,\n        name: String,\n        required: Boolean,\n        size: String,\n        ariaLabelledby: String,\n        trueValue: {\n            type: [String, Number, Boolean, Function, Object, Array, Date],\n            default: true\n        },\n        falseValue: {\n            type: [String, Number, Boolean, Function, Object, Array, Date],\n            default: false\n        },\n        rounded: {\n            type: Boolean,\n            default: () => {\n                return config.defaultSwitchRounded\n            }\n        },\n        outlined: {\n            type: Boolean,\n            default: false\n        },\n        leftLabel: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            newValue: this.value,\n            isMouseDown: false\n        }\n    },\n    computed: {\n        computedValue: {\n            get() {\n                return this.newValue\n            },\n            set(value) {\n                this.newValue = value\n                this.$emit('input', value)\n            }\n        },\n        newClass() {\n            return [\n                this.size,\n                {\n                    'is-disabled': this.disabled,\n                    'is-rounded': this.rounded,\n                    'is-outlined': this.outlined,\n                    'has-left-label': this.leftLabel\n                }\n            ]\n        },\n        checkClasses() {\n            return [\n                { 'is-elastic': this.isMouseDown && !this.disabled },\n                (this.passiveType && `${this.passiveType}-passive`),\n                this.type\n            ]\n        },\n        showControlLabel() {\n            return !!this.$slots.default\n        }\n    },\n    watch: {\n        /**\n        * When v-model change, set internal value.\n        */\n        value(value) {\n            this.newValue = value\n        }\n    },\n    methods: {\n        focus() {\n            // MacOS FireFox and Safari do not focus when clicked\n            this.$refs.input.focus()\n        }\n    }\n}\n</script>\n",
      "path": "src/components/switch/Switch.vue"
    },
    {
      "type": "registry:lib",
      "target": "utils/config.js",
      "content": "let config = {\n    defaultContainerElement: null,\n    defaultIconPack: 'mdi',\n    defaultIconComponent: null,\n    defaultIconPrev: 'chevron-left',\n    defaultIconNext: 'chevron-right',\n    defaultLocale: undefined,\n    defaultDialogConfirmText: null,\n    defaultDialogCancelText: null,\n    defaultSnackbarDuration: 3500,\n    defaultSnackbarPosition: null,\n    defaultToastDuration: 2000,\n    defaultToastPosition: null,\n    defaultNotificationDuration: 2000,\n    defaultNotificationPosition: null,\n    defaultTooltipType: 'is-primary',\n    defaultTooltipDelay: null,\n    defaultTooltipCloseDelay: null,\n    defaultSidebarDelay: null,\n    defaultInputAutocomplete: 'on',\n    defaultDateFormatter: null,\n    defaultDateParser: null,\n    defaultDateCreator: null,\n    defaultTimeCreator: null,\n    defaultDayNames: null,\n    defaultMonthNames: null,\n    defaultFirstDayOfWeek: null,\n    defaultUnselectableDaysOfWeek: null,\n    defaultTimeFormatter: null,\n    defaultTimeParser: null,\n    defaultModalCanCancel: ['escape', 'x', 'outside', 'button'],\n    defaultModalScroll: null,\n    defaultDatepickerMobileNative: true,\n    defaultTimepickerMobileNative: true,\n    defaultTimepickerMobileModal: true,\n    defaultNoticeQueue: true,\n    defaultInputHasCounter: true,\n    defaultTaginputHasCounter: true,\n    defaultUseHtml5Validation: true,\n    defaultDropdownMobileModal: true,\n    defaultFieldLabelPosition: null,\n    defaultDatepickerYearsRange: [-100, 10],\n    defaultDatepickerNearbyMonthDays: true,\n    defaultDatepickerNearbySelectableMonthDays: false,\n    defaultDatepickerShowWeekNumber: false,\n    defaultDatepickerWeekNumberClickable: false,\n    defaultDatepickerMobileModal: true,\n    defaultTrapFocus: true,\n    defaultAutoFocus: true,\n    defaultButtonRounded: false,\n    defaultSwitchRounded: true,\n    defaultCarouselInterval: 3500,\n    defaultTabsExpanded: false,\n    defaultTabsAnimated: true,\n    defaultTabsType: null,\n    defaultStatusIcon: true,\n    defaultProgrammaticPromise: false,\n    defaultLinkTags: [\n        'a',\n        'button',\n        'input',\n        'router-link',\n        'nuxt-link',\n        'n-link',\n        'RouterLink',\n        'NuxtLink',\n        'NLink'\n    ],\n    defaultImageWebpFallback: null,\n    defaultImageLazy: true,\n    defaultImageResponsive: true,\n    defaultImageRatio: null,\n    defaultImageSrcsetFormatter: null,\n    defaultBreadcrumbTag: 'a',\n    defaultBreadcrumbAlign: 'is-left',\n    defaultBreadcrumbSeparator: '',\n    defaultBreadcrumbSize: 'is-medium',\n    customIconPacks: null\n}\n\nexport { config as default }\n\nexport const setOptions = (options) => { config = options }\n\nexport const setVueInstance = (Vue) => { VueInstance = Vue }\n\nexport let VueInstance\n",
      "path": "src/utils/config.js"
    },
    {
      "type": "registry:lib",
      "target": "utils/plugins.js",
      "content": "\nexport const use = (plugin) => {\n    if (typeof window !== 'undefined' && window.Vue) {\n        window.Vue.use(plugin)\n    }\n}\n\nexport const registerComponent = (Vue, component) => {\n    Vue.component(component.name, component)\n}\n\nexport const registerComponentProgrammatic = (Vue, property, component) => {\n    if (!Vue.prototype.$buefy) Vue.prototype.$buefy = {}\n    Vue.prototype.$buefy[property] = component\n}\n",
      "path": "src/utils/plugins.js"
    }
  ]
}
