{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components/smart-registry/comp-149",
  "type": "registry:component",
  "dependencies": [
    "react",
    "@radix-ui/react-checkbox",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/smart-registry/comp-149.tsx",
      "content": "import { Checkbox } from \"@/registry/default/ui/checkbox\"\nimport { useId } from \"react\"\n\nexport default function Component() {\n  const id = useId()\n\n  const items = [\n    { value: \"1\", label: \"Monday\", defaultChecked: true },\n    { value: \"2\", label: \"Tuesday\", defaultChecked: true },\n    { value: \"3\", label: \"Wednesday\" },\n    { value: \"4\", label: \"Thursday\", defaultChecked: true },\n    { value: \"5\", label: \"Friday\", defaultChecked: true },\n    { value: \"6\", label: \"Saturday\" },\n    { value: \"7\", label: \"Sunday\", disabled: true },\n  ]\n\n  return (\n    <fieldset className=\"space-y-4\">\n      <legend className=\"text-foreground text-sm leading-none font-medium\">\n        Days of the week\n      </legend>\n      <div className=\"flex gap-1.5\">\n        {items.map((item) => (\n          <label\n            key={`${id}-${item.value}`}\n            className=\"border-input has-data-[state=checked]:border-primary has-data-[state=checked]:bg-primary has-data-[state=checked]:text-primary-foreground has-focus-visible:border-ring has-focus-visible:ring-ring/50 relative flex size-9 cursor-pointer flex-col items-center justify-center gap-3 rounded-full border text-center shadow-xs transition-[color,box-shadow] outline-none has-focus-visible:ring-[3px] has-data-disabled:cursor-not-allowed has-data-disabled:opacity-50\"\n          >\n            <Checkbox\n              id={`${id}-${item.value}`}\n              value={item.value}\n              className=\"sr-only after:absolute after:inset-0\"\n              defaultChecked={item.defaultChecked}\n              disabled={item.disabled}\n            />\n            <span aria-hidden=\"true\" className=\"text-sm font-medium\">\n              {item.label[0]}\n            </span>\n            <span className=\"sr-only\">{item.label}</span>\n          </label>\n        ))}\n      </div>\n    </fieldset>\n  )\n}\n",
      "path": "registry/default/components/comp-149.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/smart-registry/checkbox.tsx",
      "content": "\"use client\"\n\nimport { cn } from \"@/registry/default/lib/utils\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport * as React from \"react\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-500\",\n        className,\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"grid place-content-center text-current\"\n      >\n        {props.checked === \"indeterminate\" ? (\n          <svg\n            width=\"9\"\n            height=\"9\"\n            viewBox=\"0 0 9 9\"\n            fill=\"currentcolor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M0.75 4.5C0.75 4.08579 1.08579 3.75 1.5 3.75H7.5C7.91421 3.75 8.25 4.08579 8.25 4.5C8.25 4.91421 7.91421 5.25 7.5 5.25H1.5C1.08579 5.25 0.75 4.91421 0.75 4.5Z\"\n            />\n          </svg>\n        ) : (\n          <svg\n            width=\"9\"\n            height=\"9\"\n            viewBox=\"0 0 9 9\"\n            fill=\"currentcolor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.53547 0.62293C8.88226 0.849446 8.97976 1.3142 8.75325 1.66099L4.5083 8.1599C4.38833 8.34356 4.19397 8.4655 3.9764 8.49358C3.75883 8.52167 3.53987 8.45309 3.3772 8.30591L0.616113 5.80777C0.308959 5.52987 0.285246 5.05559 0.563148 4.74844C0.84105 4.44128 1.31533 4.41757 1.62249 4.69547L3.73256 6.60459L7.49741 0.840706C7.72393 0.493916 8.18868 0.396414 8.53547 0.62293Z\"\n            />\n          </svg>\n        )}\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n",
      "path": "registry/default/ui/checkbox.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/smart-registry/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ]
}