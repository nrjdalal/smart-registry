{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cards",
  "type": "registry:component",
  "dependencies": [
    "@kobalte/core",
    "class-variance-authority",
    "clsx",
    "solid-js",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/cards/index.tsx",
      "content": "import { CookieSettings } from \"@/components/cards/cookie-settings\"\nimport { CreateAccount } from \"@/components/cards/create-account\"\nimport { Notifications } from \"@/components/cards/notifications\"\nimport { PaymentMethod } from \"@/components/cards/payment-method\"\nimport { ReportAnIssue } from \"@/components/cards/report-an-issue\"\nimport { ShareDocument } from \"@/components/cards/share-document\"\nimport { SolidUI } from \"@/components/cards/solid-ui\"\nimport { TeamMembers } from \"@/components/cards/team-members\"\n\nexport function Cards() {\n  return (\n    <>\n      <div class=\"md:hidden\">\n        <img\n          src=\"/examples/cards-light.png\"\n          width={1280}\n          height={1214}\n          alt=\"Cards\"\n          class=\"block dark:hidden\"\n        />\n        <img\n          src=\"/examples/cards-dark.png\"\n          width={1280}\n          height={1214}\n          alt=\"Cards\"\n          class=\"hidden dark:block\"\n        />\n      </div>\n      <div class=\"hidden items-start justify-center gap-6 rounded-lg p-8 md:grid lg:grid-cols-2 xl:grid-cols-3\">\n        <div class=\"col-span-2 grid items-start gap-6 lg:col-span-1\">\n          <CreateAccount />\n          <PaymentMethod />\n        </div>\n        <div class=\"col-span-2 grid items-start gap-6 lg:col-span-1\">\n          <TeamMembers />\n          <ShareDocument />\n          <Notifications />\n        </div>\n        <div class=\"col-span-2 grid items-start gap-6 lg:col-span-2 lg:grid-cols-2 xl:col-span-1 xl:grid-cols-1\">\n          <ReportAnIssue />\n          <SolidUI />\n          <CookieSettings />\n        </div>\n      </div>\n    </>\n  )\n}\n",
      "path": "src/components/cards/index.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/cookie-settings.tsx",
      "content": "import { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n} from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch, SwitchControl, SwitchThumb } from \"@/components/ui/switch\"\n\nexport function CookieSettings() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Cookie Settings</CardTitle>\n        <CardDescription>Manage your cookie settings here.</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-6\">\n        <div class=\"flex items-center justify-between space-x-2\">\n          <Label for=\"necessary\" class=\"flex flex-col space-y-1\">\n            <span>Strictly Necessary</span>\n            <span class=\"font-normal leading-snug text-muted-foreground\">\n              These cookies are essential in order to use the website and use its features.\n            </span>\n          </Label>\n          <Switch id=\"necessary\" defaultChecked>\n            <SwitchControl>\n              <SwitchThumb />\n            </SwitchControl>\n          </Switch>\n        </div>\n        <div class=\"flex items-center justify-between space-x-2\">\n          <Label for=\"functional\" class=\"flex flex-col space-y-1\">\n            <span>Functional Cookies</span>\n            <span class=\"font-normal leading-snug text-muted-foreground\">\n              These cookies allow the website to provide personalized functionality.\n            </span>\n          </Label>\n          <Switch id=\"functional\">\n            <SwitchControl>\n              <SwitchThumb />\n            </SwitchControl>\n          </Switch>\n        </div>\n        <div class=\"flex items-center justify-between space-x-2\">\n          <Label for=\"performance\" class=\"flex flex-col space-y-1\">\n            <span>Performance Cookies</span>\n            <span class=\"font-normal leading-snug text-muted-foreground\">\n              These cookies help to improve the performance of the website.\n            </span>\n          </Label>\n          <Switch id=\"performance\">\n            <SwitchControl>\n              <SwitchThumb />\n            </SwitchControl>\n          </Switch>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button variant=\"outline\" class=\"w-full\">\n          Save preferences\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/cookie-settings.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/create-account.tsx",
      "content": "import { IconBrandGithub, IconBrandGoogle } from \"@/components/icons\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n} from \"@/components/ui/card\"\nimport { TextField, TextFieldInput, TextFieldLabel } from \"@/components/ui/text-field\"\n\nexport function CreateAccount() {\n  return (\n    <Card>\n      <CardHeader class=\"space-y-1\">\n        <CardTitle class=\"text-2xl\">Create an account</CardTitle>\n        <CardDescription>Enter your email below to create your account</CardDescription>\n      </CardHeader>\n\n      <CardContent class=\"grid gap-4\">\n        <div class=\"grid grid-cols-2 gap-6\">\n          <Button variant=\"outline\">\n            <IconBrandGithub class=\"mr-2 size-4\" />\n            Github\n          </Button>\n          <Button variant=\"outline\">\n            <IconBrandGoogle class=\"mr-2 size-4\" />\n            Google\n          </Button>\n        </div>\n        <div class=\"relative\">\n          <div class=\"absolute inset-0 flex items-center\">\n            <span class=\"w-full border-t\" />\n          </div>\n          <div class=\"relative flex justify-center text-xs uppercase\">\n            <span class=\"bg-background px-2 text-muted-foreground\">Or continue with</span>\n          </div>\n        </div>\n        <TextField class=\"grid gap-2\">\n          <TextFieldLabel>Email</TextFieldLabel>\n          <TextFieldInput type=\"email\" placeholder=\"m@example.com\" />\n        </TextField>\n        <TextField class=\"grid gap-2\">\n          <TextFieldLabel>Password</TextFieldLabel>\n          <TextFieldInput type=\"password\" />\n        </TextField>\n      </CardContent>\n      <CardFooter>\n        <Button class=\"w-full\">Create account</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/create-account.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/notifications.tsx",
      "content": "import { IconBell, IconEyeOff } from \"@/components/icons\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\nexport function Notifications() {\n  return (\n    <Card>\n      <CardHeader class=\"pb-3\">\n        <CardTitle>Notifications</CardTitle>\n        <CardDescription>Choose what you want to be notified about.</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-1\">\n        <div class=\"-mx-2 flex items-start space-x-4 rounded-md p-2 transition-all hover:bg-accent hover:text-accent-foreground\">\n          <IconBell class=\"mt-px size-5\" />\n          <div class=\"space-y-1\">\n            <p class=\"text-sm font-medium leading-none\">Everything</p>\n            <p class=\"text-sm text-muted-foreground\">Email digest, mentions & all activity.</p>\n          </div>\n        </div>\n        <div class=\"-mx-2 flex items-start space-x-4 rounded-md bg-accent p-2 text-accent-foreground transition-all\">\n          <IconBell class=\"mt-px size-5\" />\n          <div class=\"space-y-1\">\n            <p class=\"text-sm font-medium leading-none\">Available</p>\n            <p class=\"text-sm text-muted-foreground\">Only mentions and comments.</p>\n          </div>\n        </div>\n        <div class=\"-mx-2 flex items-start space-x-4 rounded-md p-2 transition-all hover:bg-accent hover:text-accent-foreground\">\n          <IconEyeOff class=\"mt-px size-5\" />\n          <div class=\"space-y-1\">\n            <p class=\"text-sm font-medium leading-none\">Ignoring</p>\n            <p class=\"text-sm text-muted-foreground\">Turn off all notifications.</p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/notifications.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/payment-method.tsx",
      "content": "import { IconBrandApple, IconBrandPaypal, IconCreditCard } from \"@/components/icons\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n} from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { TextField, TextFieldInput, TextFieldLabel } from \"@/components/ui/text-field\"\n\nexport function PaymentMethod() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Payment Method</CardTitle>\n        <CardDescription>Add a new payment method to your account.</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-6\">\n        <RadioGroup defaultValue=\"card\" class=\"grid grid-cols-3 gap-4\">\n          <div>\n            <RadioGroupItem value=\"card\" id=\"card\" class=\"peer sr-only\" />\n            <Label\n              html-for=\"card\"\n              class=\"flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[checked]:border-primary\"\n            >\n              <IconCreditCard class=\"mb-3 size-6\" />\n              Card\n            </Label>\n          </div>\n          <div>\n            <RadioGroupItem value=\"paypal\" id=\"paypal\" class=\"peer sr-only\" />\n            <Label\n              html-for=\"paypal\"\n              class=\"flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[checked]:border-primary\"\n            >\n              <IconBrandPaypal class=\"mb-3 size-6\" />\n              Paypal\n            </Label>\n          </div>\n          <div>\n            <RadioGroupItem value=\"apple\" id=\"apple\" class=\"peer sr-only\" />\n            <Label\n              html-for=\"apple\"\n              class=\"flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[checked]:border-primary\"\n            >\n              <IconBrandApple class=\"mb-3 size-6\" />\n              Apple\n            </Label>\n          </div>\n        </RadioGroup>\n        <TextField class=\"grid gap-2\">\n          <TextFieldLabel>Name</TextFieldLabel>\n          <TextFieldInput placeholder=\"First Last\" type=\"text\" />\n        </TextField>\n        <TextField class=\"grid gap-2\">\n          <TextFieldLabel>Card number</TextFieldLabel>\n          <TextFieldInput placeholder=\"\" type=\"text\" />\n        </TextField>\n        <div class=\"grid grid-cols-3 gap-4\">\n          <div class=\"grid gap-2\">\n            <Label html-for=\"month\">Expires</Label>\n            <Select\n              options={[\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"April\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"\n              ]}\n              placeholder=\"Month\"\n              itemComponent={(props) => (\n                <SelectItem item={props.item}>{props.item.rawValue}</SelectItem>\n              )}\n            >\n              <SelectTrigger id=\"month\">\n                <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n              </SelectTrigger>\n              <SelectContent />\n            </Select>\n          </div>\n          <div class=\"grid gap-2\">\n            <Label html-for=\"year\">Year</Label>\n            <Select\n              options={Array.from({ length: 10 }, (_, i) => new Date().getFullYear() + i)}\n              placeholder=\"Year\"\n              itemComponent={(props) => (\n                <SelectItem item={props.item}>{props.item.rawValue}</SelectItem>\n              )}\n            >\n              <SelectTrigger id=\"year\">\n                <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n              </SelectTrigger>\n              <SelectContent />\n            </Select>\n          </div>\n          <TextField class=\"grid gap-2\">\n            <TextFieldLabel>CVC</TextFieldLabel>\n            <TextFieldInput placeholder=\"CVC\" type=\"text\" />\n          </TextField>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <Button class=\"w-full\">Continue</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/payment-method.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/report-an-issue.tsx",
      "content": "import { createSignal } from \"solid-js\"\n\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle\n} from \"@/components/ui/card\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { TextField, TextFieldInput, TextFieldTextArea } from \"@/components/ui/text-field\"\n\nexport function ReportAnIssue() {\n  const [area, setArea] = createSignal()\n  const [secLevel, setSecLevel] = createSignal()\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Report an issue</CardTitle>\n        <CardDescription>What area are you having problems with?</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-6\">\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div class=\"grid gap-2\">\n            <Label for=\"area\">Area</Label>\n            <Select\n              id=\"area\"\n              value={area()}\n              onChange={setArea}\n              options={[\"Team\", \"Billing\", \"Accounts\", \"Deployments\"]}\n              defaultValue={\"Billing\"}\n              itemComponent={(props) => (\n                <SelectItem item={props.item}>{props.item.textValue}</SelectItem>\n              )}\n            >\n              <SelectTrigger aria-label=\"billing\" class=\"flex-1\">\n                <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n              </SelectTrigger>\n              <SelectContent />\n            </Select>\n          </div>\n          <div class=\"grid gap-2\">\n            <Label for=\"security-level\">Security Level</Label>\n            <Select\n              id=\"security-level\"\n              value={secLevel()}\n              onChange={setSecLevel}\n              options={[\"Level 1(lowest)\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5(💀)\"]}\n              defaultValue={\"Level 2\"}\n              itemComponent={(props) => (\n                <SelectItem item={props.item}>{props.item.textValue}</SelectItem>\n              )}\n            >\n              <SelectTrigger aria-label=\"security level\" class=\"flex-1\">\n                <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n              </SelectTrigger>\n              <SelectContent />\n            </Select>\n          </div>\n        </div>\n        <div class=\"grid gap-2\">\n          <Label for=\"subject\">Subject</Label>\n          <TextField>\n            <TextFieldInput id=\"subject\" placeholder=\"I need help with...\" type=\"text\" />\n          </TextField>\n        </div>\n        <div class=\"grid gap-2\">\n          <Label for=\"description\">Description</Label>\n          <TextField>\n            <TextFieldTextArea\n              id=\"description\"\n              placeholder=\"Please include all information relevant to your issue.\"\n            />\n          </TextField>\n        </div>\n      </CardContent>\n      <CardFooter class=\"justify-between space-x-2\">\n        <Button variant=\"ghost\">Cancel</Button>\n        <Button>Submit</Button>\n      </CardFooter>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/report-an-issue.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/share-document.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { TextField, TextFieldInput } from \"@/components/ui/text-field\"\n\nexport function ShareDocument() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Share this document</CardTitle>\n        <CardDescription>Anyone with the link can view this document.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div class=\"flex space-x-2\">\n          <TextField>\n            <TextFieldInput value=\"http://example.com/link/to/document\" type=\"text\" readOnly />\n          </TextField>\n          <Button variant=\"secondary\" class=\"shrink-0\">\n            Copy Link\n          </Button>\n        </div>\n        <Separator class=\"my-4\" />\n        <div class=\"space-y-4\">\n          <h4 class=\"text-sm font-medium\">People with access</h4>\n          <div class=\"grid gap-6\">\n            <div class=\"flex items-center justify-between space-x-4\">\n              <div class=\"flex items-center space-x-4\">\n                <Avatar>\n                  <AvatarImage src=\"/avatars/03.png\" />\n                  <AvatarFallback>OM</AvatarFallback>\n                </Avatar>\n                <div>\n                  <p class=\"text-sm font-medium leading-none\">Olivia Martin</p>\n                  <p class=\"text-sm text-muted-foreground\">m@example.com</p>\n                </div>\n              </div>\n              <Select\n                defaultValue=\"Can edit\"\n                options={[\"Can edit\", \"Can view\"]}\n                placeholder=\"Select\"\n                itemComponent={(props) => (\n                  <SelectItem item={props.item}>{props.item.rawValue}</SelectItem>\n                )}\n              >\n                <SelectTrigger class=\"ml-auto w-[110px]\">\n                  <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n                </SelectTrigger>\n                <SelectContent />\n              </Select>\n            </div>\n            <div class=\"flex items-center justify-between space-x-4\">\n              <div class=\"flex items-center space-x-4\">\n                <Avatar>\n                  <AvatarImage src=\"/avatars/05.png\" />\n                  <AvatarFallback>IN</AvatarFallback>\n                </Avatar>\n                <div>\n                  <p class=\"text-sm font-medium leading-none\">Isabella Nguyen</p>\n                  <p class=\"text-sm text-muted-foreground\">b@example.com</p>\n                </div>\n              </div>\n              <Select\n                defaultValue=\"Can view\"\n                options={[\"Can edit\", \"Can view\"]}\n                placeholder=\"Select\"\n                itemComponent={(props) => (\n                  <SelectItem item={props.item}>{props.item.rawValue}</SelectItem>\n                )}\n              >\n                <SelectTrigger class=\"ml-auto w-[110px]\">\n                  <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n                </SelectTrigger>\n                <SelectContent />\n              </Select>\n            </div>\n            <div class=\"flex items-center justify-between space-x-4\">\n              <div class=\"flex items-center space-x-4\">\n                <Avatar>\n                  <AvatarImage src=\"/avatars/01.png\" />\n                  <AvatarFallback>SD</AvatarFallback>\n                </Avatar>\n                <div>\n                  <p class=\"text-sm font-medium leading-none\">Sofia Davis</p>\n                  <p class=\"text-sm text-muted-foreground\">p@example.com</p>\n                </div>\n              </div>\n              <Select\n                defaultValue=\"Can view\"\n                options={[\"Can edit\", \"Can view\"]}\n                placeholder=\"Select\"\n                itemComponent={(props) => (\n                  <SelectItem item={props.item}>{props.item.rawValue}</SelectItem>\n                )}\n              >\n                <SelectTrigger class=\"ml-auto w-[110px]\">\n                  <SelectValue<string>>{(state) => state.selectedOption()}</SelectValue>\n                </SelectTrigger>\n                <SelectContent />\n              </Select>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/share-document.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/solid-ui.tsx",
      "content": "import { IconBrandTypescript, IconChevronDown, IconPlus, IconStar } from \"@/components/icons\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuGroupLabel,\n  DropdownMenuItem,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger\n} from \"@/components/ui/dropdown-menu\"\nimport { Separator } from \"@/components/ui/separator\"\n\nexport function SolidUI() {\n  return (\n    <Card>\n      <CardHeader class=\"grid grid-cols-[1fr_110px] items-start gap-4 space-y-0\">\n        <div class=\"space-y-1\">\n          <CardTitle>solid-ui</CardTitle>\n          <CardDescription>\n            Beautifully designed components built with Kobalte and Tailwind CSS.\n          </CardDescription>\n        </div>\n        <div class=\"flex items-center space-x-1 rounded-md bg-secondary text-secondary-foreground\">\n          <Button variant=\"secondary\" class=\"px-3 shadow-none\">\n            <IconStar class=\"mr-2 size-4\" />\n            Star\n          </Button>\n          <Separator orientation=\"vertical\" class=\"h-[20px]\" />\n          <DropdownMenu>\n            <DropdownMenuTrigger as={Button<\"button\">} variant=\"secondary\" class=\"px-2 shadow-none\">\n              <IconChevronDown class=\"size-4 text-secondary-foreground\" />\n            </DropdownMenuTrigger>\n            <DropdownMenuContent>\n              <DropdownMenuGroup>\n                <DropdownMenuGroupLabel>Suggested Lists</DropdownMenuGroupLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuRadioGroup defaultValue=\"future-ideas\">\n                  <DropdownMenuRadioItem value=\"future-ideas\">Future ideas</DropdownMenuRadioItem>\n                  <DropdownMenuRadioItem value=\"my-stack\">My Stack</DropdownMenuRadioItem>\n                  <DropdownMenuRadioItem value=\"inspiration\">Inspiration</DropdownMenuRadioItem>\n                </DropdownMenuRadioGroup>\n              </DropdownMenuGroup>\n              <DropdownMenuSeparator />\n              <DropdownMenuItem>\n                <IconPlus class=\"mr-2 size-4\" /> Create list\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div class=\"flex space-x-4 text-sm text-muted-foreground\">\n          <div class=\"flex items-center\">\n            <IconBrandTypescript class=\"mr-1 size-3 text-sky-400\" />\n            TypeScript\n          </div>\n          <div class=\"flex items-center\">\n            <IconStar class=\"mr-1 size-3\" />\n            160\n          </div>\n          <div>Updated November 2023</div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/solid-ui.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/cards/team-members.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  Combobox,\n  ComboboxContent,\n  ComboboxControl,\n  ComboboxInput,\n  ComboboxItem,\n  ComboboxItemLabel,\n  ComboboxTrigger\n} from \"@/components/ui/combobox\"\n\ninterface Role {\n  label: string\n  description: string\n}\n\nconst OPTIONS: Role[] = [\n  { label: \"Viewer\", description: \"Can view and comment.\" },\n  { label: \"Developer\", description: \"Can view, comment and edit.\" },\n  { label: \"Billing\", description: \"Can view, comment and manage billing.\" },\n  { label: \"Owner\", description: \"Admin-level access to all resources.\" }\n]\n\nexport function TeamMembers() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Team Members</CardTitle>\n        <CardDescription>Invite your team members to collaborate.</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-6\">\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/01.png\" />\n              <AvatarFallback>OM</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Sofia Davis</p>\n              <p class=\"text-sm text-muted-foreground\">m@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[3]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/02.png\" />\n              <AvatarFallback>JL</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Jackson Lee</p>\n              <p class=\"text-sm text-muted-foreground\">p@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[0]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/03.png\" />\n              <AvatarFallback>IN</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Isabella Nguyen</p>\n              <p class=\"text-sm text-muted-foreground\">i@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[0]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/team-members.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons.tsx",
      "content": "import { splitProps, type ComponentProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype IconProps = ComponentProps<\"svg\">\n\nconst Icon = (props: IconProps) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      class={cn(\"size-4\", props.class)}\n      {...rest}\n    />\n  )\n}\n\nexport function IconLogo(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M21 8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16Z\" />\n      <path d=\"m3.3 7 8.7 5 8.7-5\" />\n      <path d=\"M12 22V12\" />\n    </Icon>\n  )\n}\n\n// ICONS\n\nexport function IconAlertTriangle(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 9v4\" />\n      <path d=\"M10.363 3.591l-8.106 13.534a1.914 1.914 0 0 0 1.636 2.871h16.214a1.914 1.914 0 0 0 1.636 -2.87l-8.106 -13.536a1.914 1.914 0 0 0 -3.274 0z\" />\n      <path d=\"M12 16h.01\" />\n    </Icon>\n  )\n}\n\nexport function IconArchive(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z\" />\n      <path d=\"M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-10\" />\n      <path d=\"M10 12l4 0\" />\n    </Icon>\n  )\n}\n\nexport function IconArrowDown(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 5l0 14\" />\n      <path d=\"M18 13l-6 6\" />\n      <path d=\"M6 13l6 6\" />\n    </Icon>\n  )\n}\n\nexport function IconArrowRight(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 12l14 0\" />\n      <path d=\"M13 18l6 -6\" />\n      <path d=\"M13 6l6 6\" />\n    </Icon>\n  )\n}\n\nexport function IconArrowUp(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 5l0 14\" />\n      <path d=\"M18 11l-6 -6\" />\n      <path d=\"M6 11l6 -6\" />\n    </Icon>\n  )\n}\n\nexport function IconBell(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10 5a2 2 0 1 1 4 0a7 7 0 0 1 4 6v3a4 4 0 0 0 2 3h-16a4 4 0 0 0 2 -3v-3a7 7 0 0 1 4 -6\" />\n      <path d=\"M9 17v1a3 3 0 0 0 6 0v-1\" />\n    </Icon>\n  )\n}\n\nexport function IconBold(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M7 5h6a3.5 3.5 0 0 1 0 7h-6z\" />\n      <path d=\"M13 12h1a3.5 3.5 0 0 1 0 7h-7v-7\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandApple(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M8.286 7.008c-3.216 0 -4.286 3.23 -4.286 5.92c0 3.229 2.143 8.072 4.286 8.072c1.165 -.05 1.799 -.538 3.214 -.538c1.406 0 1.607 .538 3.214 .538s4.286 -3.229 4.286 -5.381c-.03 -.011 -2.649 -.434 -2.679 -3.23c-.02 -2.335 2.589 -3.179 2.679 -3.228c-1.096 -1.606 -3.162 -2.113 -3.75 -2.153c-1.535 -.12 -3.032 1.077 -3.75 1.077c-.729 0 -2.036 -1.077 -3.214 -1.077z\" />\n      <path d=\"M12 4a2 2 0 0 0 2 -2a2 2 0 0 0 -2 2\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandGithub(props: IconProps) {\n  return (\n    <Icon stroke=\"none\" fill=\"currentColor\" {...props}>\n      <path d=\"M12.5.75C6.146.75 1 5.896 1 12.25c0 5.089 3.292 9.387 7.863 10.91.575.101.79-.244.79-.546 0-.273-.014-1.178-.014-2.142-2.889.532-3.636-.704-3.866-1.35-.13-.331-.69-1.352-1.18-1.625-.402-.216-.977-.748-.014-.762.906-.014 1.553.834 1.769 1.179 1.035 1.74 2.688 1.25 3.349.948.1-.747.402-1.25.733-1.538-2.559-.287-5.232-1.279-5.232-5.678 0-1.25.445-2.285 1.178-3.09-.115-.288-.517-1.467.115-3.048 0 0 .963-.302 3.163 1.179.92-.259 1.897-.388 2.875-.388.977 0 1.955.13 2.875.388 2.2-1.495 3.162-1.179 3.162-1.179.633 1.581.23 2.76.115 3.048.733.805 1.179 1.825 1.179 3.09 0 4.413-2.688 5.39-5.247 5.678.417.36.776 1.05.776 2.128 0 1.538-.014 2.774-.014 3.162 0 .302.216.662.79.547C20.709 21.637 24 17.324 24 12.25 24 5.896 18.854.75 12.5.75Z\" />\n      {/* <path d=\"M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5\" /> */}\n    </Icon>\n  )\n}\n\nexport function IconBrandGoogle(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M20.945 11a9 9 0 1 1 -3.284 -5.997l-2.655 2.392a5.5 5.5 0 1 0 2.119 6.605h-4.125v-3h7.945z\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandInstagram(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z\" />\n      <path d=\"M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0\" />\n      <path d=\"M16.5 7.5l0 .01\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandPaypal(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10 13l2.5 0c2.5 0 5 -2.5 5 -5c0 -3 -1.9 -5 -5 -5h-5.5c-.5 0 -1 .5 -1 1l-2 14c0 .5 .5 1 1 1h2.8l1.2 -5c.1 -.6 .4 -1 1 -1zm7.5 -5.8c1.7 1 2.5 2.8 2.5 4.8c0 2.5 -2.5 4.5 -5 4.5h-2.6l-.6 3.6a1 1 0 0 1 -1 .8l-2.7 0a.5 .5 0 0 1 -.5 -.6l.2 -1.4\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandReddit(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 8c2.648 0 5.028 .826 6.675 2.14a2.5 2.5 0 0 1 2.326 4.36c0 3.59 -4.03 6.5 -9 6.5c-4.875 0 -8.845 -2.8 -9 -6.294l-1 -.206a2.5 2.5 0 0 1 2.326 -4.36c1.646 -1.313 4.026 -2.14 6.674 -2.14z\" />\n      <path d=\"M12 8l1 -5l6 1\" />\n      <path d=\"M19 4m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n      <circle cx=\"9\" cy=\"13\" r=\".5\" fill=\"currentColor\" />\n      <circle cx=\"15\" cy=\"13\" r=\".5\" fill=\"currentColor\" />\n      <path d=\"M10 17c.667 .333 1.333 .5 2 .5s1.333 -.167 2 -.5\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandTypescript(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M15 17.5c.32 .32 .754 .5 1.207 .5h.543c.69 0 1.25 -.56 1.25 -1.25v-.25a1.5 1.5 0 0 0 -1.5 -1.5a1.5 1.5 0 0 1 -1.5 -1.5v-.25c0 -.69 .56 -1.25 1.25 -1.25h.543c.453 0 .887 .18 1.207 .5\" />\n      <path d=\"M9 12h4\" />\n      <path d=\"M11 12v6\" />\n      <path d=\"M21 19v-14a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2 -2z\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandVercel(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 19h18l-9 -15z\" fill=\"currentColor\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandX(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 4l11.733 16h4.267l-11.733 -16z\" />\n      <path d=\"M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772\" />\n    </Icon>\n  )\n}\n\nexport function IconBrandYoutube(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M2 8a4 4 0 0 1 4 -4h12a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-12a4 4 0 0 1 -4 -4v-8z\" />\n      <path d=\"M10 9l5 3l-5 3z\" />\n    </Icon>\n  )\n}\n\nexport function IconCalendar(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z\" />\n      <path d=\"M16 3v4\" />\n      <path d=\"M8 3v4\" />\n      <path d=\"M4 11h16\" />\n      <path d=\"M11 15h1\" />\n      <path d=\"M12 15v3\" />\n    </Icon>\n  )\n}\n\nexport function IconCheck(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 12l5 5l10 -10\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronDown(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M6 9l6 6l6 -6\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronLeft(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M15 6l-6 6l6 6\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronRight(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M9 6l6 6l-6 6\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronUp(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M6 15l6 -6l6 6\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronsLeft(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M11 7l-5 5l5 5\" />\n      <path d=\"M17 7l-5 5l5 5\" />\n    </Icon>\n  )\n}\n\nexport function IconChevronsRight(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M7 7l5 5l-5 5\" />\n      <path d=\"M13 7l5 5l-5 5\" />\n    </Icon>\n  )\n}\n\nexport function IconCircle(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n    </Icon>\n  )\n}\n\nexport function IconCircleCheck(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n      <path d=\"M9 12l2 2l4 -4\" />\n    </Icon>\n  )\n}\n\nexport function IconCircleHelp(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\" />\n      <path d=\"M12 16v.01\" />\n      <path d=\"M12 13a2 2 0 0 0 .914 -3.782a1.98 1.98 0 0 0 -2.414 .483\" />\n    </Icon>\n  )\n}\n\nexport function IconCircleOff(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M20.042 16.045a9 9 0 0 0 -12.087 -12.087m-2.318 1.677a9 9 0 1 0 12.725 12.73\" />\n      <path d=\"M3 3l18 18\" />\n    </Icon>\n  )\n}\n\nexport function IconCirclePlus(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\" />\n      <path d=\"M9 12h6\" />\n      <path d=\"M12 9v6\" />\n    </Icon>\n  )\n}\n\nexport function IconClock(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\" />\n      <path d=\"M12 7v5l3 3\" />\n    </Icon>\n  )\n}\n\nexport function IconCloud(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M6.657 18c-2.572 0 -4.657 -2.007 -4.657 -4.483c0 -2.475 2.085 -4.482 4.657 -4.482c.393 -1.762 1.794 -3.2 3.675 -3.773c1.88 -.572 3.956 -.193 5.444 1c1.488 1.19 2.162 3.007 1.77 4.769h.99c1.913 0 3.464 1.56 3.464 3.486c0 1.927 -1.551 3.487 -3.465 3.487h-11.878\" />\n    </Icon>\n  )\n}\n\nexport function IconCommand(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10\" />\n    </Icon>\n  )\n}\n\nexport function IconCopy(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M7 7m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n      <path d=\"M4.012 16.737a2.005 2.005 0 0 1 -1.012 -1.737v-10c0 -1.1 .9 -2 2 -2h10c.75 0 1.158 .385 1.5 1\" />\n    </Icon>\n  )\n}\n\nexport function IconCreditCard(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z\" />\n      <path d=\"M3 10l18 0\" />\n      <path d=\"M7 15l.01 0\" />\n      <path d=\"M11 15l2 0\" />\n    </Icon>\n  )\n}\n\nexport function IconDesktop(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z\" />\n      <path d=\"M7 20h10\" />\n      <path d=\"M9 16v4\" />\n      <path d=\"M15 16v4\" />\n    </Icon>\n  )\n}\n\nexport function IconDots(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n      <path d=\"M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n      <path d=\"M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n    </Icon>\n  )\n}\n\nexport function IconDotsVertical(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n      <path d=\"M12 19m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n      <path d=\"M12 5m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n    </Icon>\n  )\n}\n\nexport function IconDownload(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\" />\n      <path d=\"M7 11l5 5l5 -5\" />\n      <path d=\"M12 4l0 12\" />\n    </Icon>\n  )\n}\n\nexport function IconExternalLink(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 6h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-6\" />\n      <path d=\"M11 13l9 -9\" />\n      <path d=\"M15 4h5v5\" />\n    </Icon>\n  )\n}\n\nexport function IconEyeOff(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10.585 10.587a2 2 0 0 0 2.829 2.828\" />\n      <path d=\"M16.681 16.673a8.717 8.717 0 0 1 -4.681 1.327c-3.6 0 -6.6 -2 -9 -6c1.272 -2.12 2.712 -3.678 4.32 -4.674m2.86 -1.146a9.055 9.055 0 0 1 1.82 -.18c3.6 0 6.6 2 9 6c-.666 1.11 -1.379 2.067 -2.138 2.87\" />\n      <path d=\"M3 3l18 18\" />\n    </Icon>\n  )\n}\n\nexport function IconFile(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />\n      <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />\n    </Icon>\n  )\n}\n\nexport function IconForward(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <polyline points=\"15 17 20 12 15 7\" />\n      <path d=\"M4 18v-2a4 4 0 0 1 4-4h12\" />\n    </Icon>\n  )\n}\n\nexport function IconFullscreen(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 7V5a2 2 0 0 1 2-2h2\" />\n      <path d=\"M17 3h2a2 2 0 0 1 2 2v2\" />\n      <path d=\"M21 17v2a2 2 0 0 1-2 2h-2\" />\n      <path d=\"M7 21H5a2 2 0 0 1-2-2v-2\" />\n      <rect width=\"10\" height=\"8\" x=\"7\" y=\"8\" rx=\"1\" />\n    </Icon>\n  )\n}\n\nexport function IconHash(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 9l14 0\" />\n      <path d=\"M5 15l14 0\" />\n      <path d=\"M11 4l-4 16\" />\n      <path d=\"M17 4l-4 16\" />\n    </Icon>\n  )\n}\n\nexport function IconHome(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 12l-2 0l9 -9l9 9l-2 0\" />\n      <path d=\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\" />\n      <path d=\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\" />\n    </Icon>\n  )\n}\n\nexport function IconInbox(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z\" />\n      <path d=\"M4 13h3l3 3h4l3 -3h3\" />\n    </Icon>\n  )\n}\n\nexport function IconItalic(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M11 5l6 0\" />\n      <path d=\"M7 19l6 0\" />\n      <path d=\"M14 5l-4 14\" />\n    </Icon>\n  )\n}\n\nexport function IconLaptop(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 19l18 0\" />\n      <path d=\"M5 6m0 1a1 1 0 0 1 1 -1h12a1 1 0 0 1 1 1v8a1 1 0 0 1 -1 1h-12a1 1 0 0 1 -1 -1z\" />\n    </Icon>\n  )\n}\n\nexport function IconLoader(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 6l0 -3\" />\n      <path d=\"M16.25 7.75l2.15 -2.15\" />\n      <path d=\"M18 12l3 0\" />\n      <path d=\"M16.25 16.25l2.15 2.15\" />\n      <path d=\"M12 18l0 3\" />\n      <path d=\"M7.75 16.25l-2.15 2.15\" />\n      <path d=\"M6 12l-3 0\" />\n      <path d=\"M7.75 7.75l-2.15 -2.15\" />\n    </Icon>\n  )\n}\n\nexport function IconMail(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z\" />\n      <path d=\"M3 7l9 6l9 -6\" />\n    </Icon>\n  )\n}\n\nexport function IconMessages(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M14 9a2 2 0 0 1-2 2H6l-4 4V4c0-1.1.9-2 2-2h8a2 2 0 0 1 2 2z\" />\n      <path d=\"M18 9h2a2 2 0 0 1 2 2v11l-4-4h-6a2 2 0 0 1-2-2v-1\" />\n    </Icon>\n  )\n}\n\nexport function IconMinus(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 12l14 0\" />\n    </Icon>\n  )\n}\n\nexport function IconMobile(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M6 5a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-14z\" />\n      <path d=\"M11 4h2\" />\n      <path d=\"M12 17v.01\" />\n    </Icon>\n  )\n}\n\nexport function IconMoon(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z\" />\n    </Icon>\n  )\n}\n\nexport function IconReply(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <polyline points=\"9 17 4 12 9 7\" />\n      <path d=\"M20 18v-2a4 4 0 0 0-4-4H4\" />\n    </Icon>\n  )\n}\n\nexport function IconReplyAll(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <polyline points=\"7 17 2 12 7 7\" />\n      <polyline points=\"12 17 7 12 12 7\" />\n      <path d=\"M22 18v-2a4 4 0 0 0-4-4H7\" />\n    </Icon>\n  )\n}\n\nexport function IconPlus(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 5l0 14\" />\n      <path d=\"M5 12l14 0\" />\n    </Icon>\n  )\n}\n\nexport function IconRocket(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3\" />\n      <path d=\"M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3\" />\n      <path d=\"M15 9m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0\" />\n    </Icon>\n  )\n}\n\nexport function IconSearch(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0\" />\n      <path d=\"M21 21l-6 -6\" />\n    </Icon>\n  )\n}\n\nexport function IconSelector(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M8 9l4 -4l4 4\" />\n      <path d=\"M16 15l-4 4l-4 -4\" />\n    </Icon>\n  )\n}\n\nexport function IconSend(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10 14l11 -11\" />\n      <path d=\"M21 3l-6.5 18a.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a.55 .55 0 0 1 0 -1l18 -6.5\" />\n    </Icon>\n  )\n}\n\nexport function IconSettings(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z\" />\n      <path d=\"M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0\" />\n    </Icon>\n  )\n}\n\nexport function IconShoppingCart(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M6 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" />\n      <path d=\"M17 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" />\n      <path d=\"M17 17h-11v-14h-2\" />\n      <path d=\"M6 5l14 1l-1 7h-13\" />\n    </Icon>\n  )\n}\n\nexport function IconSidebarOpen(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z\" />\n      <path d=\"M9 4v16\" />\n      <path d=\"M14 10l2 2l-2 2\" />\n    </Icon>\n  )\n}\n\nexport function IconSmile(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n      <path d=\"M9 10l.01 0\" />\n      <path d=\"M15 10l.01 0\" />\n      <path d=\"M9.5 15a3.5 3.5 0 0 0 5 0\" />\n    </Icon>\n  )\n}\n\nexport function IconStar(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\" />\n    </Icon>\n  )\n}\n\nexport function IconSun(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0\" />\n      <path d=\"M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7\" />\n    </Icon>\n  )\n}\n\nexport function IconTablet(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M18 3a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2z\" />\n      <path d=\"M9 18h6\" />\n    </Icon>\n  )\n}\n\nexport function IconTerminal(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M5 7l5 5l-5 5\" />\n      <path d=\"M12 19l7 0\" />\n    </Icon>\n  )\n}\n\nexport function IconTimer(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <line x1=\"10\" x2=\"14\" y1=\"2\" y2=\"2\" />\n      <line x1=\"12\" x2=\"15\" y1=\"14\" y2=\"11\" />\n      <circle cx=\"12\" cy=\"14\" r=\"8\" />\n    </Icon>\n  )\n}\n\nexport function IconTrash(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M4 7l16 0\" />\n      <path d=\"M10 11l0 6\" />\n      <path d=\"M14 11l0 6\" />\n      <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n      <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n    </Icon>\n  )\n}\n\nexport function IconUnderline(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M7 5v5a5 5 0 0 0 10 0v-5\" />\n      <path d=\"M5 19h14\" />\n    </Icon>\n  )\n}\n\nexport function IconUpdates(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\" />\n      <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\" />\n      <path d=\"M12 9l0 3\" />\n      <path d=\"M12 15l.01 0\" />\n    </Icon>\n  )\n}\n\nexport function IconUser(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0\" />\n      <path d=\"M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\n    </Icon>\n  )\n}\n\nexport function IconUsers(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M9 7m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0\" />\n      <path d=\"M3 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\n      <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n      <path d=\"M21 21v-2a4 4 0 0 0 -3 -3.85\" />\n    </Icon>\n  )\n}\n\nexport function IconX(props: IconProps) {\n  return (\n    <Icon {...props}>\n      <path d=\"M18 6l-12 12\" />\n      <path d=\"M6 6l12 12\" />\n    </Icon>\n  )\n}\n",
      "path": "src/components/icons.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import type { ClassValue } from \"clsx\"\nimport { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function clamp(val: number, min: number, max: number) {\n  return val > max ? max : val < min ? min : val\n}\n\nexport function toggleValue<T>(array: T[], value: T): T[] {\n  return array.includes(value) ? array.filter((item) => item !== value) : [...array, value]\n}\n",
      "path": "src/lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/avatar.tsx",
      "content": "import type { ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport * as ImagePrimitive from \"@kobalte/core/image\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype AvatarRootProps<T extends ValidComponent = \"span\"> = ImagePrimitive.ImageRootProps<T> & {\n  class?: string | undefined\n}\n\nconst Avatar = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, AvatarRootProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarRootProps, [\"class\"])\n  return (\n    <ImagePrimitive.Root\n      class={cn(\"relative flex size-10 shrink-0 overflow-hidden rounded-full\", local.class)}\n      {...others}\n    />\n  )\n}\n\ntype AvatarImageProps<T extends ValidComponent = \"img\"> = ImagePrimitive.ImageImgProps<T> & {\n  class?: string | undefined\n}\n\nconst AvatarImage = <T extends ValidComponent = \"img\">(\n  props: PolymorphicProps<T, AvatarImageProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarImageProps, [\"class\"])\n  return <ImagePrimitive.Img class={cn(\"aspect-square size-full\", local.class)} {...others} />\n}\n\ntype AvatarFallbackProps<T extends ValidComponent = \"span\"> =\n  ImagePrimitive.ImageFallbackProps<T> & { class?: string | undefined }\n\nconst AvatarFallback = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, AvatarFallbackProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarFallbackProps, [\"class\"])\n  return (\n    <ImagePrimitive.Fallback\n      class={cn(\"flex size-full items-center justify-center bg-muted\", local.class)}\n      {...others}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "path": "src/registry/ui/avatar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport * as ButtonPrimitive from \"@kobalte/core/button\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport type { VariantProps } from \"class-variance-authority\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline: \"border border-input hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\"\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 px-3 text-xs\",\n        lg: \"h-11 px-8\",\n        icon: \"size-10\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\"\n    }\n  }\n)\n\ntype ButtonProps<T extends ValidComponent = \"button\"> = ButtonPrimitive.ButtonRootProps<T> &\n  VariantProps<typeof buttonVariants> & { class?: string | undefined; children?: JSX.Element }\n\nconst Button = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, ButtonProps<T>>\n) => {\n  const [local, others] = splitProps(props as ButtonProps, [\"variant\", \"size\", \"class\"])\n  return (\n    <ButtonPrimitive.Root\n      class={cn(buttonVariants({ variant: local.variant, size: local.size }), local.class)}\n      {...others}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\nexport type { ButtonProps }\n",
      "path": "src/registry/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <div\n      class={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", local.class)}\n      {...others}\n    />\n  )\n}\n\nconst CardHeader: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex flex-col space-y-1.5 p-6\", local.class)} {...others} />\n}\n\nconst CardTitle: Component<ComponentProps<\"h3\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <h3 class={cn(\"text-lg font-semibold leading-none tracking-tight\", local.class)} {...others} />\n  )\n}\n\nconst CardDescription: Component<ComponentProps<\"p\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <p class={cn(\"text-sm text-muted-foreground\", local.class)} {...others} />\n}\n\nconst CardContent: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"p-6 pt-0\", local.class)} {...others} />\n}\n\nconst CardFooter: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex items-center p-6 pt-0\", local.class)} {...others} />\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "src/registry/ui/card.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/combobox.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { Show, splitProps } from \"solid-js\"\n\nimport * as ComboboxPrimitive from \"@kobalte/core/combobox\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Combobox = ComboboxPrimitive.Root\nconst ComboboxItemLabel = ComboboxPrimitive.ItemLabel\nconst ComboboxHiddenSelect = ComboboxPrimitive.HiddenSelect\n\ntype ComboboxItemProps<T extends ValidComponent = \"li\"> = ComboboxPrimitive.ComboboxItemProps<T> & {\n  class?: string | undefined\n}\n\nconst ComboboxItem = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, ComboboxItemProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxItemProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center justify-between rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxItemIndicatorProps<T extends ValidComponent = \"div\"> =\n  ComboboxPrimitive.ComboboxItemIndicatorProps<T> & {\n    children?: JSX.Element\n  }\n\nconst ComboboxItemIndicator = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, ComboboxItemIndicatorProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxItemIndicatorProps, [\"children\"])\n  return (\n    <ComboboxPrimitive.ItemIndicator {...others}>\n      <Show\n        when={local.children}\n        fallback={\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M5 12l5 5l10 -10\" />\n          </svg>\n        }\n      >\n        {(children) => children()}\n      </Show>\n    </ComboboxPrimitive.ItemIndicator>\n  )\n}\n\ntype ComboboxSectionProps<T extends ValidComponent = \"li\"> =\n  ComboboxPrimitive.ComboboxSectionProps<T> & { class?: string | undefined }\n\nconst ComboboxSection = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, ComboboxSectionProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxSectionProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Section\n      class={cn(\n        \"overflow-hidden p-1 px-2 py-1.5 text-xs font-medium text-muted-foreground \",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxControlProps<\n  U,\n  T extends ValidComponent = \"div\"\n> = ComboboxPrimitive.ComboboxControlProps<U, T> & {\n  class?: string | undefined\n}\n\nconst ComboboxControl = <T, U extends ValidComponent = \"div\">(\n  props: PolymorphicProps<U, ComboboxControlProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxControlProps<T>, [\"class\"])\n  return (\n    <ComboboxPrimitive.Control\n      class={cn(\"flex h-10 items-center rounded-md border px-3\", local.class)}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxInputProps<T extends ValidComponent = \"input\"> =\n  ComboboxPrimitive.ComboboxInputProps<T> & { class?: string | undefined }\n\nconst ComboboxInput = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, ComboboxInputProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxInputProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Input\n      class={cn(\n        \"flex size-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxTriggerProps<T extends ValidComponent = \"button\"> =\n  ComboboxPrimitive.ComboboxTriggerProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst ComboboxTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, ComboboxTriggerProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxTriggerProps, [\"class\", \"children\"])\n  return (\n    <ComboboxPrimitive.Trigger class={cn(\"size-4 opacity-50\", local.class)} {...others}>\n      <ComboboxPrimitive.Icon>\n        <Show\n          when={local.children}\n          fallback={\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"size-4\"\n            >\n              <path d=\"M8 9l4 -4l4 4\" />\n              <path d=\"M16 15l-4 4l-4 -4\" />\n            </svg>\n          }\n        >\n          {(children) => children()}\n        </Show>\n      </ComboboxPrimitive.Icon>\n    </ComboboxPrimitive.Trigger>\n  )\n}\n\ntype ComboboxContentProps<T extends ValidComponent = \"div\"> =\n  ComboboxPrimitive.ComboboxContentProps<T> & { class?: string | undefined }\n\nconst ComboboxContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, ComboboxContentProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxContentProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Portal>\n      <ComboboxPrimitive.Content\n        class={cn(\n          \"relative z-50 min-w-32 overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-80\",\n          local.class\n        )}\n        {...others}\n      >\n        <ComboboxPrimitive.Listbox class=\"m-0 p-1\" />\n      </ComboboxPrimitive.Content>\n    </ComboboxPrimitive.Portal>\n  )\n}\n\nexport {\n  Combobox,\n  ComboboxItem,\n  ComboboxItemLabel,\n  ComboboxItemIndicator,\n  ComboboxSection,\n  ComboboxControl,\n  ComboboxTrigger,\n  ComboboxInput,\n  ComboboxHiddenSelect,\n  ComboboxContent\n}\n",
      "path": "src/registry/ui/combobox.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/dropdown-menu.tsx",
      "content": "import type { Component, ComponentProps, JSX, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport * as DropdownMenuPrimitive from \"@kobalte/core/dropdown-menu\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenu: Component<DropdownMenuPrimitive.DropdownMenuRootProps> = (props) => {\n  return <DropdownMenuPrimitive.Root gutter={4} {...props} />\n}\n\ntype DropdownMenuContentProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuContentProps<T> & {\n    class?: string | undefined\n  }\n\nconst DropdownMenuContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuContentProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuContentProps, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Portal>\n      <DropdownMenuPrimitive.Content\n        class={cn(\n          \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] animate-content-hide overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[expanded]:animate-content-show\",\n          props.class\n        )}\n        {...rest}\n      />\n    </DropdownMenuPrimitive.Portal>\n  )\n}\n\ntype DropdownMenuItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuItemProps<T> & {\n    class?: string | undefined\n  }\n\nconst DropdownMenuItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuItemProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuItemProps, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\nconst DropdownMenuShortcut: Component<ComponentProps<\"span\">> = (props) => {\n  const [, rest] = splitProps(props, [\"class\"])\n  return <span class={cn(\"ml-auto text-xs tracking-widest opacity-60\", props.class)} {...rest} />\n}\n\nconst DropdownMenuLabel: Component<ComponentProps<\"div\"> & { inset?: boolean }> = (props) => {\n  const [, rest] = splitProps(props, [\"class\", \"inset\"])\n  return (\n    <div\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.inset && \"pl-8\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype DropdownMenuSeparatorProps<T extends ValidComponent = \"hr\"> =\n  DropdownMenuPrimitive.DropdownMenuSeparatorProps<T> & {\n    class?: string | undefined\n  }\n\nconst DropdownMenuSeparator = <T extends ValidComponent = \"hr\">(\n  props: PolymorphicProps<T, DropdownMenuSeparatorProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSeparatorProps, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.Separator\n      class={cn(\"-mx-1 my-1 h-px bg-muted\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype DropdownMenuSubTriggerProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuSubTriggerProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst DropdownMenuSubTrigger = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuSubTriggerProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSubTriggerProps, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.SubTrigger\n      class={cn(\n        \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n        props.class\n      )}\n      {...rest}\n    >\n      {props.children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"ml-auto size-4\"\n      >\n        <path d=\"M9 6l6 6l-6 6\" />\n      </svg>\n    </DropdownMenuPrimitive.SubTrigger>\n  )\n}\n\ntype DropdownMenuSubContentProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuSubContentProps<T> & {\n    class?: string | undefined\n  }\n\nconst DropdownMenuSubContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuSubContentProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuSubContentProps, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.SubContent\n      class={cn(\n        \"z-50 min-w-32 origin-[var(--kb-menu-content-transform-origin)] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in\",\n        props.class\n      )}\n      {...rest}\n    />\n  )\n}\n\ntype DropdownMenuCheckboxItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuCheckboxItemProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst DropdownMenuCheckboxItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuCheckboxItemProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuCheckboxItemProps, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.CheckboxItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M5 12l5 5l10 -10\" />\n          </svg>\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.CheckboxItem>\n  )\n}\n\ntype DropdownMenuGroupLabelProps<T extends ValidComponent = \"span\"> =\n  DropdownMenuPrimitive.DropdownMenuGroupLabelProps<T> & {\n    class?: string | undefined\n  }\n\nconst DropdownMenuGroupLabel = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, DropdownMenuGroupLabelProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuGroupLabelProps, [\"class\"])\n  return (\n    <DropdownMenuPrimitive.GroupLabel\n      class={cn(\"px-2 py-1.5 text-sm font-semibold\", props.class)}\n      {...rest}\n    />\n  )\n}\n\ntype DropdownMenuRadioItemProps<T extends ValidComponent = \"div\"> =\n  DropdownMenuPrimitive.DropdownMenuRadioItemProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst DropdownMenuRadioItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, DropdownMenuRadioItemProps<T>>\n) => {\n  const [, rest] = splitProps(props as DropdownMenuRadioItemProps, [\"class\", \"children\"])\n  return (\n    <DropdownMenuPrimitive.RadioItem\n      class={cn(\n        \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        props.class\n      )}\n      {...rest}\n    >\n      <span class=\"absolute left-2 flex size-3.5 items-center justify-center\">\n        <DropdownMenuPrimitive.ItemIndicator>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-2 fill-current\"\n          >\n            <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n          </svg>\n        </DropdownMenuPrimitive.ItemIndicator>\n      </span>\n      {props.children}\n    </DropdownMenuPrimitive.RadioItem>\n  )\n}\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuPortal,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuShortcut,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubTrigger,\n  DropdownMenuSubContent,\n  DropdownMenuCheckboxItem,\n  DropdownMenuGroup,\n  DropdownMenuGroupLabel,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem\n}\n",
      "path": "src/registry/ui/dropdown-menu.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/label.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Label: Component<ComponentProps<\"label\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <label\n      class={cn(\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nexport { Label }\n",
      "path": "src/registry/ui/label.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/radio-group.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport * as RadioGroupPrimitive from \"@kobalte/core/radio-group\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype RadioGroupRootProps<T extends ValidComponent = \"div\"> =\n  RadioGroupPrimitive.RadioGroupRootProps<T> & { class?: string | undefined }\n\nconst RadioGroup = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, RadioGroupRootProps<T>>\n) => {\n  const [local, others] = splitProps(props as RadioGroupRootProps, [\"class\"])\n  return <RadioGroupPrimitive.Root class={cn(\"grid gap-2\", local.class)} {...others} />\n}\n\ntype RadioGroupItemProps<T extends ValidComponent = \"div\"> =\n  RadioGroupPrimitive.RadioGroupItemProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst RadioGroupItem = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, RadioGroupItemProps<T>>\n) => {\n  const [local, others] = splitProps(props as RadioGroupItemProps, [\"class\", \"children\"])\n  return (\n    <RadioGroupPrimitive.Item class={cn(\"flex items-center space-x-2\", local.class)} {...others}>\n      <RadioGroupPrimitive.ItemInput />\n      <RadioGroupPrimitive.ItemControl class=\"aspect-square size-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\">\n        <RadioGroupPrimitive.ItemIndicator class=\"flex h-full items-center justify-center \">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-2.5 fill-current text-current\"\n          >\n            <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n          </svg>\n        </RadioGroupPrimitive.ItemIndicator>\n      </RadioGroupPrimitive.ItemControl>\n      {local.children}\n    </RadioGroupPrimitive.Item>\n  )\n}\n\ntype RadioGroupLabelProps<T extends ValidComponent = \"label\"> =\n  RadioGroupPrimitive.RadioGroupLabelProps<T> & {\n    class?: string | undefined\n  }\n\nconst RadioGroupItemLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, RadioGroupLabelProps<T>>\n) => {\n  const [local, others] = splitProps(props as RadioGroupLabelProps, [\"class\"])\n  return (\n    <RadioGroupPrimitive.ItemLabel\n      class={cn(\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nexport { RadioGroup, RadioGroupItem, RadioGroupItemLabel }\n",
      "path": "src/registry/ui/radio-group.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/select.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport * as SelectPrimitive from \"@kobalte/core/select\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\nconst SelectValue = SelectPrimitive.Value\nconst SelectHiddenSelect = SelectPrimitive.HiddenSelect\n\ntype SelectTriggerProps<T extends ValidComponent = \"button\"> =\n  SelectPrimitive.SelectTriggerProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst SelectTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, SelectTriggerProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectTriggerProps, [\"class\", \"children\"])\n  return (\n    <SelectPrimitive.Trigger\n      class={cn(\n        \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class\n      )}\n      {...others}\n    >\n      {local.children}\n      <SelectPrimitive.Icon\n        as=\"svg\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n        class=\"size-4 opacity-50\"\n      >\n        <path d=\"M8 9l4 -4l4 4\" />\n        <path d=\"M16 15l-4 4l-4 -4\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\ntype SelectContentProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectContentProps<T> & { class?: string | undefined }\n\nconst SelectContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectContentProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectContentProps, [\"class\"])\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        class={cn(\n          \"relative z-50 min-w-32 overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-80\",\n          local.class\n        )}\n        {...others}\n      >\n        <SelectPrimitive.Listbox class=\"m-0 p-1\" />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\ntype SelectItemProps<T extends ValidComponent = \"li\"> = SelectPrimitive.SelectItemProps<T> & {\n  class?: string | undefined\n  children?: JSX.Element\n}\n\nconst SelectItem = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, SelectItemProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectItemProps, [\"class\", \"children\"])\n  return (\n    <SelectPrimitive.Item\n      class={cn(\n        \"relative mt-0 flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        local.class\n      )}\n      {...others}\n    >\n      <SelectPrimitive.ItemIndicator class=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          class=\"size-4\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M5 12l5 5l10 -10\" />\n        </svg>\n      </SelectPrimitive.ItemIndicator>\n      <SelectPrimitive.ItemLabel>{local.children}</SelectPrimitive.ItemLabel>\n    </SelectPrimitive.Item>\n  )\n}\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      variant: {\n        label: \"data-[invalid]:text-destructive\",\n        description: \"font-normal text-muted-foreground\",\n        error: \"text-xs text-destructive\"\n      }\n    },\n    defaultVariants: {\n      variant: \"label\"\n    }\n  }\n)\n\ntype SelectLabelProps<T extends ValidComponent = \"label\"> = SelectPrimitive.SelectLabelProps<T> & {\n  class?: string | undefined\n}\n\nconst SelectLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, SelectLabelProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectLabelProps, [\"class\"])\n  return <SelectPrimitive.Label class={cn(labelVariants(), local.class)} {...others} />\n}\n\ntype SelectDescriptionProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectDescriptionProps<T> & {\n    class?: string | undefined\n  }\n\nconst SelectDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectDescriptionProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectDescriptionProps, [\"class\"])\n  return (\n    <SelectPrimitive.Description\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\n      {...others}\n    />\n  )\n}\n\ntype SelectErrorMessageProps<T extends ValidComponent = \"div\"> =\n  SelectPrimitive.SelectErrorMessageProps<T> & {\n    class?: string | undefined\n  }\n\nconst SelectErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SelectErrorMessageProps<T>>\n) => {\n  const [local, others] = splitProps(props as SelectErrorMessageProps, [\"class\"])\n  return (\n    <SelectPrimitive.ErrorMessage\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\n      {...others}\n    />\n  )\n}\n\nexport {\n  Select,\n  SelectValue,\n  SelectHiddenSelect,\n  SelectTrigger,\n  SelectContent,\n  SelectItem,\n  SelectLabel,\n  SelectDescription,\n  SelectErrorMessage\n}\n",
      "path": "src/registry/ui/select.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/separator.tsx",
      "content": "import type { ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\nimport * as SeparatorPrimitive from \"@kobalte/core/separator\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype SeparatorRootProps<T extends ValidComponent = \"hr\"> =\n  SeparatorPrimitive.SeparatorRootProps<T> & { class?: string | undefined }\n\nconst Separator = <T extends ValidComponent = \"hr\">(\n  props: PolymorphicProps<T, SeparatorRootProps<T>>\n) => {\n  const [local, others] = splitProps(props as SeparatorRootProps, [\"class\", \"orientation\"])\n  return (\n    <SeparatorPrimitive.Root\n      orientation={local.orientation ?? \"horizontal\"}\n      class={cn(\n        \"shrink-0 bg-border\",\n        local.orientation === \"vertical\" ? \"h-full w-px\" : \"h-px w-full\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nexport { Separator }\n",
      "path": "src/registry/ui/separator.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/switch.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport type { PolymorphicProps } from \"@kobalte/core\"\nimport * as SwitchPrimitive from \"@kobalte/core/switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = SwitchPrimitive.Root\nconst SwitchDescription = SwitchPrimitive.Description\nconst SwitchErrorMessage = SwitchPrimitive.ErrorMessage\n\ntype SwitchControlProps = SwitchPrimitive.SwitchControlProps & {\n  class?: string | undefined\n  children?: JSX.Element\n}\n\nconst SwitchControl = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, SwitchControlProps>\n) => {\n  const [local, others] = splitProps(props as SwitchControlProps, [\"class\", \"children\"])\n  return (\n    <>\n      <SwitchPrimitive.Input\n        class={cn(\n          \"[&:focus-visible+div]:outline-none [&:focus-visible+div]:ring-2 [&:focus-visible+div]:ring-ring [&:focus-visible+div]:ring-offset-2 [&:focus-visible+div]:ring-offset-background\",\n          local.class\n        )}\n      />\n      <SwitchPrimitive.Control\n        class={cn(\n          \"inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent bg-input transition-[color,background-color,box-shadow] data-[disabled]:cursor-not-allowed data-[checked]:bg-primary data-[disabled]:opacity-50\",\n          local.class\n        )}\n        {...others}\n      >\n        {local.children}\n      </SwitchPrimitive.Control>\n    </>\n  )\n}\n\ntype SwitchThumbProps = SwitchPrimitive.SwitchThumbProps & { class?: string | undefined }\n\nconst SwitchThumb = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, SwitchThumbProps>\n) => {\n  const [local, others] = splitProps(props as SwitchThumbProps, [\"class\"])\n  return (\n    <SwitchPrimitive.Thumb\n      class={cn(\n        \"pointer-events-none block size-5 translate-x-0 rounded-full bg-background shadow-lg ring-0 transition-transform data-[checked]:translate-x-5\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype SwitchLabelProps = SwitchPrimitive.SwitchLabelProps & { class?: string | undefined }\n\nconst SwitchLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, SwitchLabelProps>\n) => {\n  const [local, others] = splitProps(props as SwitchLabelProps, [\"class\"])\n  return (\n    <SwitchPrimitive.Label\n      class={cn(\n        \"text-sm font-medium leading-none data-[disabled]:cursor-not-allowed data-[disabled]:opacity-70\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nexport { Switch, SwitchControl, SwitchThumb, SwitchLabel, SwitchDescription, SwitchErrorMessage }\n",
      "path": "src/registry/ui/switch.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/text-field.tsx",
      "content": "import type { ValidComponent } from \"solid-js\"\nimport { mergeProps, splitProps } from \"solid-js\"\n\nimport type { PolymorphicProps } from \"@kobalte/core\"\nimport * as TextFieldPrimitive from \"@kobalte/core/text-field\"\nimport { cva } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype TextFieldRootProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldRootProps<T> & {\n    class?: string | undefined\n  }\n\nconst TextField = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldRootProps<T>>\n) => {\n  const [local, others] = splitProps(props as TextFieldRootProps, [\"class\"])\n  return <TextFieldPrimitive.Root class={cn(\"flex flex-col gap-1\", local.class)} {...others} />\n}\n\ntype TextFieldInputProps<T extends ValidComponent = \"input\"> =\n  TextFieldPrimitive.TextFieldInputProps<T> & {\n    class?: string | undefined\n    type?:\n      | \"button\"\n      | \"checkbox\"\n      | \"color\"\n      | \"date\"\n      | \"datetime-local\"\n      | \"email\"\n      | \"file\"\n      | \"hidden\"\n      | \"image\"\n      | \"month\"\n      | \"number\"\n      | \"password\"\n      | \"radio\"\n      | \"range\"\n      | \"reset\"\n      | \"search\"\n      | \"submit\"\n      | \"tel\"\n      | \"text\"\n      | \"time\"\n      | \"url\"\n      | \"week\"\n  }\n\nconst TextFieldInput = <T extends ValidComponent = \"input\">(\n  rawProps: PolymorphicProps<T, TextFieldInputProps<T>>\n) => {\n  const props = mergeProps<TextFieldInputProps<T>[]>({ type: \"text\" }, rawProps)\n  const [local, others] = splitProps(props as TextFieldInputProps, [\"type\", \"class\"])\n  return (\n    <TextFieldPrimitive.Input\n      type={local.type}\n      class={cn(\n        \"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[invalid]:border-error-foreground data-[invalid]:text-error-foreground\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype TextFieldTextAreaProps<T extends ValidComponent = \"textarea\"> =\n  TextFieldPrimitive.TextFieldTextAreaProps<T> & { class?: string | undefined }\n\nconst TextFieldTextArea = <T extends ValidComponent = \"textarea\">(\n  props: PolymorphicProps<T, TextFieldTextAreaProps<T>>\n) => {\n  const [local, others] = splitProps(props as TextFieldTextAreaProps, [\"class\"])\n  return (\n    <TextFieldPrimitive.TextArea\n      class={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n  {\n    variants: {\n      variant: {\n        label: \"data-[invalid]:text-destructive\",\n        description: \"font-normal text-muted-foreground\",\n        error: \"text-xs text-destructive\"\n      }\n    },\n    defaultVariants: {\n      variant: \"label\"\n    }\n  }\n)\n\ntype TextFieldLabelProps<T extends ValidComponent = \"label\"> =\n  TextFieldPrimitive.TextFieldLabelProps<T> & { class?: string | undefined }\n\nconst TextFieldLabel = <T extends ValidComponent = \"label\">(\n  props: PolymorphicProps<T, TextFieldLabelProps<T>>\n) => {\n  const [local, others] = splitProps(props as TextFieldLabelProps, [\"class\"])\n  return <TextFieldPrimitive.Label class={cn(labelVariants(), local.class)} {...others} />\n}\n\ntype TextFieldDescriptionProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldDescriptionProps<T> & {\n    class?: string | undefined\n  }\n\nconst TextFieldDescription = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldDescriptionProps<T>>\n) => {\n  const [local, others] = splitProps(props as TextFieldDescriptionProps, [\"class\"])\n  return (\n    <TextFieldPrimitive.Description\n      class={cn(labelVariants({ variant: \"description\" }), local.class)}\n      {...others}\n    />\n  )\n}\n\ntype TextFieldErrorMessageProps<T extends ValidComponent = \"div\"> =\n  TextFieldPrimitive.TextFieldErrorMessageProps<T> & {\n    class?: string | undefined\n  }\n\nconst TextFieldErrorMessage = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, TextFieldErrorMessageProps<T>>\n) => {\n  const [local, others] = splitProps(props as TextFieldErrorMessageProps, [\"class\"])\n  return (\n    <TextFieldPrimitive.ErrorMessage\n      class={cn(labelVariants({ variant: \"error\" }), local.class)}\n      {...others}\n    />\n  )\n}\n\nexport {\n  TextField,\n  TextFieldInput,\n  TextFieldTextArea,\n  TextFieldLabel,\n  TextFieldDescription,\n  TextFieldErrorMessage\n}\n",
      "path": "src/registry/ui/text-field.tsx"
    }
  ]
}
