{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-353",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-accordion",
    "@radix-ui/react-collapsible",
    "lucide-react"
  ],
  "registryDependencies": [
    "https://originui.com/r/accordion.json",
    "https://originui.com/r/collapsible.json"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/comp-353.tsx",
      "content": "import {\n  AtSignIcon,\n  ChevronDownIcon,\n  CircleDashedIcon,\n  CommandIcon,\n  EclipseIcon,\n  GaugeIcon,\n  LucideIcon,\n  ZapIcon,\n} from \"lucide-react\"\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\"\n\nconst items = [\n  {\n    id: \"1\",\n    title: \"What makes Origin UI different?\",\n    icon: CommandIcon,\n    collapsibles: [\n      {\n        title: \"What about performance?\",\n        content:\n          \"We optimize every component for maximum performance and minimal bundle size.\",\n        icon: GaugeIcon,\n      },\n      {\n        title: \"How is the documentation?\",\n        content:\n          \"Our documentation is comprehensive and includes live examples for every component.\",\n        icon: CircleDashedIcon,\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    title: \"How can I customize the components?\",\n    icon: EclipseIcon,\n    collapsibles: [\n      {\n        title: \"Can I use custom themes?\",\n        content:\n          \"Yes, our theming system is fully customizable and supports both light and dark modes.\",\n        icon: GaugeIcon,\n      },\n      {\n        title: \"What about Tailwind support?\",\n        content:\n          \"We have first-class support for Tailwind CSS with custom utility classes.\",\n        icon: CircleDashedIcon,\n      },\n    ],\n  },\n  {\n    id: \"3\",\n    title: \"Is Origin UI optimized for performance?\",\n    icon: ZapIcon,\n    collapsibles: [\n      {\n        title: \"What's the bundle size impact?\",\n        content:\n          \"Our components are tree-shakeable and typically add minimal overhead to your bundle.\",\n        open: true,\n        icon: GaugeIcon,\n      },\n      {\n        title: \"How is code splitting handled?\",\n        content:\n          \"We support automatic code splitting for optimal loading performance.\",\n        icon: CircleDashedIcon,\n      },\n    ],\n  },\n  {\n    id: \"4\",\n    title: \"How accessible are the components?\",\n    icon: AtSignIcon,\n    collapsibles: [\n      {\n        title: \"Which screen readers are supported?\",\n        content:\n          \"We test with NVDA, VoiceOver, and JAWS to ensure broad compatibility.\",\n        icon: GaugeIcon,\n      },\n      {\n        title: \"What about keyboard navigation?\",\n        content:\n          \"Full keyboard navigation support is implemented following WAI-ARIA best practices.\",\n        icon: CircleDashedIcon,\n      },\n    ],\n  },\n]\n\nexport default function Component() {\n  return (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-xl font-bold\">Multi-level w/ icon</h2>\n      <Accordion type=\"single\" collapsible className=\"w-full\" defaultValue=\"3\">\n        {items.map((item) => (\n          <AccordionItem\n            value={item.id}\n            key={item.id}\n            className=\"has-focus-visible:border-ring has-focus-visible:ring-ring/50 outline-none has-focus-visible:ring-[3px]\"\n          >\n            <AccordionTrigger className=\"justify-start gap-3 rounded-md text-[15px] leading-6 outline-none hover:no-underline focus-visible:ring-0 [&>svg]:-order-1\">\n              <span className=\"flex items-center gap-3\">\n                <item.icon\n                  size={16}\n                  className=\"shrink-0 opacity-60\"\n                  aria-hidden=\"true\"\n                />\n                <span>{item.title}</span>\n              </span>\n            </AccordionTrigger>\n            <AccordionContent className=\"p-0\">\n              {item.collapsibles.map((collapsible, index) => (\n                <CollapsibleDemo\n                  key={index}\n                  title={collapsible.title}\n                  content={collapsible.content}\n                  open={collapsible.open}\n                  icon={collapsible.icon}\n                />\n              ))}\n            </AccordionContent>\n          </AccordionItem>\n        ))}\n      </Accordion>\n    </div>\n  )\n}\n\nfunction CollapsibleDemo({\n  title,\n  content,\n  open,\n  icon: Icon,\n}: {\n  title: string\n  content: string\n  open?: boolean\n  icon: LucideIcon\n}) {\n  return (\n    <Collapsible className=\"border-t py-3 ps-6 pe-4\" defaultOpen={open}>\n      <CollapsibleTrigger className=\"flex gap-2 text-[15px] leading-6 font-semibold [&[data-state=open]>svg]:rotate-180\">\n        <ChevronDownIcon\n          size={16}\n          className=\"mt-1 shrink-0 opacity-60 transition-transform duration-200\"\n          aria-hidden=\"true\"\n        />\n        <span className=\"flex items-center gap-3\">\n          <Icon size={16} className=\"shrink-0 opacity-60\" aria-hidden=\"true\" />\n          <span>{title}</span>\n        </span>\n      </CollapsibleTrigger>\n      <CollapsibleContent className=\"text-muted-foreground data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down mt-1 overflow-hidden ps-6 text-sm transition-all\">\n        {content}\n      </CollapsibleContent>\n    </Collapsible>\n  )\n}\n",
      "path": "registry/default/components/comp-353.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-center justify-between gap-4 rounded-md py-4 text-left text-sm font-semibold transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon\n          size={16}\n          className=\"pointer-events-none shrink-0 opacity-60 transition-transform duration-200\"\n          aria-hidden=\"true\"\n        />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionContent, AccordionItem, AccordionTrigger }\n",
      "path": "registry/default/ui/accordion.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/collapsible.tsx",
      "content": "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nfunction Collapsible({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\n  return <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />\n}\n\nfunction CollapsibleTrigger({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleTrigger\n      data-slot=\"collapsible-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction CollapsibleContent({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      data-slot=\"collapsible-content\"\n      {...props}\n    />\n  )\n}\n\nexport { Collapsible, CollapsibleContent, CollapsibleTrigger }\n",
      "path": "registry/default/ui/collapsible.tsx"
    }
  ],
  "meta": {
    "tags": [
      "accordion",
      "collapsible",
      "radix"
    ],
    "colSpan": 2
  }
}
