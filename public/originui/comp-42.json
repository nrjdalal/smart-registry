{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-42",
  "type": "registry:component",
  "dependencies": [
    "@internationalized/date",
    "clsx",
    "lucide-react",
    "react",
    "react-aria-components",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://originui.com/r/calendar-rac.json",
    "https://originui.com/r/datefield-rac.json"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/comp-42.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { RangeCalendar } from \"@/components/ui/calendar-rac\";\nimport { DateInput, dateInputStyle } from \"@/components/ui/datefield-rac\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { Button, DateRangePicker, Dialog, Group, Label, Popover } from \"react-aria-components\";\n\nexport default function Component() {\n  return (\n    <DateRangePicker className=\"*:not-first:mt-2\">\n      <Label className=\"text-foreground text-sm font-medium\">Date range picker</Label>\n      <div className=\"flex\">\n        <Group className={cn(dateInputStyle, \"pe-9\")}>\n          <DateInput slot=\"start\" unstyled />\n          <span aria-hidden=\"true\" className=\"text-muted-foreground/70 px-2\">\n            -\n          </span>\n          <DateInput slot=\"end\" unstyled />\n        </Group>\n        <Button className=\"text-muted-foreground/80 hover:text-foreground data-focus-visible:border-ring data-focus-visible:ring-ring/50 z-10 -ms-9 -me-px flex w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none data-focus-visible:ring-[3px]\">\n          <CalendarIcon size={16} />\n        </Button>\n      </div>\n      <Popover\n        className=\"bg-background text-popover-foreground data-entering:animate-in data-exiting:animate-out data-[entering]:fade-in-0 data-[exiting]:fade-out-0 data-[entering]:zoom-in-95 data-[exiting]:zoom-out-95 data-[placement=bottom]:slide-in-from-top-2 data-[placement=left]:slide-in-from-right-2 data-[placement=right]:slide-in-from-left-2 data-[placement=top]:slide-in-from-bottom-2 z-50 rounded-md border shadow-lg outline-hidden\"\n        offset={4}\n      >\n        <Dialog className=\"max-h-[inherit] overflow-auto p-2\">\n          <RangeCalendar />\n        </Dialog>\n      </Popover>\n      <p className=\"text-muted-foreground mt-2 text-xs\" role=\"region\" aria-live=\"polite\">\n        Built with{\" \"}\n        <a\n          className=\"hover:text-foreground underline\"\n          href=\"https://react-spectrum.adobe.com/react-aria/DateRangePicker.html\"\n          target=\"_blank\"\n          rel=\"noopener nofollow\"\n        >\n          React Aria\n        </a>\n      </p>\n    </DateRangePicker>\n  );\n}\n",
      "path": "registry/default/components/comp-42.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/default/lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/calendar-rac.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\";\nimport { ComponentProps } from \"react\";\nimport {\n  Button,\n  CalendarCell as CalendarCellRac,\n  CalendarGridBody as CalendarGridBodyRac,\n  CalendarGridHeader as CalendarGridHeaderRac,\n  CalendarGrid as CalendarGridRac,\n  CalendarHeaderCell as CalendarHeaderCellRac,\n  Calendar as CalendarRac,\n  Heading as HeadingRac,\n  RangeCalendar as RangeCalendarRac,\n  composeRenderProps,\n} from \"react-aria-components\";\n\ninterface BaseCalendarProps {\n  className?: string;\n}\n\ntype CalendarProps = ComponentProps<typeof CalendarRac> & BaseCalendarProps;\ntype RangeCalendarProps = ComponentProps<typeof RangeCalendarRac> & BaseCalendarProps;\n\nfunction CalendarHeader() {\n  return (\n    <header className=\"flex w-full items-center gap-1 pb-1\">\n      <Button\n        slot=\"previous\"\n        className=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n      >\n        <ChevronLeftIcon size={16} />\n      </Button>\n      <HeadingRac className=\"grow text-center text-sm font-medium\" />\n      <Button\n        slot=\"next\"\n        className=\"text-muted-foreground/80 hover:bg-accent hover:text-foreground focus-visible:ring-ring/50 flex size-9 items-center justify-center rounded-md transition-[color,box-shadow] outline-none focus-visible:ring-[3px]\"\n      >\n        <ChevronRightIcon size={16} />\n      </Button>\n    </header>\n  );\n}\n\nfunction CalendarGridComponent({ isRange = false }: { isRange?: boolean }) {\n  const now = today(getLocalTimeZone());\n\n  return (\n    <CalendarGridRac>\n      <CalendarGridHeaderRac>\n        {(day) => (\n          <CalendarHeaderCellRac className=\"text-muted-foreground/80 size-9 rounded-md p-0 text-xs font-medium\">\n            {day}\n          </CalendarHeaderCellRac>\n        )}\n      </CalendarGridHeaderRac>\n      <CalendarGridBodyRac className=\"[&_td]:px-0 [&_td]:py-px\">\n        {(date) => (\n          <CalendarCellRac\n            date={date}\n            className={cn(\n              \"text-foreground data-hovered:bg-accent data-selected:bg-primary data-hovered:text-foreground data-selected:text-primary-foreground data-focus-visible:ring-ring/50 relative flex size-9 items-center justify-center rounded-md p-0 text-sm font-normal whitespace-nowrap [transition-property:color,background-color,border-radius,box-shadow] duration-150 outline-none data-disabled:pointer-events-none data-disabled:opacity-30 data-focus-visible:z-10 data-focus-visible:ring-[3px] data-unavailable:pointer-events-none data-unavailable:line-through data-unavailable:opacity-30\",\n              // Range-specific styles\n              isRange &&\n                \"data-selected:bg-accent data-selected:text-foreground data-invalid:data-selection-end:bg-destructive data-invalid:data-selection-start:bg-destructive data-selection-end:bg-primary data-selection-start:bg-primary data-selection-end:text-primary-foreground data-selection-start:text-primary-foreground data-invalid:bg-red-100 data-selected:rounded-none data-selection-end:rounded-e-md data-invalid:data-selection-end:text-white data-selection-start:rounded-s-md data-invalid:data-selection-start:text-white\",\n              // Today indicator styles\n              date.compare(now) === 0 &&\n                cn(\n                  \"after:bg-primary after:pointer-events-none after:absolute after:start-1/2 after:bottom-1 after:z-10 after:size-[3px] after:-translate-x-1/2 after:rounded-full\",\n                  isRange\n                    ? \"data-selection-end:after:bg-background data-selection-start:after:bg-background\"\n                    : \"data-selected:after:bg-background\",\n                ),\n            )}\n          />\n        )}\n      </CalendarGridBodyRac>\n    </CalendarGridRac>\n  );\n}\n\nfunction Calendar({ className, ...props }: CalendarProps) {\n  return (\n    <CalendarRac\n      {...props}\n      className={composeRenderProps(className, (className) => cn(\"w-fit\", className))}\n    >\n      <CalendarHeader />\n      <CalendarGridComponent />\n    </CalendarRac>\n  );\n}\n\nfunction RangeCalendar({ className, ...props }: RangeCalendarProps) {\n  return (\n    <RangeCalendarRac\n      {...props}\n      className={composeRenderProps(className, (className) => cn(\"w-fit\", className))}\n    >\n      <CalendarHeader />\n      <CalendarGridComponent isRange />\n    </RangeCalendarRac>\n  );\n}\n\nexport { Calendar, RangeCalendar };\n",
      "path": "registry/default/ui/calendar-rac.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/datefield-rac.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport {\n  DateFieldProps,\n  DateField as DateFieldRac,\n  DateInputProps as DateInputPropsRac,\n  DateInput as DateInputRac,\n  DateSegmentProps,\n  DateSegment as DateSegmentRac,\n  DateValue as DateValueRac,\n  TimeFieldProps,\n  TimeField as TimeFieldRac,\n  TimeValue as TimeValueRac,\n  composeRenderProps,\n} from \"react-aria-components\";\n\nfunction DateField<T extends DateValueRac>({ className, children, ...props }: DateFieldProps<T>) {\n  return (\n    <DateFieldRac\n      className={composeRenderProps(className, (className) => cn(className))}\n      {...props}\n    >\n      {children}\n    </DateFieldRac>\n  );\n}\n\nfunction TimeField<T extends TimeValueRac>({ className, children, ...props }: TimeFieldProps<T>) {\n  return (\n    <TimeFieldRac\n      className={composeRenderProps(className, (className) => cn(className))}\n      {...props}\n    >\n      {children}\n    </TimeFieldRac>\n  );\n}\n\nfunction DateSegment({ className, ...props }: DateSegmentProps) {\n  return (\n    <DateSegmentRac\n      className={composeRenderProps(className, (className) =>\n        cn(\n          \"text-foreground data-focused:bg-accent data-invalid:data-focused:bg-destructive data-focused:data-placeholder:text-foreground data-focused:text-foreground data-invalid:data-placeholder:text-destructive data-invalid:text-destructive data-placeholder:text-muted-foreground/70 data-[type=literal]:text-muted-foreground/70 inline rounded p-0.5 caret-transparent outline-hidden data-disabled:cursor-not-allowed data-disabled:opacity-50 data-invalid:data-focused:text-white data-invalid:data-focused:data-placeholder:text-white data-[type=literal]:px-0\",\n          className,\n        ),\n      )}\n      {...props}\n      data-invalid\n    />\n  );\n}\n\nconst dateInputStyle =\n  \"relative inline-flex h-9 w-full items-center overflow-hidden whitespace-nowrap rounded-md border border-input bg-background px-3 py-2 text-sm shadow-xs transition-[color,box-shadow] outline-none data-focus-within:border-ring data-focus-within:ring-ring/50 data-focus-within:ring-[3px] data-focus-within:has-aria-invalid:ring-destructive/20 dark:data-focus-within:has-aria-invalid:ring-destructive/40 data-focus-within:has-aria-invalid:border-destructive\";\n\ninterface DateInputProps extends DateInputPropsRac {\n  className?: string;\n  unstyled?: boolean;\n}\n\nfunction DateInput({ className, unstyled = false, ...props }: Omit<DateInputProps, \"children\">) {\n  return (\n    <DateInputRac\n      className={composeRenderProps(className, (className) =>\n        cn(!unstyled && dateInputStyle, className),\n      )}\n      {...props}\n    >\n      {(segment) => <DateSegment segment={segment} />}\n    </DateInputRac>\n  );\n}\n\nexport { DateField, DateInput, DateSegment, TimeField, dateInputStyle };\nexport type { DateInputProps };\n",
      "path": "registry/default/ui/datefield-rac.tsx"
    }
  ],
  "meta": {
    "tags": [
      "input",
      "label",
      "date",
      "calendar",
      "range calendar",
      "picker",
      "react aria"
    ]
  }
}
