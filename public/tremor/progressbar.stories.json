{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "progressbar.stories",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "clsx",
    "react",
    "tailwind-merge",
    "tailwind-variants"
  ],
  "devDependencies": [
    "@storybook/react"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/ProgressBar/progressbar.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { Card } from \"@/components/Card/Card\"\nimport { ProgressBar } from \"@/components/ProgressBar/ProgressBar\"\n\nconst meta: Meta<typeof ProgressBar> = {\n  title: \"visualization/ProgressBar\",\n  render: (args) => (\n    <ProgressBar {...args} className=\"w-96\" data-testid=\"progressbar\" />\n  ),\n  component: ProgressBar,\n}\n\nexport default meta\ntype Story = StoryObj<typeof ProgressBar>\n\nexport const Default: Story = {\n  args: {\n    value: 62,\n    label: \"62%\",\n  },\n}\n\nexport const Value0: Story = {\n  args: {\n    value: 0,\n  },\n}\n\nexport const Value120: Story = {\n  args: {\n    value: 120,\n  },\n}\n\nexport const Max: Story = {\n  args: {\n    value: 40,\n    max: 50,\n  },\n}\n\nexport const VariantsComposition: Story = {\n  render: () => (\n    <div className=\"w-96 space-y-4\">\n      <div className=\"flex items-center justify-between space-x-3\">\n        <ProgressBar variant=\"default\" value={50} className=\"w-60\" />\n        <span className=\"text-sm font-semibold text-gray-900 dark:text-gray-50\">\n          Default\n        </span>\n      </div>\n      <div className=\"flex items-center justify-between space-x-3\">\n        <ProgressBar variant=\"neutral\" value={40} className=\"w-60\" />\n        <span className=\"text-sm font-semibold text-gray-900 dark:text-gray-50\">\n          Neutral\n        </span>\n      </div>\n      <div className=\"flex items-center justify-between space-x-3\">\n        <ProgressBar variant=\"success\" value={50} className=\"w-60\" />\n        <span className=\"text-sm font-semibold text-gray-900 dark:text-gray-50\">\n          Success\n        </span>\n      </div>\n      <div className=\"flex items-center justify-between space-x-3\">\n        <ProgressBar variant=\"warning\" value={20} className=\"w-60\" />\n        <span className=\"text-sm font-semibold text-gray-900 dark:text-gray-50\">\n          Warning\n        </span>\n      </div>\n      <div className=\"flex items-center justify-between space-x-3\">\n        <ProgressBar variant=\"error\" value={10} className=\"w-60\" />\n        <span className=\"text-sm font-semibold text-gray-900 dark:text-gray-50\">\n          Error\n        </span>\n      </div>\n    </div>\n  ),\n}\n\nexport const WithKPICard: Story = {\n  render: () => (\n    <Card className=\"w-96\">\n      <p className=\"text-sm font-medium text-gray-900 dark:text-gray-50\">\n        Sales Progress\n      </p>\n      <div className=\"mt-2 flex items-center space-x-2\">\n        <span className=\"whitespace-nowrap text-sm text-gray-500\">\n          Goal 2023\n        </span>\n        <ProgressBar value={54} max={100} label=\"54%\" />\n      </div>\n    </Card>\n  ),\n}\n",
      "path": "src/components/ProgressBar/progressbar.stories.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/Card/Card.tsx",
      "content": "// Tremor Card [v1.0.0]\n\nimport React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\n\nimport { cx } from \"@/utils/cx\"\n\ninterface CardProps extends React.ComponentPropsWithoutRef<\"div\"> {\n  asChild?: boolean\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, asChild, ...props }, forwardedRef) => {\n    const Component = asChild ? Slot : \"div\"\n    return (\n      <Component\n        ref={forwardedRef}\n        className={cx(\n          // base\n          \"relative w-full rounded-lg border p-6 text-left shadow-xs\",\n          // background color\n          \"bg-white dark:bg-[#090E1A]\",\n          // border color\n          \"border-gray-200 dark:border-gray-900\",\n          className,\n        )}\n        tremor-id=\"tremor-raw\"\n        {...props}\n      />\n    )\n  },\n)\n\nCard.displayName = \"Card\"\n\nexport { Card, type CardProps }\n",
      "path": "src/components/Card/Card.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/ProgressBar/ProgressBar.tsx",
      "content": "// Tremor ProgressBar [v0.0.3]\n\nimport React from \"react\"\nimport { tv, type VariantProps } from \"tailwind-variants\"\n\nimport { cx } from \"@/utils/cx\"\n\nconst progressBarVariants = tv({\n  slots: {\n    background: \"\",\n    bar: \"\",\n  },\n  variants: {\n    variant: {\n      default: {\n        background: \"bg-blue-200 dark:bg-blue-500/30\",\n        bar: \"bg-blue-500 dark:bg-blue-500\",\n      },\n      neutral: {\n        background: \"bg-gray-200 dark:bg-gray-500/40\",\n        bar: \"bg-gray-500 dark:bg-gray-500\",\n      },\n      warning: {\n        background: \"bg-yellow-200 dark:bg-yellow-500/30\",\n        bar: \"bg-yellow-500 dark:bg-yellow-500\",\n      },\n      error: {\n        background: \"bg-red-200 dark:bg-red-500/30\",\n        bar: \"bg-red-500 dark:bg-red-500\",\n      },\n      success: {\n        background: \"bg-emerald-200 dark:bg-emerald-500/30\",\n        bar: \"bg-emerald-500 dark:bg-emerald-500\",\n      },\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\ninterface ProgressBarProps\n  extends React.HTMLProps<HTMLDivElement>,\n    VariantProps<typeof progressBarVariants> {\n  value?: number\n  max?: number\n  showAnimation?: boolean\n  label?: string\n}\n\nconst ProgressBar = React.forwardRef<HTMLDivElement, ProgressBarProps>(\n  (\n    {\n      value = 0,\n      max = 100,\n      label,\n      showAnimation = false,\n      variant,\n      className,\n      ...props\n    }: ProgressBarProps,\n    forwardedRef,\n  ) => {\n    const safeValue = Math.min(max, Math.max(value, 0))\n    const { background, bar } = progressBarVariants({ variant })\n    return (\n      <div\n        ref={forwardedRef}\n        className={cx(\"flex w-full items-center\", className)}\n        role=\"progressbar\"\n        aria-label=\"Progress bar\"\n        aria-valuenow={value}\n        aria-valuemax={max}\n        tremor-id=\"tremor-raw\"\n        {...props}\n      >\n        <div\n          className={cx(\n            \"relative flex h-2 w-full items-center rounded-full\",\n            background(),\n          )}\n        >\n          <div\n            className={cx(\n              \"h-full flex-col rounded-full\",\n              bar(),\n              showAnimation &&\n                \"transform-gpu transition-all duration-300 ease-in-out\",\n            )}\n            style={{\n              width: max ? `${(safeValue / max) * 100}%` : `${safeValue}%`,\n            }}\n          />\n        </div>\n        {label ? (\n          <span\n            className={cx(\n              // base\n              \"ml-2 whitespace-nowrap text-sm font-medium leading-none\",\n              // text color\n              \"text-gray-900 dark:text-gray-50\",\n            )}\n          >\n            {label}\n          </span>\n        ) : null}\n      </div>\n    )\n  },\n)\n\nProgressBar.displayName = \"ProgressBar\"\n\nexport { ProgressBar, progressBarVariants, type ProgressBarProps }\n",
      "path": "src/components/ProgressBar/ProgressBar.tsx"
    },
    {
      "type": "registry:lib",
      "target": "utils/cx.ts",
      "content": "// Tremor cx [v0.0.0]\n\nimport clsx, { type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cx(...args: ClassValue[]) {\n  return twMerge(clsx(...args))\n}\n",
      "path": "src/utils/cx.ts"
    }
  ]
}
