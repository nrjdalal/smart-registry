{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-10",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-progress",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "next",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/card/card-10.tsx",
      "content": "import { Clock, X, Calendar } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport Image from \"next/image\";\n\nexport default function Card_10() {\n    return (\n        <div className=\"w-full max-w-sm mx-auto\">\n            <div className=\"bg-white/80 dark:bg-zinc-900/80 backdrop-blur-xl rounded-2xl shadow-xs border border-zinc-200/50 dark:border-zinc-800/50 overflow-hidden\">\n                <div className=\"p-5 border-b border-zinc-200/50 dark:border-zinc-800/50 bg-white/50 dark:bg-zinc-900/50 backdrop-blur-xs\">\n                    <div className=\"flex items-start justify-between mb-2\">\n                        <h2 className=\"text-lg font-semibold text-zinc-900 dark:text-zinc-100\">\n                            Dental Consultation\n                        </h2>\n                        <div className=\"px-2.5 py-0.5 rounded-full text-xs font-medium border bg-orange-100 text-orange-700 border-orange-200\">\n                            WAITING\n                        </div>\n                    </div>\n                    <p className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                        123 Healthcare Ave, Medical Center\n                    </p>\n                </div>\n\n                <div className=\"p-5 space-y-5\">\n                    <div className=\"flex items-center gap-3 p-3 bg-zinc-100 dark:bg-zinc-800 rounded-xl\">\n                        <Image\n                            src=\"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/avatar-01-n0x8HFv8EUetf9z6ht0wScJKoTHqf8.png\"\n                            width={40}\n                            height={40}\n                            alt=\"Avatar\"\n                        />\n                        <div>\n                            <div className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                                Sarah Johnson\n                            </div>\n                            <div className=\"text-xs text-zinc-500 dark:text-zinc-400\">\n                                sarah.j@example.com\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-2 gap-3\">\n                        {[\"position\", \"wait\"].map((type) => (\n                            <div\n                                key={type}\n                                className=\"bg-zinc-100 dark:bg-zinc-800 rounded-xl p-3\"\n                            >\n                                {type === \"position\" ? (\n                                    <>\n                                        <span className=\"text-xs font-medium text-zinc-500 dark:text-zinc-400\">\n                                            Position\n                                        </span>\n                                        <div className=\"flex items-baseline mt-1\">\n                                            <span className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                                                #3\n                                            </span>\n                                            <span className=\"text-xs text-zinc-500 dark:text-zinc-400 ml-1\">\n                                                in queue\n                                            </span>\n                                        </div>\n                                    </>\n                                ) : (\n                                    <>\n                                        <span className=\"text-xs font-medium text-zinc-500 dark:text-zinc-400\">\n                                            Estimated Wait\n                                        </span>\n                                        <div className=\"flex items-baseline mt-1\">\n                                            <span className=\"text-xl font-semibold text-zinc-900 dark:text-zinc-100\">\n                                                25\n                                            </span>\n                                            <span className=\"text-xs text-zinc-500 dark:text-zinc-400 ml-1\">\n                                                min\n                                            </span>\n                                        </div>\n                                    </>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between text-xs px-1\">\n                            <div className=\"flex items-center gap-1.5\">\n                                <Clock className=\"w-3.5 h-3.5 text-zinc-400\" />\n                                <span className=\"text-zinc-500 font-medium\">\n                                    09:30\n                                </span>\n                            </div>\n                            <div className=\"flex items-center gap-1.5\">\n                                <span className=\"text-zinc-500 font-medium\">\n                                    {new Date().toLocaleDateString()}\n                                </span>\n                                <Calendar className=\"w-3.5 h-3.5 text-zinc-400\" />\n                            </div>\n                        </div>\n                        <div>\n                            <Progress\n                                value={45}\n                                className=\"h-1 bg-zinc-200 dark:bg-zinc-700\"\n                            />\n                        </div>\n                    </div>\n\n                    <Button\n                        variant=\"ghost\"\n                        className=\"w-full text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-950/50 h-9 text-sm\"\n                    >\n                        <X className=\"w-4 h-4 mr-2\" />\n                        Cancel Reservation\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/card/card-10.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/progress.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-zinc-100 dark:bg-zinc-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-zinc-900 transition-all dark:bg-zinc-50\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
      "path": "components/ui/progress.tsx"
    }
  ]
}
