{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "smart-registry-comp-391",
  "type": "registry:component",
  "dependencies": ["@radix-ui/react-avatar", "react", "clsx", "tailwind-merge"],
  "files": [
    {
      "type": "registry:component",
      "target": "components/smart-registry/comp-391.tsx",
      "content": "import { Avatar, AvatarFallback } from \"@/components/ui/avatar\"\n\nexport default function Component() {\n  return (\n    <Avatar>\n      <AvatarFallback>KK</AvatarFallback>\n    </Avatar>\n  )\n}\n",
      "path": "registry/default/components/comp-391.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/avatar.tsx",
      "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\nimport * as React from \"react\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-secondary flex size-full items-center justify-center rounded-[inherit] text-xs\",\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarFallback, AvatarImage }\n",
      "path": "registry/default/ui/avatar.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ]
}
