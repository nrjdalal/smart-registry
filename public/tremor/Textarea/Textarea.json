{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Textarea/Textarea",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:lib",
      "target": "utils/cx.ts",
      "content": "// Tremor cx [v0.0.0]\n\nimport clsx, { type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cx(...args: ClassValue[]) {\n  return twMerge(clsx(...args))\n}\n",
      "path": "src/utils/cx.ts"
    },
    {
      "type": "registry:lib",
      "target": "utils/focusInput.ts",
      "content": "// Tremor focusInput [v0.0.1]\n\nexport const focusInput = [\n  // base\n  \"focus:ring-2\",\n  // ring color\n  \"focus:ring-blue-200 focus:dark:ring-blue-700/30\",\n  // border color\n  \"focus:border-blue-500 focus:dark:border-blue-700\",\n]\n",
      "path": "src/utils/focusInput.ts"
    },
    {
      "type": "registry:lib",
      "target": "utils/hasErrorInput.ts",
      "content": "// Tremor hasErrorInput [v0.0.1]\n\nexport const hasErrorInput = [\n  // base\n  \"ring-2\",\n  // border color\n  \"border-red-500 dark:border-red-700\",\n  // ring color\n  \"ring-red-200 dark:ring-red-700/30\",\n]\n",
      "path": "src/utils/hasErrorInput.ts"
    },
    {
      "type": "registry:component",
      "target": "components/Textarea/Textarea.tsx",
      "content": "// Tremor Textarea [v0.0.2]\n\nimport React from \"react\"\n\nimport { cx } from \"@/utils/cx\"\nimport { focusInput } from \"@/utils/focusInput\"\nimport { hasErrorInput } from \"@/utils/hasErrorInput\"\n\ninterface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  hasError?: boolean\n}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, hasError, ...props }: TextareaProps, forwardedRef) => {\n    return (\n      <textarea\n        ref={forwardedRef}\n        className={cx(\n          // base\n          \"flex min-h-[4rem] w-full rounded-md border px-3 py-1.5 shadow-sm outline-none transition-colors sm:text-sm\",\n          // text color\n          \"text-gray-900 dark:text-gray-50\",\n          // border color\n          \"border-gray-300 dark:border-gray-800\",\n          // background color\n          \"bg-white dark:bg-gray-950\",\n          // placeholder color\n          \"placeholder-gray-400 dark:placeholder-gray-500\",\n          // disabled\n          \"disabled:border-gray-300 disabled:bg-gray-100 disabled:text-gray-300\",\n          \"disabled:dark:border-gray-700 disabled:dark:bg-gray-800 disabled:dark:text-gray-500\",\n          // focus\n          focusInput,\n          // error\n          hasError ? hasErrorInput : \"\",\n          // invalid (optional)\n          // \"aria-[invalid=true]:dark:ring-red-400/20 aria-[invalid=true]:ring-2 aria-[invalid=true]:ring-red-200 aria-[invalid=true]:border-red-500 invalid:ring-2 invalid:ring-red-200 invalid:border-red-500\"\n          className,\n        )}\n        tremor-id=\"tremor-raw\"\n        {...props}\n      />\n    )\n  },\n)\n\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea, type TextareaProps }\n",
      "path": "src/components/Textarea/Textarea.tsx"
    }
  ]
}
