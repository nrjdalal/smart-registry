{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "example-flex-demo",
  "type": "registry:file",
  "dependencies": [
    "solid-js"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "example/flex-demo.tsx",
      "content": "import { Card } from \"@/components/ui/card\"\nimport { Flex } from \"@/components/ui/flex\"\n\nexport default function FlexDemo() {\n  return (\n    <Card class=\"w-full max-w-xs p-6\">\n      <Flex>\n        <div>\n          <p class=\"text-sm font-normal text-card-foreground/70\">Tickets sold</p>\n          <p class=\"text-3xl font-semibold text-card-foreground\">9,876</p>\n        </div>\n        <div>\n          <p class=\"text-sm font-normal text-card-foreground/70\">Average Selling Price</p>\n          <p class=\"text-3xl font-semibold text-card-foreground\">$ 175.20</p>\n        </div>\n      </Flex>\n    </Card>\n  )\n}\n",
      "path": "src/registry/example/flex-demo.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <div\n      class={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", local.class)}\n      {...others}\n    />\n  )\n}\n\nconst CardHeader: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex flex-col space-y-1.5 p-6\", local.class)} {...others} />\n}\n\nconst CardTitle: Component<ComponentProps<\"h3\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <h3 class={cn(\"text-lg font-semibold leading-none tracking-tight\", local.class)} {...others} />\n  )\n}\n\nconst CardDescription: Component<ComponentProps<\"p\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <p class={cn(\"text-sm text-muted-foreground\", local.class)} {...others} />\n}\n\nconst CardContent: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"p-6 pt-0\", local.class)} {...others} />\n}\n\nconst CardFooter: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex items-center p-6 pt-0\", local.class)} {...others} />\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "src/registry/ui/card.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/flex.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { mergeProps, splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype JustifyContent = \"start\" | \"end\" | \"center\" | \"between\" | \"around\" | \"evenly\"\ntype AlignItems = \"start\" | \"end\" | \"center\" | \"baseline\" | \"stretch\"\ntype FlexDirection = \"row\" | \"col\" | \"row-reverse\" | \"col-reverse\"\n\ntype FlexProps = ComponentProps<\"div\"> & {\n  flexDirection?: FlexDirection\n  justifyContent?: JustifyContent\n  alignItems?: AlignItems\n}\n\nconst Flex: Component<FlexProps> = (rawProps) => {\n  const props = mergeProps(\n    {\n      flexDirection: \"row\",\n      justifyContent: \"between\",\n      alignItems: \"center\"\n    } satisfies FlexProps,\n    rawProps\n  )\n  const [local, others] = splitProps(props, [\n    \"flexDirection\",\n    \"justifyContent\",\n    \"alignItems\",\n    \"class\"\n  ])\n\n  return (\n    <div\n      class={cn(\n        \"flex w-full\",\n        flexDirectionClassNames[local.flexDirection],\n        justifyContentClassNames[local.justifyContent],\n        alignItemsClassNames[local.alignItems],\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\nexport { Flex }\n\nconst justifyContentClassNames: { [key in JustifyContent]: string } = {\n  start: \"justify-start\",\n  end: \"justify-end\",\n  center: \"justify-center\",\n  between: \"justify-between\",\n  around: \"justify-around\",\n  evenly: \"justify-evenly\"\n}\n\nconst alignItemsClassNames: { [key in AlignItems]: string } = {\n  start: \"items-start\",\n  end: \"items-end\",\n  center: \"items-center\",\n  baseline: \"items-baseline\",\n  stretch: \"items-stretch\"\n}\n\nconst flexDirectionClassNames: { [key in FlexDirection]: string } = {\n  row: \"flex-row\",\n  col: \"flex-col\",\n  \"row-reverse\": \"flex-row-reverse\",\n  \"col-reverse\": \"flex-col-reverse\"\n}\n",
      "path": "src/registry/ui/flex.tsx"
    }
  ]
}
