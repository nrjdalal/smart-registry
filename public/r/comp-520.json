{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components/smart-registry/comp-520",
  "type": "registry:component",
  "dependencies": [
    "lucide-react",
    "react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/smart-registry/comp-520.tsx",
      "content": "\"use client\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  Stepper,\n  StepperIndicator,\n  StepperItem,\n  StepperTrigger,\n} from \"@/registry/default/ui/stepper\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\"\nimport { useState } from \"react\"\n\nconst steps = [1, 2, 3, 4]\n\nexport default function Component() {\n  const [currentStep, setCurrentStep] = useState(2)\n\n  return (\n    <div className=\"mx-auto max-w-xl space-y-8 text-center\">\n      <div className=\"flex items-center gap-2\">\n        <Button\n          className=\"shrink-0\"\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={() => setCurrentStep((prev) => prev - 1)}\n          disabled={currentStep === 1}\n          aria-label=\"Prev step\"\n        >\n          <ChevronLeftIcon size={16} aria-hidden=\"true\" />\n        </Button>\n        <Stepper\n          value={currentStep}\n          onValueChange={setCurrentStep}\n          className=\"gap-1\"\n        >\n          {steps.map((step) => (\n            <StepperItem key={step} step={step} className=\"flex-1\">\n              <StepperTrigger\n                className=\"w-full flex-col items-start gap-2\"\n                asChild\n              >\n                <StepperIndicator asChild className=\"bg-border h-1 w-full\">\n                  <span className=\"sr-only\">{step}</span>\n                </StepperIndicator>\n              </StepperTrigger>\n            </StepperItem>\n          ))}\n        </Stepper>\n        <Button\n          className=\"shrink-0\"\n          variant=\"ghost\"\n          size=\"icon\"\n          onClick={() => setCurrentStep((prev) => prev + 1)}\n          disabled={currentStep === steps.length}\n          aria-label=\"Next step\"\n        >\n          <ChevronRightIcon size={16} aria-hidden=\"true\" />\n        </Button>\n      </div>\n      <p\n        className=\"text-muted-foreground mt-2 text-xs\"\n        role=\"region\"\n        aria-live=\"polite\"\n      >\n        Paginated stepper\n      </p>\n    </div>\n  )\n}\n",
      "path": "registry/default/components/comp-520.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/smart-registry/button.tsx",
      "content": "import { cn } from \"@/registry/default/lib/utils\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport * as React from \"react\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n",
      "path": "registry/default/ui/button.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/smart-registry/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ]
}