{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "table",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "target": "components/Table/Table.tsx",
      "content": "// Tremor Table [v1.0.0]\n\nimport React from \"react\"\n\nimport { cx } from \"@/utils/cx\"\n\nconst TableRoot = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, children, ...props }, forwardedRef) => (\n  <div\n    ref={forwardedRef}\n    // Activate if table is used in a float environment\n    // className=\"flow-root\"\n  >\n    <div\n      // make table scrollable on mobile\n      className={cx(\"w-full overflow-auto whitespace-nowrap\", className)}\n      {...props}\n    >\n      {children}\n    </div>\n  </div>\n))\n\nTableRoot.displayName = \"TableRoot\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.TableHTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, forwardedRef) => (\n  <table\n    ref={forwardedRef}\n    tremor-id=\"tremor-raw\"\n    className={cx(\n      // base\n      \"w-full caption-bottom border-b\",\n      // border color\n      \"border-gray-200 dark:border-gray-800\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTable.displayName = \"Table\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, forwardedRef) => (\n  <thead ref={forwardedRef} className={cx(className)} {...props} />\n))\n\nTableHead.displayName = \"TableHead\"\n\nconst TableHeaderCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, forwardedRef) => (\n  <th\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"border-b px-4 py-3.5 text-left text-sm font-semibold\",\n      // text color\n      \"text-gray-900 dark:text-gray-50\",\n      // border color\n      \"border-gray-200 dark:border-gray-800\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTableHeaderCell.displayName = \"TableHeaderCell\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, forwardedRef) => (\n  <tbody\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"divide-y\",\n      // divide color\n      \"divide-gray-200 dark:divide-gray-800\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTableBody.displayName = \"TableBody\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, forwardedRef) => (\n  <tr\n    ref={forwardedRef}\n    className={cx(\n      \"[&_td:last-child]:pr-4 [&_th:last-child]:pr-4\",\n      \"[&_td:first-child]:pl-4 [&_th:first-child]:pl-4\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTableRow.displayName = \"TableRow\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, forwardedRef) => (\n  <td\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"p-4 text-sm\",\n      // text color\n      \"text-gray-600 dark:text-gray-400\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTableCell.displayName = \"TableCell\"\n\nconst TableFoot = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, forwardedRef) => {\n  return (\n    <tfoot\n      ref={forwardedRef}\n      className={cx(\n        // base\n        \"border-t text-left font-medium\",\n        // text color\n        \"text-gray-900 dark:text-gray-50\",\n        // border color\n        \"border-gray-200 dark:border-gray-800\",\n        className,\n      )}\n      {...props}\n    />\n  )\n})\n\nTableFoot.displayName = \"TableFoot\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, forwardedRef) => (\n  <caption\n    ref={forwardedRef}\n    className={cx(\n      // base\n      \"mt-3 px-3 text-center text-sm\",\n      // text color\n      \"text-gray-500 dark:text-gray-500\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFoot,\n  TableHead,\n  TableHeaderCell,\n  TableRoot,\n  TableRow,\n}\n",
      "path": "src/components/Table/Table.tsx"
    },
    {
      "type": "registry:lib",
      "target": "utils/cx.ts",
      "content": "// Tremor cx [v0.0.0]\n\nimport clsx, { type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cx(...args: ClassValue[]) {\n  return twMerge(clsx(...args))\n}\n",
      "path": "src/utils/cx.ts"
    }
  ]
}
