{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-536",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "clsx",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/comp-536.tsx",
      "content": "import {\n  Timeline,\n  TimelineContent,\n  TimelineDate,\n  TimelineHeader,\n  TimelineIndicator,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineTitle,\n} from \"@/components/ui/timeline\";\n\nconst items = [\n  {\n    id: 1,\n    date: \"15 minutes ago\",\n    title: \"Hannah Kandell\",\n    action: \"opened a new issue\",\n    description: \"I'm having trouble with the new component library. It's not rendering properly.\",\n    image: \"/avatar-40-01.jpg\",\n  },\n  {\n    id: 2,\n    date: \"10 minutes ago\",\n    title: \"Chris Tompson\",\n    action: \"commented on\",\n    description:\n      \"Hey Hannah, I'm having trouble with the new component library. It's not rendering properly.\",\n    image: \"/avatar-40-02.jpg\",\n  },\n  {\n    id: 3,\n    date: \"5 minutes ago\",\n    title: \"Emma Davis\",\n    action: \"assigned you to\",\n    description: \"The new component library is not rendering properly. Can you take a look?\",\n    image: \"/avatar-40-03.jpg\",\n  },\n  {\n    id: 4,\n    date: \"2 minutes ago\",\n    title: \"Alex Morgan\",\n    action: \"closed the issue\",\n    description: \"The issue has been fixed. Please review the changes.\",\n    image: \"/avatar-40-05.jpg\",\n  },\n];\n\nexport default function Component() {\n  return (\n    <Timeline>\n      {items.map((item) => (\n        <TimelineItem\n          key={item.id}\n          step={item.id}\n          className=\"group-data-[orientation=vertical]/timeline:ms-10 group-data-[orientation=vertical]/timeline:not-last:pb-8\"\n        >\n          <TimelineHeader>\n            <TimelineSeparator className=\"group-data-[orientation=vertical]/timeline:-left-7 group-data-[orientation=vertical]/timeline:h-[calc(100%-1.5rem-0.25rem)] group-data-[orientation=vertical]/timeline:translate-y-6.5\" />\n            <TimelineTitle className=\"mt-0.5\">\n              {item.title}{\" \"}\n              <span className=\"text-muted-foreground text-sm font-normal\">{item.action}</span>\n            </TimelineTitle>\n            <TimelineIndicator className=\"bg-primary/10 group-data-completed/timeline-item:bg-primary group-data-completed/timeline-item:text-primary-foreground flex size-6 items-center justify-center border-none group-data-[orientation=vertical]/timeline:-left-7\">\n              <img src={item.image} alt={item.title} className=\"size-6 rounded-full\" />\n            </TimelineIndicator>\n          </TimelineHeader>\n          <TimelineContent className=\"text-foreground mt-2 rounded-lg border px-4 py-3\">\n            {item.description}\n            <TimelineDate className=\"mt-1 mb-0\">{item.date}</TimelineDate>\n          </TimelineContent>\n        </TimelineItem>\n      ))}\n    </Timeline>\n  );\n}\n",
      "path": "registry/default/components/comp-536.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/timeline.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\n\n// Types\ntype TimelineContextValue = {\n  activeStep: number;\n  setActiveStep: (step: number) => void;\n};\n\n// Context\nconst TimelineContext = React.createContext<TimelineContextValue | undefined>(undefined);\n\nconst useTimeline = () => {\n  const context = React.useContext(TimelineContext);\n  if (!context) {\n    throw new Error(\"useTimeline must be used within a Timeline\");\n  }\n  return context;\n};\n\n// Components\ninterface TimelineProps extends React.HTMLAttributes<HTMLDivElement> {\n  defaultValue?: number;\n  value?: number;\n  onValueChange?: (value: number) => void;\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nfunction Timeline({\n  defaultValue = 1,\n  value,\n  onValueChange,\n  orientation = \"vertical\",\n  className,\n  ...props\n}: TimelineProps) {\n  const [activeStep, setInternalStep] = React.useState(defaultValue);\n\n  const setActiveStep = React.useCallback(\n    (step: number) => {\n      if (value === undefined) {\n        setInternalStep(step);\n      }\n      onValueChange?.(step);\n    },\n    [value, onValueChange],\n  );\n\n  const currentStep = value ?? activeStep;\n\n  return (\n    <TimelineContext.Provider value={{ activeStep: currentStep, setActiveStep }}>\n      <div\n        data-slot=\"timeline\"\n        className={cn(\n          \"group/timeline flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col\",\n          className,\n        )}\n        data-orientation={orientation}\n        {...props}\n      />\n    </TimelineContext.Provider>\n  );\n}\n\n// TimelineContent\nfunction TimelineContent({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"timeline-content\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\n// TimelineDate\ninterface TimelineDateProps extends React.HTMLAttributes<HTMLTimeElement> {\n  asChild?: boolean;\n}\n\nfunction TimelineDate({ asChild = false, className, ...props }: TimelineDateProps) {\n  const Comp = asChild ? Slot : \"time\";\n\n  return (\n    <Comp\n      data-slot=\"timeline-date\"\n      className={cn(\n        \"text-muted-foreground mb-1 block text-xs font-medium group-data-[orientation=vertical]/timeline:max-sm:h-4\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\n// TimelineHeader\nfunction TimelineHeader({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return <div data-slot=\"timeline-header\" className={cn(className)} {...props} />;\n}\n\n// TimelineIndicator\ninterface TimelineIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  asChild?: boolean;\n}\n\nfunction TimelineIndicator({\n  asChild = false,\n  className,\n  children,\n  ...props\n}: TimelineIndicatorProps) {\n  return (\n    <div\n      data-slot=\"timeline-indicator\"\n      className={cn(\n        \"border-primary/20 group-data-completed/timeline-item:border-primary absolute size-4 rounded-full border-2 group-data-[orientation=horizontal]/timeline:-top-6 group-data-[orientation=horizontal]/timeline:left-0 group-data-[orientation=horizontal]/timeline:-translate-y-1/2 group-data-[orientation=vertical]/timeline:top-0 group-data-[orientation=vertical]/timeline:-left-6 group-data-[orientation=vertical]/timeline:-translate-x-1/2\",\n        className,\n      )}\n      aria-hidden=\"true\"\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\n// TimelineItem\ninterface TimelineItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  step: number;\n}\n\nfunction TimelineItem({ step, className, ...props }: TimelineItemProps) {\n  const { activeStep } = useTimeline();\n\n  return (\n    <div\n      data-slot=\"timeline-item\"\n      className={cn(\n        \"group/timeline-item has-[+[data-completed]]:[&_[data-slot=timeline-separator]]:bg-primary relative flex flex-1 flex-col gap-0.5 group-data-[orientation=horizontal]/timeline:mt-8 group-data-[orientation=horizontal]/timeline:not-last:pe-8 group-data-[orientation=vertical]/timeline:ms-8 group-data-[orientation=vertical]/timeline:not-last:pb-12\",\n        className,\n      )}\n      data-completed={step <= activeStep || undefined}\n      {...props}\n    />\n  );\n}\n\n// TimelineSeparator\nfunction TimelineSeparator({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      data-slot=\"timeline-separator\"\n      className={cn(\n        \"bg-primary/10 absolute self-start group-last/timeline-item:hidden group-data-[orientation=horizontal]/timeline:-top-6 group-data-[orientation=horizontal]/timeline:h-0.5 group-data-[orientation=horizontal]/timeline:w-[calc(100%-1rem-0.25rem)] group-data-[orientation=horizontal]/timeline:-translate-y-1/2 group-data-[orientation=horizontal]/timeline:translate-x-4.5 group-data-[orientation=vertical]/timeline:-left-6 group-data-[orientation=vertical]/timeline:h-[calc(100%-1rem-0.25rem)] group-data-[orientation=vertical]/timeline:w-0.5 group-data-[orientation=vertical]/timeline:-translate-x-1/2 group-data-[orientation=vertical]/timeline:translate-y-4.5\",\n        className,\n      )}\n      aria-hidden=\"true\"\n      {...props}\n    />\n  );\n}\n\n// TimelineTitle\nfunction TimelineTitle({ className, ...props }: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3 data-slot=\"timeline-title\" className={cn(\"text-sm font-medium\", className)} {...props} />\n  );\n}\n\nexport {\n  Timeline,\n  TimelineContent,\n  TimelineDate,\n  TimelineHeader,\n  TimelineIndicator,\n  TimelineItem,\n  TimelineSeparator,\n  TimelineTitle,\n};\n",
      "path": "registry/default/ui/timeline.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ],
  "registryDependencies": [
    "https://originui.com/r/timeline.json"
  ],
  "meta": {
    "tags": [
      "timeline",
      "vertical timeline"
    ],
    "colSpan": 2
  }
}
