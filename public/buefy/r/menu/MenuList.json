{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menu/MenuList",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "target": "components/menu/MenuList.vue",
      "content": "<script>\nexport default {\n    name: 'BMenuList',\n    functional: true,\n    props: {\n        label: String,\n        icon: String,\n        iconPack: String,\n        ariaRole: {\n            type: String,\n            default: ''\n        },\n        size: {\n            type: String,\n            default: 'is-small'\n        }\n    },\n    render(createElement, context) {\n        let vlabel = null\n        const slots = context.slots()\n        if (context.props.label || slots.label) {\n            vlabel = createElement('p', { attrs: { 'class': 'menu-label' } },\n                context.props.label\n                    ? context.props.icon\n                        ? [\n                            createElement('b-icon', {\n                                props: {\n                                    'icon': context.props.icon,\n                                    'pack': context.props.iconPack,\n                                    'size': context.props.size\n                                }\n                            }),\n                            createElement('span', {}, context.props.label)\n                        ] : context.props.label\n                    : slots.label)\n        }\n        const vnode = createElement('ul', { attrs: { 'class': 'menu-list', 'role': context.props.ariaRole === 'menu' ? context.props.ariaRole : null } }, slots.default)\n        return vlabel ? [ vlabel, vnode ] : vnode\n    }\n}\n</script>\n",
      "path": "src/components/menu/MenuList.vue"
    }
  ]
}
