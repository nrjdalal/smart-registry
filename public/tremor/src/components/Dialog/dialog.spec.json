{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "src/components/Dialog/dialog.spec",
  "type": "registry:file",
  "dependencies": [
    "@playwright/test"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "src/components/Dialog/dialog.spec.ts",
      "content": "import { expect, test } from \"@playwright/test\"\n\ntest.describe(\"Dialog Component\", () => {\n  test.beforeEach(async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-dialog--default\")\n  })\n\n  test(\"should open and display dialog content\", async ({ page }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).click()\n\n    await expect(\n      frame.getByRole(\"heading\", { name: \"Account Created Successfully\" }),\n    ).toBeVisible()\n    await expect(\n      frame.getByText(\n        \"Your account has been created successfully. You can now login to your account. For more information, please contact us.\",\n      ),\n    ).toBeVisible()\n    await expect(frame.getByRole(\"button\", { name: \"Go back\" })).toBeVisible()\n    await expect(\n      frame.getByRole(\"button\", { name: \"Ok, got it!\" }),\n    ).toBeVisible()\n  })\n\n  test(\"should close the dialog when 'Go back' button is clicked\", async ({\n    page,\n  }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).click()\n\n    await frame.getByRole(\"button\", { name: \"Go back\" }).click()\n\n    await expect(\n      frame.getByRole(\"button\", { name: \"Open Dialog\" }),\n    ).toBeVisible()\n  })\n\n  test(\"should close the dialog when 'Ok, got it!' button is clicked\", async ({\n    page,\n  }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).click()\n\n    await frame.getByRole(\"button\", { name: \"Ok, got it!\" }).click()\n\n    await expect(\n      frame.getByRole(\"button\", { name: \"Open Dialog\" }),\n    ).toBeVisible()\n  })\n\n  test(\"should be accessible via keyboard interactions\", async ({ page }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).focus()\n    await page.keyboard.press(\"Enter\")\n\n    await expect(\n      frame.getByRole(\"heading\", { name: \"Account Created Successfully\" }),\n    ).toBeVisible()\n\n    await page.keyboard.press(\"Escape\")\n\n    await expect(\n      frame.getByRole(\"button\", { name: \"Open Dialog\" }),\n    ).toBeVisible()\n  })\n\n  test(\"should support custom class names and styles\", async ({ page }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).click()\n\n    const dialogContent = frame.locator(\".sm\\\\:max-w-lg\")\n    await expect(dialogContent).toHaveClass(/sm:max-w-lg/)\n  })\n\n  test(\"should handle content updates correctly\", async ({ page }) => {\n    const frame = page.frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n\n    await frame.getByRole(\"button\", { name: \"Open Dialog\" }).click()\n\n    await expect(\n      frame.getByText(\n        \"Your account has been created successfully. You can now login to your account. For more information, please contact us.\",\n      ),\n    ).toBeVisible()\n  })\n})\n",
      "path": "src/components/Dialog/dialog.spec.ts"
    }
  ]
}
