{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "landing-hero",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-dropdown-menu",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react",
    "motion",
    "next",
    "next-view-transitions"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/landing/hero.tsx",
      "content": "\"use client\";\n\nimport {\n    PlaneTakeoff,\n    BarChart2,\n    Video,\n    AudioLines,\n    Globe,\n} from \"lucide-react\";\nimport { motion } from \"motion/react\";\nimport { BrowseBlocksButton } from \"@/components/ui/browse-blocks\";\nimport { BrowseComponentsButton } from \"@/components/ui/browse-button\";\nimport FeatureBlock from \"@/components/landing/feature-block\";\nimport ActionSearchBar from \"@/components/kokonutui/action-search-bar\";\nimport CardFlip from \"@/components/kokonutui/card-flip\";\nimport AI_Prompt from \"@/components/kokonutui/ai-prompt\";\nimport AppleActivityCard from \"@/components/kokonutui/apple-activity-card\";\nimport AILoadingState from \"@/components/kokonutui/ai-loading\";\nimport Link from \"next/link\";\n\ninterface Action {\n    id: string;\n    label: string;\n    icon: React.ReactNode;\n    description?: string;\n    short?: string;\n    end?: string;\n}\n\nconst allActions: Action[] = [\n    {\n        id: \"1\",\n        label: \"Book tickets\",\n        icon: <PlaneTakeoff className=\"h-4 w-4 text-blue-500\" />,\n        description: \"Operator\",\n        short: \"⌘K\",\n        end: \"Agent\",\n    },\n    {\n        id: \"2\",\n        label: \"Summarize\",\n        icon: <BarChart2 className=\"h-4 w-4 text-orange-500\" />,\n        description: \"gpt-4o\",\n        short: \"⌘cmd+p\",\n        end: \"Command\",\n    },\n    {\n        id: \"3\",\n        label: \"Screen Studio\",\n        icon: <Video className=\"h-4 w-4 text-purple-500\" />,\n        description: \"gpt-4o\",\n        short: \"\",\n        end: \"Application\",\n    },\n    {\n        id: \"4\",\n        label: \"Talk to Jarvis\",\n        icon: <AudioLines className=\"h-4 w-4 text-green-500\" />,\n        description: \"DeepSeek\",\n        short: \"\",\n        end: \"Active\",\n    },\n    {\n        id: \"5\",\n        label: \"Translate\",\n        icon: <Globe className=\"h-4 w-4 text-blue-500\" />,\n        description: \"Gemini\",\n        short: \"\",\n        end: \"Command\",\n    },\n];\n\nexport function HeroSection() {\n    return (\n        <div className=\"container mx-auto max-w-7xl min-h-[calc(100vh-4rem)] flex flex-col lg:flex-row items-center justify-between gap-8 lg:gap-4 px-4 py-8 md:py-12 relative\">\n            {/* Left side - Title and CTA */}\n            <div className=\"w-full lg:w-[45%] flex flex-col items-start text-left space-y-8 md:mb-28\">\n                <div>\n                    <h1 className=\"text-5xl sm:text-6xl lg:text-7xl font-bold tracking-tight leading-[1.1] text-zinc-900 dark:text-zinc-100\">\n                        Collection of stunning components.\n                    </h1>\n                    <p className=\"mt-6 text-base md:text-xl text-zinc-900/90 dark:text-zinc-300/90 tracking-tighter max-w-lg\">\n                        Beautiful, modern UI components built with{\" \"}\n                        <span className=\"bg-clip-text text-transparent bg-linear-to-r from-orange-500 via-rose-500 to-purple-500 dark:from-orange-400 dark:via-rose-400 dark:to-purple-400\">\n                            Tailwind CSS\n                        </span>\n                        {\", \"}\n                        <span className=\"bg-clip-text text-transparent bg-linear-to-r from-orange-500 via-rose-500 to-purple-500 dark:from-orange-400 dark:via-rose-400 dark:to-purple-400\">\n                            shadcn/ui\n                        </span>\n                        {\" & \"}\n                        <span className=\"bg-clip-text text-transparent bg-linear-to-r from-orange-500 via-rose-500 to-purple-500 dark:from-orange-400 dark:via-rose-400 dark:to-purple-400\">\n                            Motion\n                        </span>\n                        . <br />\n                        100+ open-source components designed for{\" \"}\n                        <span className=\"font-semibold\">React</span>\n                        {\" & \"}\n                        <span className=\"font-semibold\">Next.js</span>.\n                    </p>\n                </div>\n                <div className=\"flex flex-col justify-center sm:justify-start w-full\">\n                    <div className=\"flex flex-col sm:flex-row items-center sm:items-start justify-center sm:justify-start gap-2\">\n                        <BrowseComponentsButton />\n                        <BrowseBlocksButton />\n                    </div>\n                </div>\n                <FeatureBlock />\n                <div className=\"w-full space-y-2 mt-8\">\n                    <div className=\"w-full h-[1px] bg-gradient-to-r from-zinc-950/5 via-zinc-950/50 dark:from-zinc-50/5 dark:via-zinc-50/50 to-transparent\" />\n                    <div className=\"w-[70%] h-[1px] bg-gradient-to-r from-zinc-950/5 via-zinc-950/30 dark:from-zinc-50/5 dark:via-zinc-50/30 to-transparent\" />\n                </div>\n                <Link\n                    href=\"https://vercel.com/blog/spring25-oss-program#kokonutui\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    className=\"text-gray-600 dark:text-gray-400 transition-colors flex items-center gap-1.5 text-xs hover:text-gray-800 dark:hover:text-gray-300 group hover:font-medium hover:cursor-pointer my-1 mt-2 mb-4\"\n                >\n                    <span className=\"flex items-center gap-2\">\n                        <img\n                            alt=\"Vercel OSS Program\"\n                            src=\"https://vercel.com/oss/program-badge.svg\"\n                        />\n                    </span>\n                </Link>\n            </div>\n\n            <div className=\"w-full lg:w-[55%] flex flex-col justify-between gap-8 lg:pl-8\">\n                <motion.div\n                    initial={{ opacity: 0, y: -20, scale: 0.95 }}\n                    animate={{ opacity: 1, y: 0, scale: 1 }}\n                    transition={{ duration: 0.5 }}\n                    className=\"w-full grid grid-cols-1 md:grid-cols-2 gap-6 items-center justify-center relative\"\n                >\n                    <motion.div\n                        className=\"w-full flex flex-col items-center justify-center\"\n                        initial={{ rotate: -5 }}\n                        whileHover={{ rotate: 0, scale: 1.02 }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 300,\n                            damping: 25,\n                        }}\n                    >\n                        <CardFlip />\n                    </motion.div>\n\n                    <motion.div\n                        className=\"w-full\"\n                        initial={{ rotate: 3, y: 20 }}\n                        whileHover={{ rotate: 0, y: 0, scale: 1.02 }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 300,\n                            damping: 25,\n                        }}\n                    >\n                        <ActionSearchBar\n                            actions={allActions}\n                            defaultOpen={true}\n                        />\n                    </motion.div>\n                </motion.div>\n\n                <motion.div\n                    initial={{ opacity: 0, scale: 1, rotate: -2 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    whileHover={{ rotate: 0, scale: 1.02 }}\n                    transition={{\n                        duration: 0.5,\n                        delay: 0.2,\n                        type: \"spring\",\n                        stiffness: 300,\n                        damping: 25,\n                    }}\n                    className=\"w-full flex flex-col items-center justify-center -mt-4 md:mt-0\"\n                >\n                    <AI_Prompt />\n                </motion.div>\n\n                <motion.div\n                    initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                    animate={{ opacity: 1, y: 0, scale: 1 }}\n                    transition={{ duration: 0.5, delay: 0.4 }}\n                    className=\"w-full grid grid-cols-1 md:grid-cols-2 gap-6 relative -mt-4 md:mt-0\"\n                >\n                    {/* Left side - Buttons */}\n                    <motion.div\n                        className=\"w-full\"\n                        initial={{ rotate: -4, x: -10 }}\n                        whileHover={{ rotate: 0, x: 0, scale: 1.02 }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 300,\n                            damping: 25,\n                        }}\n                    >\n                        <div className=\"w-full flex flex-col items-center justify-center gap-3\">\n                            <AILoadingState />\n                        </div>\n                    </motion.div>\n\n                    {/* Right side - Input */}\n                    <motion.div\n                        className=\"w-full\"\n                        initial={{ rotate: 4, x: 10 }}\n                        whileHover={{ rotate: 0, x: 0, scale: 1.02 }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 300,\n                            damping: 25,\n                        }}\n                    >\n                        <AppleActivityCard title=\"\" />\n                    </motion.div>\n                </motion.div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/landing/hero.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/anthropic-dark.tsx",
      "content": "import type { SVGProps } from \"react\";\nconst AnthropicDark = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        fill=\"#ffff\"\n        fillRule=\"evenodd\"\n        style={{\n            flex: \"none\",\n            lineHeight: 1,\n        }}\n        viewBox=\"0 0 24 24\"\n        width=\"1em\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"1em\"\n        {...props}\n    >\n        <title>{\"Anthropic\"}</title>\n        <path d=\"M13.827 3.52h3.603L24 20h-3.603l-6.57-16.48zm-7.258 0h3.767L16.906 20h-3.674l-1.343-3.461H5.017l-1.344 3.46H0L6.57 3.522zm4.132 9.959L8.453 7.687 6.205 13.48H10.7z\" />\n    </svg>\n);\nexport default AnthropicDark;\n",
      "path": "components/icons/anthropic-dark.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/anthropic.tsx",
      "content": "const Anthropic = (props: React.SVGProps<SVGSVGElement>) => (\n    <svg\n        fill=\"#000\"\n        fillRule=\"evenodd\"\n        style={{\n            flex: \"none\",\n            lineHeight: 1,\n        }}\n        viewBox=\"0 0 24 24\"\n        width=\"1em\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"1em\"\n        {...props}\n    >\n        <title>{\"Anthropic\"}</title>\n        <path d=\"M13.827 3.52h3.603L24 20h-3.603l-6.57-16.48zm-7.258 0h3.767L16.906 20h-3.674l-1.343-3.461H5.017l-1.344 3.46H0L6.57 3.522zm4.132 9.959L8.453 7.687 6.205 13.48H10.7z\" />\n    </svg>\n);\nexport default Anthropic;\n",
      "path": "components/icons/anthropic.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/compass.tsx",
      "content": "import type { SVGProps } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport function CompassOutline(props: SVGProps<SVGSVGElement>) {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            className={cn(props.className)}\n            {...props}\n        >\n            <title>Compass</title>\n            {/* Icon from Solar by 480 Design - https://creativecommons.org/licenses/by/4.0/ */}\n            <path\n                fill=\"currentColor\"\n                fillRule=\"evenodd\"\n                d=\"M11.943 1.25h.114c2.309 0 4.118 0 5.53.19c1.444.194 2.584.6 3.479 1.494c.895.895 1.3 2.035 1.494 3.48c.19 1.411.19 3.22.19 5.529v.114c0 2.309 0 4.118-.19 5.53c-.194 1.444-.6 2.584-1.494 3.479c-.895.895-2.035 1.3-3.48 1.494c-1.411.19-3.22.19-5.529.19h-.114c-2.309 0-4.118 0-5.53-.19c-1.444-.194-2.584-.6-3.479-1.494c-.895-.895-1.3-2.035-1.494-3.48c-.19-1.411-.19-3.22-.19-5.529v-.114c0-2.309 0-4.118.19-5.53c.194-1.444.6-2.584 1.494-3.479c.895-.895 2.035-1.3 3.48-1.494c1.411-.19 3.22-.19 5.529-.19m-5.33 1.676c-1.278.172-2.049.5-2.618 1.069c-.57.57-.897 1.34-1.069 2.619c-.174 1.3-.176 3.008-.176 5.386s.002 4.086.176 5.386c.172 1.279.5 2.05 1.069 2.62c.57.569 1.34.896 2.619 1.068c1.3.174 3.008.176 5.386.176s4.086-.002 5.386-.176c1.279-.172 2.05-.5 2.62-1.069c.569-.57.896-1.34 1.068-2.619c.174-1.3.176-3.008.176-5.386s-.002-4.086-.176-5.386c-.172-1.279-.5-2.05-1.069-2.62c-.57-.569-1.34-.896-2.619-1.068c-1.3-.174-3.008-.176-5.386-.176s-4.086.002-5.386.176m7.236 6.255c-.605.16-1.42.485-2.594.955c-.542.217-.643.268-.717.333a1 1 0 0 0-.07.07c-.064.073-.115.174-.332.716c-.47 1.174-.794 1.99-.955 2.594c-.167.63-.085.791-.058.83a.8.8 0 0 0 .198.198c.039.027.2.109.83-.058c.605-.16 1.42-.485 2.595-.955c.541-.217.642-.268.716-.333a1 1 0 0 0 .07-.07c.064-.073.115-.174.332-.716c.47-1.174.794-1.99.955-2.594c.167-.63.085-.791.058-.83a.8.8 0 0 0-.198-.198c-.039-.027-.2-.109-.83.058m-.384-1.45c.69-.182 1.436-.271 2.057.15c.234.16.437.363.596.597c.422.621.333 1.367.15 2.057c-.186.705-.546 1.605-.991 2.717l-.02.05l-.034.085c-.163.409-.307.771-.564 1.064a2 2 0 0 1-.208.208c-.293.257-.655.401-1.065.564l-.083.034l-.05.02c-1.113.445-2.013.805-2.718.992c-.69.182-1.436.271-2.057-.15a2.3 2.3 0 0 1-.596-.597c-.422-.621-.333-1.367-.15-2.057c.186-.705.546-1.605.991-2.717l.02-.05l.034-.085c.163-.409.307-.771.564-1.064q.097-.11.208-.208c.293-.257.655-.401 1.065-.564l.083-.034l.05-.02c1.113-.445 2.013-.805 2.718-.992\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n}\n",
      "path": "components/icons/compass.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/nextjs.tsx",
      "content": "import * as React from \"react\";\nimport type { SVGProps } from \"react\";\nconst Nextjs = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 180 180\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n    >\n        <mask\n            id=\"mask0_408_139\"\n            style={{\n                maskType: \"alpha\",\n            }}\n            maskUnits=\"userSpaceOnUse\"\n            x={0}\n            y={0}\n            width={180}\n            height={180}\n        >\n            <circle cx={90} cy={90} r={90} fill=\"black\" />\n        </mask>\n        <g mask=\"url(#mask0_408_139)\">\n            <circle\n                cx={90}\n                cy={90}\n                r={87}\n                fill=\"black\"\n                stroke=\"white\"\n                strokeWidth={6}\n            />\n            <path\n                d=\"M149.508 157.52L69.142 54H54V125.97H66.1136V69.3836L139.999 164.845C143.333 162.614 146.509 160.165 149.508 157.52Z\"\n                fill=\"url(#paint0_linear_408_139)\"\n            />\n            <rect\n                x={115}\n                y={54}\n                width={12}\n                height={72}\n                fill=\"url(#paint1_linear_408_139)\"\n            />\n        </g>\n        <defs>\n            <linearGradient\n                id=\"paint0_linear_408_139\"\n                x1={109}\n                y1={116.5}\n                x2={144.5}\n                y2={160.5}\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop stopColor=\"white\" />\n                <stop offset={1} stopColor=\"white\" stopOpacity={0} />\n            </linearGradient>\n            <linearGradient\n                id=\"paint1_linear_408_139\"\n                x1={121}\n                y1={54}\n                x2={120.799}\n                y2={106.875}\n                gradientUnits=\"userSpaceOnUse\"\n            >\n                <stop stopColor=\"white\" />\n                <stop offset={1} stopColor=\"white\" stopOpacity={0} />\n            </linearGradient>\n        </defs>\n    </svg>\n);\nexport default Nextjs;\n",
      "path": "components/icons/nextjs.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/react.tsx",
      "content": "import * as React from \"react\";\nimport type { SVGProps } from \"react\";\n\nconst ReactIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        viewBox=\"0 0 256 228\"\n        width=\"1em\"\n        height=\"1em\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        preserveAspectRatio=\"xMidYMid\"\n        {...props}\n    >\n        <path\n            d=\"M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621 6.238-30.281 2.16-54.676-11.769-62.708-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848 155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233 50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165 167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266 13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923 168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586 13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488 29.348-9.723 48.443-25.443 48.443-41.52 0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345-3.24-10.257-7.612-21.163-12.963-32.432 5.106-11 9.31-21.767 12.459-31.957 2.619.758 5.16 1.557 7.61 2.4 23.69 8.156 38.14 20.213 38.14 29.504 0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787-1.524 8.219-4.59 13.698-8.382 15.893-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246 12.376-1.098 24.068-2.894 34.671-5.345.522 2.107.986 4.173 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994 7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863-6.35-5.437-9.555-10.836-9.555-15.216 0-9.322 13.897-21.212 37.076-29.293 2.813-.98 5.757-1.905 8.812-2.773 3.204 10.42 7.406 21.315 12.477 32.332-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789 8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152 7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793 2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433 4.902.192 9.899.29 14.978.29 5.218 0 10.376-.117 15.453-.343-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026 347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815 329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627 310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695 358.489 358.489 0 0 1 11.036 20.54 329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026-.344 1.668-.73 3.367-1.15 5.09-10.622-2.452-22.155-4.275-34.23-5.408-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86-22.86-10.235-22.86-22.86 10.235-22.86 22.86-22.86Z\"\n            fill=\"#00D8FF\"\n        />\n    </svg>\n);\nexport default ReactIcon;\n",
      "path": "components/icons/react.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/icons/shadcn.tsx",
      "content": "const ShadcnIcon = (props: React.SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 256 256\"\n        width=\"1em\"\n        height=\"1em\"\n        {...props}\n    >\n        <title>Shadcn UI</title>\n        <path fill=\"none\" d=\"M0 0h256v256H0z\" />\n        <path\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={25}\n            strokeLinecap=\"round\"\n            d=\"M208 128l-80 80M192 40L40 192\"\n        />\n    </svg>\n);\nexport default ShadcnIcon;\n",
      "path": "components/icons/shadcn.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/action-search-bar.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @kokonutui\n * @description: A modern search bar component with action buttons and suggestions\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport {\n    Search,\n    Send,\n    BarChart2,\n    Video,\n    PlaneTakeoff,\n    AudioLines,\n    LayoutGrid,\n} from \"lucide-react\";\nimport useDebounce from \"@/hooks/use-debounce\";\n\ninterface Action {\n    id: string;\n    label: string;\n    icon: React.ReactNode;\n    description?: string;\n    short?: string;\n    end?: string;\n}\n\ninterface SearchResult {\n    actions: Action[];\n}\n\nconst ANIMATION_VARIANTS = {\n    container: {\n        hidden: { opacity: 0, height: 0 },\n        show: {\n            opacity: 1,\n            height: \"auto\",\n            transition: {\n                height: { duration: 0.4 },\n                staggerChildren: 0.1,\n            },\n        },\n        exit: {\n            opacity: 0,\n            height: 0,\n            transition: {\n                height: { duration: 0.3 },\n                opacity: { duration: 0.2 },\n            },\n        },\n    },\n    item: {\n        hidden: { opacity: 0, y: 20 },\n        show: {\n            opacity: 1,\n            y: 0,\n            transition: { duration: 0.3 },\n        },\n        exit: {\n            opacity: 0,\n            y: -10,\n            transition: { duration: 0.2 },\n        },\n    },\n} as const;\n\nconst allActionsSample = [\n    {\n        id: \"1\",\n        label: \"Book tickets\",\n        icon: <PlaneTakeoff className=\"h-4 w-4 text-blue-500\" />,\n        description: \"Operator\",\n        short: \"⌘K\",\n        end: \"Agent\",\n    },\n    {\n        id: \"2\",\n        label: \"Summarize\",\n        icon: <BarChart2 className=\"h-4 w-4 text-orange-500\" />,\n        description: \"gpt-5\",\n        short: \"⌘cmd+p\",\n        end: \"Command\",\n    },\n    {\n        id: \"3\",\n        label: \"Screen Studio\",\n        icon: <Video className=\"h-4 w-4 text-purple-500\" />,\n        description: \"Claude 4.1\",\n        short: \"\",\n        end: \"Application\",\n    },\n    {\n        id: \"4\",\n        label: \"Talk to Jarvis\",\n        icon: <AudioLines className=\"h-4 w-4 text-green-500\" />,\n        description: \"gpt-5 voice\",\n        short: \"\",\n        end: \"Active\",\n    },\n    {\n        id: \"5\",\n        label: \"Kokonut UI - Pro\",\n        icon: <LayoutGrid className=\"h-4 w-4 text-blue-500\" />,\n        description: \"Components\",\n        short: \"\",\n        end: \"Link\",\n    },\n];\n\nfunction ActionSearchBar({\n    actions = allActionsSample,\n    defaultOpen = false,\n}: {\n    actions?: Action[];\n    defaultOpen?: boolean;\n}) {\n    const [query, setQuery] = useState(\"\");\n    const [result, setResult] = useState<SearchResult | null>(null);\n    const [isFocused, setIsFocused] = useState(defaultOpen);\n    const [isTyping, setIsTyping] = useState(false);\n    const [selectedAction, setSelectedAction] = useState<Action | null>(null);\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const debouncedQuery = useDebounce(query, 200);\n\n    const filteredActions = useMemo(() => {\n        if (!debouncedQuery) return actions;\n\n        const normalizedQuery = debouncedQuery.toLowerCase().trim();\n        return actions.filter((action) => {\n            const searchableText =\n                `${action.label} ${action.description || \"\"}`.toLowerCase();\n            return searchableText.includes(normalizedQuery);\n        });\n    }, [debouncedQuery, actions]);\n\n    useEffect(() => {\n        if (!isFocused) {\n            setResult(null);\n            setActiveIndex(-1);\n            return;\n        }\n\n        setResult({ actions: filteredActions });\n        setActiveIndex(-1);\n    }, [filteredActions, isFocused]);\n\n    const handleInputChange = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => {\n            setQuery(e.target.value);\n            setIsTyping(true);\n            setActiveIndex(-1);\n        },\n        []\n    );\n\n    const handleKeyDown = useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            if (!result?.actions.length) return;\n\n            switch (e.key) {\n                case \"ArrowDown\":\n                    e.preventDefault();\n                    setActiveIndex((prev) =>\n                        prev < result.actions.length - 1 ? prev + 1 : 0\n                    );\n                    break;\n                case \"ArrowUp\":\n                    e.preventDefault();\n                    setActiveIndex((prev) =>\n                        prev > 0 ? prev - 1 : result.actions.length - 1\n                    );\n                    break;\n                case \"Enter\":\n                    e.preventDefault();\n                    if (activeIndex >= 0 && result.actions[activeIndex]) {\n                        setSelectedAction(result.actions[activeIndex]);\n                    }\n                    break;\n                case \"Escape\":\n                    setIsFocused(false);\n                    setActiveIndex(-1);\n                    break;\n            }\n        },\n        [result?.actions, activeIndex]\n    );\n\n    const handleActionClick = useCallback((action: Action) => {\n        setSelectedAction(action);\n    }, []);\n\n    const handleFocus = useCallback(() => {\n        setSelectedAction(null);\n        setIsFocused(true);\n        setActiveIndex(-1);\n    }, []);\n\n    const handleBlur = useCallback(() => {\n        setTimeout(() => {\n            setIsFocused(false);\n            setActiveIndex(-1);\n        }, 200);\n    }, []);\n\n    return (\n        <div className=\"w-full max-w-xl mx-auto\">\n            <div className=\"relative flex flex-col justify-start items-center min-h-[300px]\">\n                <div className=\"w-full max-w-sm sticky top-0 bg-background z-10 pt-4 pb-1\">\n                    <label\n                        className=\"text-xs font-medium text-gray-500 dark:text-gray-400 mb-1 block\"\n                        htmlFor=\"search\"\n                    >\n                        Search Commands\n                    </label>\n                    <div className=\"relative\">\n                        <Input\n                            type=\"text\"\n                            placeholder=\"What's up?\"\n                            value={query}\n                            onChange={handleInputChange}\n                            onFocus={handleFocus}\n                            onBlur={handleBlur}\n                            onKeyDown={handleKeyDown}\n                            role=\"combobox\"\n                            aria-expanded={isFocused && !!result}\n                            aria-autocomplete=\"list\"\n                            aria-activedescendant={\n                                activeIndex >= 0\n                                    ? `action-${result?.actions[activeIndex]?.id}`\n                                    : undefined\n                            }\n                            id=\"search\"\n                            autoComplete=\"off\"\n                            className=\"pl-3 pr-9 py-1.5 h-9 text-sm rounded-lg focus-visible:ring-offset-0\"\n                        />\n                        <div className=\"absolute right-3 top-1/2 -translate-y-1/2 h-4 w-4\">\n                            <AnimatePresence mode=\"popLayout\">\n                                {query.length > 0 ? (\n                                    <motion.div\n                                        key=\"send\"\n                                        initial={{ y: -20, opacity: 0 }}\n                                        animate={{ y: 0, opacity: 1 }}\n                                        exit={{ y: 20, opacity: 0 }}\n                                        transition={{ duration: 0.2 }}\n                                    >\n                                        <Send className=\"w-4 h-4 text-gray-400 dark:text-gray-500\" />\n                                    </motion.div>\n                                ) : (\n                                    <motion.div\n                                        key=\"search\"\n                                        initial={{ y: -20, opacity: 0 }}\n                                        animate={{ y: 0, opacity: 1 }}\n                                        exit={{ y: 20, opacity: 0 }}\n                                        transition={{ duration: 0.2 }}\n                                    >\n                                        <Search className=\"w-4 h-4 text-gray-400 dark:text-gray-500\" />\n                                    </motion.div>\n                                )}\n                            </AnimatePresence>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"w-full max-w-sm\">\n                    <AnimatePresence>\n                        {isFocused && result && !selectedAction && (\n                            <motion.div\n                                className=\"w-full border rounded-md shadow-xs overflow-hidden dark:border-gray-800 bg-white dark:bg-black mt-1\"\n                                variants={ANIMATION_VARIANTS.container}\n                                role=\"listbox\"\n                                aria-label=\"Search results\"\n                                initial=\"hidden\"\n                                animate=\"show\"\n                                exit=\"exit\"\n                            >\n                                <motion.ul role=\"none\">\n                                    {result.actions.map((action) => (\n                                        <motion.li\n                                            key={action.id}\n                                            id={`action-${action.id}`}\n                                            className={`px-3 py-2 flex items-center justify-between hover:bg-gray-200 dark:hover:bg-zinc-900 cursor-pointer rounded-md ${\n                                                activeIndex ===\n                                                result.actions.indexOf(action)\n                                                    ? \"bg-gray-100 dark:bg-zinc-800\"\n                                                    : \"\"\n                                            }`}\n                                            variants={ANIMATION_VARIANTS.item}\n                                            layout\n                                            onClick={() =>\n                                                handleActionClick(action)\n                                            }\n                                            role=\"option\"\n                                            aria-selected={\n                                                activeIndex ===\n                                                result.actions.indexOf(action)\n                                            }\n                                        >\n                                            <div className=\"flex items-center gap-2 justify-between\">\n                                                <div className=\"flex items-center gap-2\">\n                                                    <span\n                                                        className=\"text-gray-500\"\n                                                        aria-hidden=\"true\"\n                                                    >\n                                                        {action.icon}\n                                                    </span>\n                                                    <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\n                                                        {action.label}\n                                                    </span>\n                                                    {action.description && (\n                                                        <span className=\"text-xs text-gray-400\">\n                                                            {action.description}\n                                                        </span>\n                                                    )}\n                                                </div>\n                                            </div>\n                                            <div className=\"flex items-center gap-2\">\n                                                {action.short && (\n                                                    <span\n                                                        className=\"text-xs text-gray-400\"\n                                                        aria-label={`Keyboard shortcut: ${action.short}`}\n                                                    >\n                                                        {action.short}\n                                                    </span>\n                                                )}\n                                                {action.end && (\n                                                    <span className=\"text-xs text-gray-400 text-right\">\n                                                        {action.end}\n                                                    </span>\n                                                )}\n                                            </div>\n                                        </motion.li>\n                                    ))}\n                                </motion.ul>\n                                <div className=\"mt-2 px-3 py-2 border-t border-gray-100 dark:border-gray-800\">\n                                    <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                                        <span>Press ⌘K to open commands</span>\n                                        <span>ESC to cancel</span>\n                                    </div>\n                                </div>\n                            </motion.div>\n                        )}\n                    </AnimatePresence>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ActionSearchBar;\n",
      "path": "components/kokonutui/action-search-bar.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/ai-loading.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @kokonutui\n * @description: AI Loading State\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { useEffect, useState, useRef } from \"react\";\n\nconst TASK_SEQUENCES = [\n    {\n        status: \"Searching the web\",\n        lines: [\n            \"Initializing web search...\",\n            \"Scanning web pages...\",\n            \"Visiting 5 websites...\",\n            \"Analyzing content...\",\n            \"Generating summary...\",\n        ],\n    },\n    {\n        status: \"Analyzing results\",\n        lines: [\n            \"Analyzing search results...\",\n            \"Generating summary...\",\n            \"Checking for relevant information...\",\n            \"Finalizing analysis...\",\n            \"Setting up lazy loading...\",\n            \"Configuring caching strategies...\",\n            \"Running performance tests...\",\n            \"Finalizing optimizations...\",\n        ],\n    },\n    {\n        status: \"Enhancing UI/UX\",\n        lines: [\n            \"Initializing UI enhancement scan...\",\n            \"Checking accessibility compliance...\",\n            \"Analyzing component animations...\",\n            \"Reviewing loading states...\",\n            \"Testing responsive layouts...\",\n            \"Optimizing user interactions...\",\n            \"Validating color contrast...\",\n            \"Checking motion preferences...\",\n            \"Finalizing UI improvements...\",\n        ],\n    },\n];\n\nconst LoadingAnimation = ({ progress }: { progress: number }) => (\n    <div className=\"relative w-6 h-6\">\n        <svg\n            viewBox=\"0 0 240 240\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"w-full h-full\"\n            aria-label={`Loading progress: ${Math.round(progress)}%`}\n        >\n            <title>Loading Progress Indicator</title>\n\n            <defs>\n                <mask id=\"progress-mask\">\n                    <rect width=\"240\" height=\"240\" fill=\"black\" />\n                    <circle\n                        r=\"120\"\n                        cx=\"120\"\n                        cy=\"120\"\n                        fill=\"white\"\n                        strokeDasharray={`${(progress / 100) * 754}, 754`}\n                        transform=\"rotate(-90 120 120)\"\n                    />\n                </mask>\n            </defs>\n\n            <style>\n                {`\n                    @keyframes rotate-cw {\n                        from { transform: rotate(0deg); }\n                        to { transform: rotate(360deg); }\n                    }\n                    @keyframes rotate-ccw {\n                        from { transform: rotate(360deg); }\n                        to { transform: rotate(0deg); }\n                    }\n                    .g-spin circle {\n                        transform-origin: 120px 120px;\n                    }\n                    .g-spin circle:nth-child(1) { animation: rotate-cw 8s linear infinite; }\n                    .g-spin circle:nth-child(2) { animation: rotate-ccw 8s linear infinite; }\n                    .g-spin circle:nth-child(3) { animation: rotate-cw 8s linear infinite; }\n                    .g-spin circle:nth-child(4) { animation: rotate-ccw 8s linear infinite; }\n                    .g-spin circle:nth-child(5) { animation: rotate-cw 8s linear infinite; }\n                    .g-spin circle:nth-child(6) { animation: rotate-ccw 8s linear infinite; }\n\n                    .g-spin circle:nth-child(2n) { animation-delay: 0.2s; }\n                    .g-spin circle:nth-child(3n) { animation-delay: 0.3s; }\n                `}\n            </style>\n\n            <g\n                className=\"g-spin\"\n                strokeWidth=\"16\"\n                strokeDasharray=\"18% 40%\"\n                mask=\"url(#progress-mask)\"\n            >\n                <circle\n                    r=\"150\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#FF2E7E\"\n                    opacity=\"0.95\"\n                />\n                <circle\n                    r=\"130\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#00E5FF\"\n                    opacity=\"0.95\"\n                />\n                <circle\n                    r=\"110\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#4ADE80\"\n                    opacity=\"0.95\"\n                />\n                <circle\n                    r=\"90\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#FFA726\"\n                    opacity=\"0.95\"\n                />\n                <circle\n                    r=\"70\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#FFEB3B\"\n                    opacity=\"0.95\"\n                />\n                <circle\n                    r=\"50\"\n                    cx=\"120\"\n                    cy=\"120\"\n                    stroke=\"#FF4081\"\n                    opacity=\"0.95\"\n                />\n            </g>\n        </svg>\n    </div>\n);\n\nexport default function AILoadingState() {\n    const [sequenceIndex, setSequenceIndex] = useState(0);\n    const [visibleLines, setVisibleLines] = useState<\n        Array<{ text: string; number: number }>\n    >([]);\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const codeContainerRef = useRef<HTMLDivElement>(null);\n    const lineHeight = 28;\n\n    const currentSequence = TASK_SEQUENCES[sequenceIndex];\n    const totalLines = currentSequence.lines.length;\n\n    useEffect(() => {\n        const initialLines = [];\n        for (let i = 0; i < Math.min(5, totalLines); i++) {\n            initialLines.push({\n                text: currentSequence.lines[i],\n                number: i + 1,\n            });\n        }\n        setVisibleLines(initialLines);\n        setScrollPosition(0);\n    }, [sequenceIndex, currentSequence.lines, totalLines]);\n\n    // Handle line advancement\n    useEffect(() => {\n        const advanceTimer = setInterval(() => {\n            // Get the current first visible line index\n            const firstVisibleLineIndex = Math.floor(\n                scrollPosition / lineHeight\n            );\n            const nextLineIndex = (firstVisibleLineIndex + 3) % totalLines;\n\n            // If we're about to wrap around, move to next sequence\n            if (nextLineIndex < firstVisibleLineIndex && nextLineIndex !== 0) {\n                setSequenceIndex(\n                    (prevIndex) => (prevIndex + 1) % TASK_SEQUENCES.length\n                );\n                return;\n            }\n\n            // Add the next line if needed\n            if (\n                nextLineIndex >= visibleLines.length &&\n                nextLineIndex < totalLines\n            ) {\n                setVisibleLines((prevLines) => [\n                    ...prevLines,\n                    {\n                        text: currentSequence.lines[nextLineIndex],\n                        number: nextLineIndex + 1,\n                    },\n                ]);\n            }\n\n            // Scroll to the next line\n            setScrollPosition((prevPosition) => prevPosition + lineHeight);\n        }, 2000); // Slightly slower than the example for better readability\n\n        return () => clearInterval(advanceTimer);\n    }, [\n        scrollPosition,\n        visibleLines,\n        totalLines,\n        sequenceIndex,\n        currentSequence.lines,\n        lineHeight,\n    ]);\n\n    // Apply scroll position\n    useEffect(() => {\n        if (codeContainerRef.current) {\n            codeContainerRef.current.scrollTop = scrollPosition;\n        }\n    }, [scrollPosition]);\n\n    return (\n        <div className=\"flex items-center justify-center min-h-full w-full\">\n            <div className=\"space-y-4 w-auto\">\n                <div className=\"ml-2 flex items-center space-x-2 text-gray-600 dark:text-gray-300 font-medium\">\n                    <LoadingAnimation\n                        progress={(sequenceIndex / TASK_SEQUENCES.length) * 100}\n                    />\n                    <span className=\"text-sm\">{currentSequence.status}...</span>\n                </div>\n\n                <div className=\"relative\">\n                    <div\n                        ref={codeContainerRef}\n                        className=\"font-mono text-xs overflow-hidden w-full h-[84px] relative rounded-lg\"\n                        style={{ scrollBehavior: \"smooth\" }}\n                    >\n                        <div>\n                            {visibleLines.map((line, index) => (\n                                <div\n                                    key={`${line.number}-${line.text}`}\n                                    className=\"flex h-[28px] items-center px-2\"\n                                >\n                                    <div className=\"text-gray-400 dark:text-gray-500 pr-3 select-none w-6 text-right\">\n                                        {line.number}\n                                    </div>\n\n                                    <div className=\"text-gray-800 dark:text-gray-200 flex-1 ml-1\">\n                                        {line.text}\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div\n                        className=\"absolute top-0 left-0 right-0 bottom-0 pointer-events-none rounded-lg from-white/90 via-white/50 to-transparent dark:from-black/90 dark:via-black/50 dark:to-transparent\"\n                        style={{\n                            background:\n                                \"linear-gradient(to bottom, var(--tw-gradient-from) 0%, var(--tw-gradient-via) 30%, var(--tw-gradient-to) 100%)\",\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/ai-loading.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/ai-prompt.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @kokonutui\n * @description: AI Prompt Input\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { ArrowRight, Bot, Check, ChevronDown, Paperclip } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { cn } from \"@/lib/utils\";\nimport { useAutoResizeTextarea } from \"@/hooks/use-auto-resize-textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { motion, AnimatePresence } from \"motion/react\";\nimport Anthropic from \"@/components/icons/anthropic\";\nimport AnthropicDark from \"@/components/icons/anthropic-dark\";\n\nconst OPENAI_SVG = (\n    <div>\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"256\"\n            height=\"260\"\n            preserveAspectRatio=\"xMidYMid\"\n            viewBox=\"0 0 256 260\"\n            aria-label=\"o3-mini icon\"\n            className=\"dark:hidden block\"\n        >\n            <title>OpenAI Icon Light</title>\n            <path d=\"M239.184 106.203a64.716 64.716 0 0 0-5.576-53.103C219.452 28.459 191 15.784 163.213 21.74A65.586 65.586 0 0 0 52.096 45.22a64.716 64.716 0 0 0-43.23 31.36c-14.31 24.602-11.061 55.634 8.033 76.74a64.665 64.665 0 0 0 5.525 53.102c14.174 24.65 42.644 37.324 70.446 31.36a64.72 64.72 0 0 0 48.754 21.744c28.481.025 53.714-18.361 62.414-45.481a64.767 64.767 0 0 0 43.229-31.36c14.137-24.558 10.875-55.423-8.083-76.483Zm-97.56 136.338a48.397 48.397 0 0 1-31.105-11.255l1.535-.87 51.67-29.825a8.595 8.595 0 0 0 4.247-7.367v-72.85l21.845 12.636c.218.111.37.32.409.563v60.367c-.056 26.818-21.783 48.545-48.601 48.601Zm-104.466-44.61a48.345 48.345 0 0 1-5.781-32.589l1.534.921 51.722 29.826a8.339 8.339 0 0 0 8.441 0l63.181-36.425v25.221a.87.87 0 0 1-.358.665l-52.335 30.184c-23.257 13.398-52.97 5.431-66.404-17.803ZM23.549 85.38a48.499 48.499 0 0 1 25.58-21.333v61.39a8.288 8.288 0 0 0 4.195 7.316l62.874 36.272-21.845 12.636a.819.819 0 0 1-.767 0L41.353 151.53c-23.211-13.454-31.171-43.144-17.804-66.405v.256Zm179.466 41.695-63.08-36.63L161.73 77.86a.819.819 0 0 1 .768 0l52.233 30.184a48.6 48.6 0 0 1-7.316 87.635v-61.391a8.544 8.544 0 0 0-4.4-7.213Zm21.742-32.69-1.535-.922-51.619-30.081a8.39 8.39 0 0 0-8.492 0L99.98 99.808V74.587a.716.716 0 0 1 .307-.665l52.233-30.133a48.652 48.652 0 0 1 72.236 50.391v.205ZM88.061 139.097l-21.845-12.585a.87.87 0 0 1-.41-.614V65.685a48.652 48.652 0 0 1 79.757-37.346l-1.535.87-51.67 29.825a8.595 8.595 0 0 0-4.246 7.367l-.051 72.697Zm11.868-25.58 28.138-16.217 28.188 16.218v32.434l-28.086 16.218-28.188-16.218-.052-32.434Z\" />\n        </svg>\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"256\"\n            height=\"260\"\n            preserveAspectRatio=\"xMidYMid\"\n            viewBox=\"0 0 256 260\"\n            aria-label=\"o3-mini icon\"\n            className=\"hidden dark:block\"\n        >\n            <title>OpenAI Icon Dark</title>\n            <path\n                fill=\"#fff\"\n                d=\"M239.184 106.203a64.716 64.716 0 0 0-5.576-53.103C219.452 28.459 191 15.784 163.213 21.74A65.586 65.586 0 0 0 52.096 45.22a64.716 64.716 0 0 0-43.23 31.36c-14.31 24.602-11.061 55.634 8.033 76.74a64.665 64.665 0 0 0 5.525 53.102c14.174 24.65 42.644 37.324 70.446 31.36a64.72 64.72 0 0 0 48.754 21.744c28.481.025 53.714-18.361 62.414-45.481a64.767 64.767 0 0 0 43.229-31.36c14.137-24.558 10.875-55.423-8.083-76.483Zm-97.56 136.338a48.397 48.397 0 0 1-31.105-11.255l1.535-.87 51.67-29.825a8.595 8.595 0 0 0 4.247-7.367v-72.85l21.845 12.636c.218.111.37.32.409.563v60.367c-.056 26.818-21.783 48.545-48.601 48.601Zm-104.466-44.61a48.345 48.345 0 0 1-5.781-32.589l1.534.921 51.722 29.826a8.339 8.339 0 0 0 8.441 0l63.181-36.425v25.221a.87.87 0 0 1-.358.665l-52.335 30.184c-23.257 13.398-52.97 5.431-66.404-17.803ZM23.549 85.38a48.499 48.499 0 0 1 25.58-21.333v61.39a8.288 8.288 0 0 0 4.195 7.316l62.874 36.272-21.845 12.636a.819.819 0 0 1-.767 0L41.353 151.53c-23.211-13.454-31.171-43.144-17.804-66.405v.256Zm179.466 41.695-63.08-36.63L161.73 77.86a.819.819 0 0 1 .768 0l52.233 30.184a48.6 48.6 0 0 1-7.316 87.635v-61.391a8.544 8.544 0 0 0-4.4-7.213Zm21.742-32.69-1.535-.922-51.619-30.081a8.39 8.39 0 0 0-8.492 0L99.98 99.808V74.587a.716.716 0 0 1 .307-.665l52.233-30.133a48.652 48.652 0 0 1 72.236 50.391v.205ZM88.061 139.097l-21.845-12.585a.87.87 0 0 1-.41-.614V65.685a48.652 48.652 0 0 1 79.757-37.346l-1.535.87-51.67 29.825a8.595 8.595 0 0 0-4.246 7.367l-.051 72.697Zm11.868-25.58 28.138-16.217 28.188 16.218v32.434l-28.086 16.218-28.188-16.218-.052-32.434Z\"\n            />\n        </svg>\n    </div>\n);\n\nexport default function AI_Prompt() {\n    const [value, setValue] = useState(\"\");\n    const { textareaRef, adjustHeight } = useAutoResizeTextarea({\n        minHeight: 72,\n        maxHeight: 300,\n    });\n    const [selectedModel, setSelectedModel] = useState(\"GPT-4-1 Mini\");\n\n    const AI_MODELS = [\n        \"o3-mini\",\n        \"Gemini 2.5 Flash\",\n        \"Claude 3.5 Sonnet\",\n        \"GPT-4-1 Mini\",\n        \"GPT-4-1\",\n    ];\n\n    const MODEL_ICONS: Record<string, React.ReactNode> = {\n        \"o3-mini\": OPENAI_SVG,\n        \"Gemini 2.5 Flash\": (\n            <svg\n                height=\"1em\"\n                style={{ flex: \"none\", lineHeight: \"1\" }}\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <title>Gemini</title>\n                <defs>\n                    <linearGradient\n                        id=\"lobe-icons-gemini-fill\"\n                        x1=\"0%\"\n                        x2=\"68.73%\"\n                        y1=\"100%\"\n                        y2=\"30.395%\"\n                    >\n                        <stop offset=\"0%\" stopColor=\"#1C7DFF\" />\n                        <stop offset=\"52.021%\" stopColor=\"#1C69FF\" />\n                        <stop offset=\"100%\" stopColor=\"#F0DCD6\" />\n                    </linearGradient>\n                </defs>\n                <path\n                    d=\"M12 24A14.304 14.304 0 000 12 14.304 14.304 0 0012 0a14.305 14.305 0 0012 12 14.305 14.305 0 00-12 12\"\n                    fill=\"url(#lobe-icons-gemini-fill)\"\n                    fillRule=\"nonzero\"\n                />\n            </svg>\n        ),\n        \"Claude 3.5 Sonnet\": (\n            <div>\n                <svg\n                    fill=\"#000\"\n                    fillRule=\"evenodd\"\n                    style={{ flex: \"none\", lineHeight: \"1\" }}\n                    viewBox=\"0 0 24 24\"\n                    width=\"1em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"dark:hidden block\"\n                >\n                    <title>Anthropic Icon Light</title>\n                    <path d=\"M13.827 3.52h3.603L24 20h-3.603l-6.57-16.48zm-7.258 0h3.767L16.906 20h-3.674l-1.343-3.461H5.017l-1.344 3.46H0L6.57 3.522zm4.132 9.959L8.453 7.687 6.205 13.48H10.7z\" />\n                </svg>\n                <svg\n                    fill=\"#ffff\"\n                    fillRule=\"evenodd\"\n                    style={{ flex: \"none\", lineHeight: \"1\" }}\n                    viewBox=\"0 0 24 24\"\n                    width=\"1em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"hidden dark:block\"\n                >\n                    <title>Anthropic Icon Dark</title>\n                    <path d=\"M13.827 3.52h3.603L24 20h-3.603l-6.57-16.48zm-7.258 0h3.767L16.906 20h-3.674l-1.343-3.461H5.017l-1.344 3.46H0L6.57 3.522zm4.132 9.959L8.453 7.687 6.205 13.48H10.7z\" />\n                </svg>\n            </div>\n        ),\n        \"GPT-4-1 Mini\": OPENAI_SVG,\n        \"GPT-4-1\": OPENAI_SVG,\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            setValue(\"\");\n            adjustHeight(true);\n        }\n    };\n\n    return (\n        <div className=\"w-4/6 py-4\">\n            <div className=\"bg-black/5 dark:bg-white/5 rounded-2xl p-1.5 pt-4\">\n                <div className=\"flex items-center gap-2 mb-2.5 mx-2\">\n                    <div className=\"flex-1 flex items-center gap-2\">\n                        <Anthropic className=\"h-3.5 w-3.5 text-black dark:hidden\" />\n                        <AnthropicDark className=\"h-3.5 w-3.5 hidden dark:block\" />\n                        <h3 className=\"text-black dark:text-white/90 text-xs tracking-tighter\">\n                            is free this weekend!\n                        </h3>\n                    </div>\n                    <p className=\"text-black dark:text-white/90 text-xs tracking-tighter\">\n                        Ship Now!\n                    </p>\n                </div>\n                <div className=\"relative\">\n                    {/* <div className=\"absolute -top-12 left-0 w-full h-full border border-black/10 dark:border-white/10 rounded-2xl p-3  border-b-0\">\n                        <div className=\"flex items-center gap-2\">\n                            <Gift className=\"h-3.5 w-3.5\" />\n                            <div className=\"flex-1\">\n                                <h3 className=\"font-semibold text-black dark:text-white/90 text-sm\">\n                                    Build for free this weekend\n                                </h3>\n                            </div>\n                        </div>\n                    </div> */}\n                    <div className=\"relative flex flex-col\">\n                        <div\n                            className=\"overflow-y-auto\"\n                            style={{ maxHeight: \"400px\" }}\n                        >\n                            <Textarea\n                                id=\"ai-input-15\"\n                                value={value}\n                                placeholder={\"What can I do for you?\"}\n                                className={cn(\n                                    \"w-full rounded-xl rounded-b-none px-4 py-3 bg-black/5 dark:bg-white/5 border-none dark:text-white placeholder:text-black/70 dark:placeholder:text-white/70 resize-none focus-visible:ring-0 focus-visible:ring-offset-0\",\n                                    \"min-h-[72px]\"\n                                )}\n                                ref={textareaRef}\n                                onKeyDown={handleKeyDown}\n                                onChange={(e) => {\n                                    setValue(e.target.value);\n                                    adjustHeight();\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"h-14 bg-black/5 dark:bg-white/5 rounded-b-xl flex items-center\">\n                            <div className=\"absolute left-3 right-3 bottom-3 flex items-center justify-between w-[calc(100%-24px)]\">\n                                <div className=\"flex items-center gap-2\">\n                                    <DropdownMenu>\n                                        <DropdownMenuTrigger asChild>\n                                            <Button\n                                                variant=\"ghost\"\n                                                className=\"flex items-center gap-1 h-8 pl-1 pr-2 text-xs rounded-md dark:text-white hover:bg-black/10 dark:hover:bg-white/10 focus-visible:ring-1 focus-visible:ring-offset-0 focus-visible:ring-blue-500\"\n                                            >\n                                                <AnimatePresence mode=\"wait\">\n                                                    <motion.div\n                                                        key={selectedModel}\n                                                        initial={{\n                                                            opacity: 0,\n                                                            y: -5,\n                                                        }}\n                                                        animate={{\n                                                            opacity: 1,\n                                                            y: 0,\n                                                        }}\n                                                        exit={{\n                                                            opacity: 0,\n                                                            y: 5,\n                                                        }}\n                                                        transition={{\n                                                            duration: 0.15,\n                                                        }}\n                                                        className=\"flex items-center gap-1\"\n                                                    >\n                                                        {\n                                                            MODEL_ICONS[\n                                                                selectedModel\n                                                            ]\n                                                        }\n                                                        {selectedModel}\n                                                        <ChevronDown className=\"w-3 h-3 opacity-50\" />\n                                                    </motion.div>\n                                                </AnimatePresence>\n                                            </Button>\n                                        </DropdownMenuTrigger>\n                                        <DropdownMenuContent\n                                            className={cn(\n                                                \"min-w-[10rem]\",\n                                                \"border-black/10 dark:border-white/10\",\n                                                \"bg-gradient-to-b from-white via-white to-neutral-100 dark:from-neutral-950 dark:via-neutral-900 dark:to-neutral-800\"\n                                            )}\n                                        >\n                                            {AI_MODELS.map((model) => (\n                                                <DropdownMenuItem\n                                                    key={model}\n                                                    onSelect={() =>\n                                                        setSelectedModel(model)\n                                                    }\n                                                    className=\"flex items-center justify-between gap-2\"\n                                                >\n                                                    <div className=\"flex items-center gap-2\">\n                                                        {MODEL_ICONS[model] || (\n                                                            <Bot className=\"w-4 h-4 opacity-50\" />\n                                                        )}{\" \"}\n                                                        {/* Use mapped SVG or fallback */}\n                                                        <span>{model}</span>\n                                                    </div>\n                                                    {selectedModel ===\n                                                        model && (\n                                                        <Check className=\"w-4 h-4 text-blue-500\" />\n                                                    )}\n                                                </DropdownMenuItem>\n                                            ))}\n                                        </DropdownMenuContent>\n                                    </DropdownMenu>\n                                    <div className=\"h-4 w-px bg-black/10 dark:bg-white/10 mx-0.5\" />\n                                    <label\n                                        className={cn(\n                                            \"rounded-lg p-2 bg-black/5 dark:bg-white/5 cursor-pointer\",\n                                            \"hover:bg-black/10 dark:hover:bg-white/10 focus-visible:ring-1 focus-visible:ring-offset-0 focus-visible:ring-blue-500\",\n                                            \"text-black/40 dark:text-white/40 hover:text-black dark:hover:text-white\"\n                                        )}\n                                        aria-label=\"Attach file\"\n                                    >\n                                        <input type=\"file\" className=\"hidden\" />\n                                        <Paperclip className=\"w-4 h-4 transition-colors\" />\n                                    </label>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    className={cn(\n                                        \"rounded-lg p-2 bg-black/5 dark:bg-white/5\",\n                                        \"hover:bg-black/10 dark:hover:bg-white/10 focus-visible:ring-1 focus-visible:ring-offset-0 focus-visible:ring-blue-500\"\n                                    )}\n                                    aria-label=\"Send message\"\n                                    disabled={!value.trim()}\n                                >\n                                    <ArrowRight\n                                        className={cn(\n                                            \"w-4 h-4 dark:text-white transition-opacity duration-200\",\n                                            value.trim()\n                                                ? \"opacity-100\"\n                                                : \"opacity-30\"\n                                        )}\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/ai-prompt.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/apple-activity-card.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @kokonutui\n * @description: Apple Activity Card\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { motion } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ActivityData {\n    label: string;\n    value: number;\n    color: string;\n    size: number;\n    current: number;\n    target: number;\n    unit: string;\n}\n\ninterface CircleProgressProps {\n    data: ActivityData;\n    index: number;\n}\n\nconst activities: ActivityData[] = [\n    {\n        label: \"MOVE\",\n        value: 85,\n        color: \"#FF2D55\",\n        size: 200,\n        current: 479,\n        target: 800,\n        unit: \"CAL\",\n    },\n    {\n        label: \"EXERCISE\",\n        value: 60,\n        color: \"#A3F900\",\n        size: 160,\n        current: 24,\n        target: 30,\n        unit: \"MIN\",\n    },\n    {\n        label: \"STAND\",\n        value: 30,\n        color: \"#04C7DD\",\n        size: 120,\n        current: 6,\n        target: 12,\n        unit: \"HR\",\n    },\n];\n\nconst CircleProgress = ({ data, index }: CircleProgressProps) => {\n    const strokeWidth = 16;\n    const radius = (data.size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const progress = ((100 - data.value) / 100) * circumference;\n\n    const gradientId = `gradient-${data.label.toLowerCase()}`;\n    const gradientUrl = `url(#${gradientId})`;\n\n    return (\n        <motion.div\n            className=\"absolute inset-0 flex items-center justify-center\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.8, delay: index * 0.2, ease: \"easeOut\" }}\n        >\n            <div className=\"relative\">\n                <svg\n                    width={data.size}\n                    height={data.size}\n                    viewBox={`0 0 ${data.size} ${data.size}`}\n                    className=\"transform -rotate-90\"\n                    aria-label={`${data.label} Activity Progress - ${data.value}%`}\n                >\n                    <title>{`${data.label} Activity Progress - ${data.value}%`}</title>\n\n                    <defs>\n                        <linearGradient\n                            id={gradientId}\n                            x1=\"0%\"\n                            y1=\"0%\"\n                            x2=\"100%\"\n                            y2=\"100%\"\n                        >\n                            <stop\n                                offset=\"0%\"\n                                style={{\n                                    stopColor: data.color,\n                                    stopOpacity: 1,\n                                }}\n                            />\n                            <stop\n                                offset=\"100%\"\n                                style={{\n                                    stopColor:\n                                        data.color === \"#FF2D55\"\n                                            ? \"#FF6B8B\"\n                                            : data.color === \"#A3F900\"\n                                            ? \"#C5FF4D\"\n                                            : \"#4DDFED\",\n                                    stopOpacity: 1,\n                                }}\n                            />\n                        </linearGradient>\n                    </defs>\n\n                    <circle\n                        cx={data.size / 2}\n                        cy={data.size / 2}\n                        r={radius}\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={strokeWidth}\n                        className=\"text-zinc-200/50 dark:text-zinc-800/50\"\n                    />\n\n                    <motion.circle\n                        cx={data.size / 2}\n                        cy={data.size / 2}\n                        r={radius}\n                        fill=\"none\"\n                        stroke={gradientUrl}\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={circumference}\n                        initial={{ strokeDashoffset: circumference }}\n                        animate={{ strokeDashoffset: progress }}\n                        transition={{\n                            duration: 1.8,\n                            delay: index * 0.2,\n                            ease: \"easeInOut\",\n                        }}\n                        strokeLinecap=\"round\"\n                        style={{\n                            filter: \"drop-shadow(0 0 6px rgba(0,0,0,0.15))\",\n                        }}\n                    />\n                </svg>\n            </div>\n        </motion.div>\n    );\n};\n\nconst DetailedActivityInfo = () => {\n    return (\n        <motion.div\n            className=\"flex flex-col gap-6 ml-8\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5, delay: 0.3 }}\n        >\n            {activities.map((activity) => (\n                <motion.div key={activity.label} className=\"flex flex-col\">\n                    <span className=\"text-sm font-medium text-zinc-600 dark:text-zinc-400\">\n                        {activity.label}\n                    </span>\n                    <span\n                        className=\"text-2xl font-semibold\"\n                        style={{ color: activity.color }}\n                    >\n                        {activity.current}/{activity.target}\n                        <span className=\"text-base ml-1 text-zinc-600 dark:text-zinc-400\">\n                            {activity.unit}\n                        </span>\n                    </span>\n                </motion.div>\n            ))}\n        </motion.div>\n    );\n};\n\nexport default function AppleActivityCard({\n    title = \"Activity Rings\",\n    className,\n}: {\n    title?: string;\n    className?: string;\n}) {\n    return (\n        <div\n            className={cn(\n                \"relative w-full max-w-3xl mx-auto p-8 rounded-3xl\",\n                \"text-zinc-900 dark:text-white\",\n                className\n            )}\n        >\n            <div className=\"flex flex-col items-center gap-8\">\n                <motion.h2\n                    className=\"text-2xl font-medium text-zinc-900 dark:text-white\"\n                    initial={{ opacity: 0, y: -20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5 }}\n                >\n                    {title}\n                </motion.h2>\n\n                <div className=\"flex items-center\">\n                    <div className=\"relative w-[180px] h-[180px]\">\n                        {activities.map((activity, index) => (\n                            <CircleProgress\n                                key={activity.label}\n                                data={activity}\n                                index={index}\n                            />\n                        ))}\n                    </div>\n                    <DetailedActivityInfo />\n                </div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/apple-activity-card.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/kokonutui/card-flip.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @dorian_baffier\n * @description: Card Flip\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { cn } from \"@/lib/utils\";\nimport { ArrowRight, Repeat2 } from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport interface CardFlipProps {\n    title?: string;\n    subtitle?: string;\n    description?: string;\n    features?: string[];\n}\n\nexport default function CardFlip({\n    title = \"Design Systems\",\n    subtitle = \"Explore the fundamentals\",\n    description = \"Dive deep into the world of modern UI/UX design.\",\n    features = [\"UI/UX\", \"Modern Design\", \"Tailwind CSS\", \"Kokonut UI\"],\n}: CardFlipProps) {\n    const [isFlipped, setIsFlipped] = useState(false);\n\n    return (\n        <div\n            className=\"relative w-full max-w-[280px] h-[320px] group [perspective:2000px]\"\n            onMouseEnter={() => setIsFlipped(true)}\n            onMouseLeave={() => setIsFlipped(false)}\n        >\n            <div\n                className={cn(\n                    \"relative w-full h-full\",\n                    \"[transform-style:preserve-3d]\",\n                    \"transition-all duration-700\",\n                    isFlipped\n                        ? \"[transform:rotateY(180deg)]\"\n                        : \"[transform:rotateY(0deg)]\"\n                )}\n            >\n                <div\n                    className={cn(\n                        \"absolute inset-0 w-full h-full\",\n                        \"[backface-visibility:hidden] [transform:rotateY(0deg)]\",\n                        \"overflow-hidden rounded-2xl\",\n                        \"bg-zinc-50 dark:bg-zinc-900\",\n                        \"border border-zinc-200 dark:border-zinc-800/50\",\n                        \"shadow-xs dark:shadow-lg\",\n                        \"transition-all duration-700\",\n                        \"group-hover:shadow-lg dark:group-hover:shadow-xl\",\n                        isFlipped ? \"opacity-0\" : \"opacity-100\"\n                    )}\n                >\n                    <div className=\"relative h-full overflow-hidden bg-gradient-to-b from-zinc-100 to-white dark:from-zinc-900 dark:to-black\">\n                        <div className=\"absolute inset-0 flex items-start justify-center pt-24\">\n                            <div className=\"relative w-[200px] h-[100px] flex items-center justify-center\">\n                                {[...Array(10)].map((_, i) => (\n                                    <div\n                                        key={i}\n                                        className={cn(\n                                            \"absolute w-[50px] h-[50px]\",\n                                            \"rounded-[140px]\",\n                                            \"animate-[scale_3s_linear_infinite]\",\n                                            \"opacity-0\",\n                                            \"shadow-[0_0_50px_rgba(255,165,0,0.5)]\",\n                                            \"group-hover:animate-[scale_2s_linear_infinite]\"\n                                        )}\n                                        style={{\n                                            animationDelay: `${i * 0.3}s`,\n                                        }}\n                                    />\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"absolute bottom-0 left-0 right-0 p-5\">\n                        <div className=\"flex items-center justify-between gap-3\">\n                            <div className=\"space-y-1.5\">\n                                <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-white leading-snug tracking-tighter transition-all duration-500 ease-out-expo group-hover:translate-y-[-4px]\">\n                                    {title}\n                                </h3>\n                                <p className=\"text-sm text-zinc-600 dark:text-zinc-200 line-clamp-2 tracking-tight transition-all duration-500 ease-out-expo group-hover:translate-y-[-4px] delay-[50ms]\">\n                                    {subtitle}\n                                </p>\n                            </div>\n                            <div className=\"relative group/icon\">\n                                <div\n                                    className={cn(\n                                        \"absolute inset-[-8px] rounded-lg transition-opacity duration-300\",\n                                        \"bg-gradient-to-br from-orange-500/20 via-orange-500/10 to-transparent\"\n                                    )}\n                                />\n                                <Repeat2 className=\"relative z-10 w-4 h-4 text-orange-500 transition-transform duration-300 group-hover/icon:scale-110 group-hover/icon:-rotate-12\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Back of card */}\n                <div\n                    className={cn(\n                        \"absolute inset-0 w-full h-full\",\n                        \"[backface-visibility:hidden] [transform:rotateY(180deg)]\",\n                        \"p-6 rounded-2xl\",\n                        \"bg-gradient-to-b from-zinc-100 to-white dark:from-zinc-900 dark:to-black\",\n                        \"border border-zinc-200 dark:border-zinc-800\",\n                        \"shadow-xs dark:shadow-lg\",\n                        \"flex flex-col\",\n                        \"transition-all duration-700\",\n                        \"group-hover:shadow-lg dark:group-hover:shadow-xl\",\n                        !isFlipped ? \"opacity-0\" : \"opacity-100\"\n                    )}\n                >\n                    <div className=\"flex-1 space-y-6\">\n                        <div className=\"space-y-2\">\n                            <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-white leading-snug tracking-tight transition-all duration-500 ease-out-expo group-hover:translate-y-[-2px]\">\n                                {title}\n                            </h3>\n                            <p className=\"text-sm text-zinc-600 dark:text-zinc-400 tracking-tight transition-all duration-500 ease-out-expo group-hover:translate-y-[-2px] line-clamp-2\">\n                                {description}\n                            </p>\n                        </div>\n\n                        <div className=\"space-y-2\">\n                            {features.map((feature, index) => (\n                                <div\n                                    key={feature}\n                                    className=\"flex items-center gap-2 text-sm text-zinc-700 dark:text-zinc-300 transition-all duration-500\"\n                                    style={{\n                                        transform: isFlipped\n                                            ? \"translateX(0)\"\n                                            : \"translateX(-10px)\",\n                                        opacity: isFlipped ? 1 : 0,\n                                        transitionDelay: `${\n                                            index * 100 + 200\n                                        }ms`,\n                                    }}\n                                >\n                                    <ArrowRight className=\"w-3 h-3 text-orange-500\" />\n                                    <span>{feature}</span>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"pt-6 mt-6 border-t border-zinc-200 dark:border-zinc-800\">\n                        <div\n                            className={cn(\n                                \"group/start relative\",\n                                \"flex items-center justify-between\",\n                                \"p-3 -m-3 rounded-xl\",\n                                \"transition-all duration-300\",\n                                \"bg-gradient-to-r from-zinc-100 via-zinc-100 to-zinc-100\",\n                                \"dark:from-zinc-800 dark:via-zinc-800 dark:to-zinc-800\",\n                                \"hover:from-orange-500/10 hover:from-0% hover:via-orange-500/5 hover:via-100% hover:to-transparent hover:to-100%\",\n                                \"dark:hover:from-orange-500/20 dark:hover:from-0% dark:hover:via-orange-500/10 dark:hover:via-100% dark:hover:to-transparent dark:hover:to-100%\",\n                                \"hover:scale-[1.02] hover:cursor-pointer\"\n                            )}\n                        >\n                            <span className=\"text-sm font-medium text-zinc-900 dark:text-white transition-colors duration-300 group-hover/start:text-orange-600 dark:group-hover/start:text-orange-400\">\n                                Start today\n                            </span>\n                            <div className=\"relative group/icon\">\n                                <div\n                                    className={cn(\n                                        \"absolute inset-[-6px] rounded-lg transition-all duration-300\",\n                                        \"bg-gradient-to-br from-orange-500/20 via-orange-500/10 to-transparent\",\n                                        \"opacity-0 group-hover/start:opacity-100 scale-90 group-hover/start:scale-100\"\n                                    )}\n                                />\n                                <ArrowRight className=\"relative z-10 w-4 h-4 text-orange-500 transition-all duration-300 group-hover/start:translate-x-0.5 group-hover/start:scale-110\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <style jsx>{`\n                @keyframes scale {\n                    0% {\n                        transform: scale(2);\n                        opacity: 0;\n                        box-shadow: 0px 0px 50px rgba(255, 165, 0, 0.5);\n                    }\n                    50% {\n                        transform: translate(0px, -5px) scale(1);\n                        opacity: 1;\n                        box-shadow: 0px 8px 20px rgba(255, 165, 0, 0.5);\n                    }\n                    100% {\n                        transform: translate(0px, 5px) scale(0.1);\n                        opacity: 0;\n                        box-shadow: 0px 10px 20px rgba(255, 165, 0, 0);\n                    }\n                }\n            `}</style>\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/card-flip.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/landing/feature-block.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport Image from \"next/image\";\nimport Nextjs from \"@/components/icons/nextjs\";\nimport ReactIcon from \"@/components/icons/react\";\nimport ShadcnIcon from \"@/components/icons/shadcn\";\n\nexport default function Features() {\n    return (\n        <div className=\"w-full max-w-none flex flex-col justify-start items-center z-10 mx-auto\">\n            <div className=\"grid grid-cols-3 md:flex md:flex-wrap items-center justify-start gap-6 md:gap-8 w-[95%] mx-auto py-4\">\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{\n                        duration: 0.3,\n                        delay: 0.1,\n                        ease: [0.23, 1, 0.32, 1],\n                    }}\n                    className={cn(\n                        \"text-blue-600 dark:text-blue-400 relative flex flex-col items-center gap-2\"\n                    )}\n                >\n                    <svg\n                        viewBox=\"0 0 54 33\"\n                        className=\"w-8 h-8\"\n                        aria-labelledby=\"tailwindcss-icon-title\"\n                        role=\"img\"\n                    >\n                        <title id=\"tailwindcss-icon-title\">TailwindCSS</title>\n                        <g clipPath=\"url(#prefix__clip0)\">\n                            <path\n                                fill=\"#38bdf8\"\n                                fillRule=\"evenodd\"\n                                d=\"M27 0c-7.2 0-11.7 3.6-13.5 10.8 2.7-3.6 5.85-4.95 9.45-4.05 2.054.513 3.522 2.004 5.147 3.653C30.744 13.09 33.808 16.2 40.5 16.2c7.2 0 11.7-3.6 13.5-10.8-2.7 3.6-5.85 4.95-9.45 4.05-2.054-.513-3.522-2.004-5.147-3.653C36.756 3.11 33.692 0 27 0zM13.5 16.2C6.3 16.2 1.8 19.8 0 27c2.7-3.6 5.85-4.95 9.45-4.05 2.054.514 3.522 2.004 5.147 3.653C17.244 29.29 20.308 32.4 27 32.4c7.2 0 11.7-3.6 13.5-10.8-2.7 3.6-5.85 4.95-9.45 4.05-2.054-.513-3.522-2.004-5.147-3.653C23.256 19.31 20.192 16.2 13.5 16.2z\"\n                                clipRule=\"evenodd\"\n                            />\n                        </g>\n                    </svg>\n                    <span className=\"text-xs text-center mt-1 whitespace-nowrap text-black dark:text-white\">\n                        Tailwind CSS\n                    </span>\n                </motion.div>\n\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{\n                        duration: 0.3,\n                        delay: 0.4,\n                        ease: [0.23, 1, 0.32, 1],\n                    }}\n                    className={cn(\n                        \"text-yellow-500 dark:text-[#F5EA1E] relative flex flex-col items-center gap-2\"\n                    )}\n                >\n                    <Image\n                        src=\"/motion.png\"\n                        alt=\"Motion\"\n                        className=\"rounded-full\"\n                        width={32}\n                        height={32}\n                    />\n                    <span className=\"text-xs text-center mt-1 whitespace-nowrap text-black dark:text-white\">\n                        Motion\n                    </span>\n                </motion.div>\n\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{\n                        duration: 0.3,\n                        delay: 0.5,\n                        ease: [0.23, 1, 0.32, 1],\n                    }}\n                    className={cn(\n                        \"text-black dark:text-white flex flex-col items-center gap-2 relative\"\n                    )}\n                >\n                    <ShadcnIcon\n                        className=\"w-8 h-8 text-black dark:text-white\"\n                        aria-label=\"Shadcn/ui\"\n                    />\n                    <span className=\"text-xs text-center mt-1 whitespace-nowrap\">\n                        shadcn/ui\n                    </span>\n                </motion.div>\n\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{\n                        duration: 0.3,\n                        delay: 0.6,\n                        ease: [0.23, 1, 0.32, 1],\n                    }}\n                    className={cn(\n                        \"text-black dark:text-white flex flex-col items-center gap-2 relative col-span-1 col-start-1 md:col-auto\"\n                    )}\n                >\n                    <Nextjs className=\"w-8 h-8\" aria-label=\"Next.js\" />\n                    <span className=\"text-xs text-center mt-1 whitespace-nowrap\">\n                        Next.js\n                    </span>\n                </motion.div>\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    whileInView={{ opacity: 1, y: 0 }}\n                    viewport={{ once: true }}\n                    transition={{\n                        duration: 0.3,\n                        delay: 0.7,\n                        ease: [0.23, 1, 0.32, 1],\n                    }}\n                    className={cn(\n                        \"text-black dark:text-white flex flex-col items-center gap-2 relative col-span-1 col-start-3 md:col-auto\"\n                    )}\n                >\n                    <ReactIcon className=\"w-8 h-8\" aria-label=\"React\" />\n                    <span className=\"text-xs text-center mt-1 whitespace-nowrap\">\n                        React\n                    </span>\n                </motion.div>\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/landing/feature-block.tsx"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-auto-resize-textarea.ts",
      "content": "import { useEffect, useRef, useCallback } from \"react\";\n\ninterface UseAutoResizeTextareaProps {\n    minHeight: number;\n    maxHeight?: number;\n}\n\nexport function useAutoResizeTextarea({\n    minHeight,\n    maxHeight,\n}: UseAutoResizeTextareaProps) {\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n    const adjustHeight = useCallback(\n        (reset?: boolean) => {\n            const textarea = textareaRef.current;\n            if (!textarea) return;\n\n            if (reset) {\n                textarea.style.height = `${minHeight}px`;\n                return;\n            }\n\n            // Temporarily shrink to get the right scrollHeight\n            textarea.style.height = `${minHeight}px`;\n\n            // Calculate new height\n            const newHeight = Math.max(\n                minHeight,\n                Math.min(\n                    textarea.scrollHeight,\n                    maxHeight ?? Number.POSITIVE_INFINITY\n                )\n            );\n\n            textarea.style.height = `${newHeight}px`;\n        },\n        [minHeight, maxHeight]\n    );\n\n    useEffect(() => {\n        // Set initial height\n        const textarea = textareaRef.current;\n        if (textarea) {\n            textarea.style.height = `${minHeight}px`;\n        }\n    }, [minHeight]);\n\n    // Adjust height on window resize\n    useEffect(() => {\n        const handleResize = () => adjustHeight();\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [adjustHeight]);\n\n    return { textareaRef, adjustHeight };\n}\n",
      "path": "hooks/use-auto-resize-textarea.ts"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-debounce.ts",
      "content": "import { useEffect, useState } from \"react\";\n\nfunction useDebounce<T>(value: T, delay: number = 500): T {\n    const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;\n",
      "path": "hooks/use-debounce.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/browse-blocks.tsx",
      "content": "\"use client\";\n\nimport { Link } from \"next-view-transitions\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport { ArrowDownRight, ArrowRight, BlocksIcon } from \"lucide-react\";\n\n/**\n *\n *\n */\nexport function BrowseBlocksButton() {\n    return (\n        <Link\n            id=\"browse-blocks-button\"\n            href=\"https://kokonutui.pro/templates\"\n            className=\"flex items-center gap-8\"\n        >\n            <motion.div\n                initial={{ x: 200, opacity: 0 }}\n                animate={{ x: 0, opacity: 1, transition: { duration: 0.2 } }}\n                whileHover={{ x: 5, transition: { duration: 0.2 } }}\n                className=\"relative\"\n            >\n                <Button\n                    className={cn(\n                        \"relative inline-flex items-center justify-center gap-4 rounded-xl font-medium\",\n                        \"relative h-10 px-6 min-w-72 md:min-w-56\",\n                        \"bg-white dark:bg-black\",\n                        \"text-black dark:text-white\",\n                        \"border border-black/0 dark:border-white/20\",\n                        \"hover:bg-black/5 dark:hover:bg-white/10\",\n                        \"backdrop-blur-xs\",\n                        \"shadow-md hover:shadow-lg transition-all duration-200\"\n                    )}\n                >\n                    <span className=\"font-medium flex items-center gap-2\">\n                        Go to Templates\n                    </span>\n                    <ArrowRight className=\"w-5 h-5\" />\n                </Button>\n            </motion.div>\n        </Link>\n    );\n}\n",
      "path": "components/ui/browse-blocks.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/browse-button.tsx",
      "content": "\"use client\";\n\nimport { Link } from \"next-view-transitions\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport { CompassOutline } from \"@/components/icons/compass\";\n\nexport function BrowseComponentsButton() {\n    return (\n        <Link\n            href=\"/docs/components/liquid-glass-card\"\n            className=\"flex items-center gap-8 relative\"\n        >\n            {/* Background gradient elements */}\n            <div className=\"absolute -inset-4 bg-gradient-to-r from-purple-500/20 via-cyan-500/20 to-emerald-500/20 blur-3xl opacity-20 dark:opacity-30\" />\n            <div className=\"absolute -inset-4 bg-gradient-to-br from-blue-500/20 via-purple-500/20 to-pink-500/20 blur-2xl opacity-20 dark:opacity-30 animate-pulse\" />\n\n            <motion.div\n                initial={{ x: 200, opacity: 0 }}\n                animate={{ x: 0, opacity: 1, transition: { duration: 0.2 } }}\n                whileHover={{ x: 5, transition: { duration: 0.2 } }}\n                className=\"relative\"\n            >\n                <Button\n                    className={cn(\n                        \"relative inline-flex items-center justify-center gap-4 rounded-xl font-medium isolate group overflow-hidden\",\n                        \"relative h-10 px-6 min-w-72 md:min-w-56\",\n                        // Enhanced glass base\n                        \"bg-gradient-to-br from-black/70 via-black/80 to-black/70\",\n                        \"dark:from-white/70 dark:via-white/80 dark:to-white/70\",\n                        \"backdrop-blur-xl\",\n                        // Glass shine effect\n                        \"before:absolute before:inset-0 before:rounded-xl before:-z-10\",\n                        \"before:bg-gradient-to-r before:from-transparent before:via-white/10 before:to-transparent\",\n                        \"dark:before:from-transparent dark:before:via-black/10 dark:before:to-transparent\",\n                        // Enhanced borders\n                        \"border border-white/20 dark:border-black/20\",\n                        \"ring-[0.5px] ring-white/10 ring-inset dark:ring-black/10\",\n                        // Text colors\n                        \"text-white dark:text-black\",\n                        // Shadows and glow\n                        \"shadow-[0_8px_32px_rgba(0,0,0,0.25)] dark:shadow-[0_8px_32px_rgba(255,255,255,0.15)]\",\n                        \"[&>*]:relative [&>*]:z-10\",\n                        // Additional glass layers\n                        \"after:absolute after:inset-0 after:rounded-xl after:-z-20\",\n                        \"after:bg-[radial-gradient(circle_at_50%_120%,rgba(120,119,198,0.3),rgba(255,255,255,0))]\",\n                        \"after:dark:bg-[radial-gradient(circle_at_50%_120%,rgba(255,255,255,0.3),rgba(0,0,0,0))]\",\n                        // Enhanced hover effects\n                        \"hover:bg-gradient-to-br hover:from-black/80 hover:via-black/90 hover:to-black/80\",\n                        \"dark:hover:from-white/80 dark:hover:via-white/90 dark:hover:to-white/80\",\n                        \"hover:before:opacity-100\",\n                        \"hover:border-white/30 dark:hover:border-black/30\",\n                        \"hover:ring-white/20 dark:hover:ring-black/20\",\n                        // Remove problematic shadows\n                        // Shine animation on hover\n                        \"group-hover:before:animate-shine\",\n                        // Active state\n                        \"active:scale-[0.98]\",\n                        // Smooth transitions\n                        \"transition-all duration-300 ease-out\",\n                        \"before:transition-all before:duration-500 before:ease-out\",\n                        \"after:transition-all after:duration-300 after:ease-out\"\n                    )}\n                >\n                    <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_0%_0%,rgba(255,255,255,0.15),rgba(255,255,255,0)_70%),radial-gradient(circle_at_100%_0%,rgba(255,255,255,0.15),rgba(255,255,255,0)_70%),radial-gradient(circle_at_100%_50%,rgba(255,255,255,0.12),rgba(255,255,255,0)_70%),radial-gradient(circle_at_0%_50%,rgba(255,255,255,0.12),rgba(255,255,255,0)_70%),radial-gradient(circle_at_50%_100%,rgba(255,255,255,0.15),rgba(255,255,255,0)_70%),radial-gradient(circle_at_0%_100%,rgba(255,255,255,0.15),rgba(255,255,255,0)_70%)] dark:bg-[radial-gradient(circle_at_0%_0%,rgba(0,0,0,0.15),rgba(0,0,0,0)_70%),radial-gradient(circle_at_100%_0%,rgba(0,0,0,0.15),rgba(0,0,0,0)_70%),radial-gradient(circle_at_100%_50%,rgba(0,0,0,0.12),rgba(0,0,0,0)_70%),radial-gradient(circle_at_0%_50%,rgba(0,0,0,0.12),rgba(0,0,0,0)_70%),radial-gradient(circle_at_50%_100%,rgba(0,0,0,0.15),rgba(0,0,0,0)_70%),radial-gradient(circle_at_0%_100%,rgba(0,0,0,0.15),rgba(0,0,0,0)_70%)]\" />\n                    <span className=\"font-medium relative z-10\">\n                        Browse Components\n                    </span>\n                    <CompassOutline className=\"w-8 h-8 transition-transform group-hover:rotate-12 relative z-10\" />\n                </Button>\n            </motion.div>\n        </Link>\n    );\n}\n",
      "path": "components/ui/browse-button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/dropdown-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-zinc-100 data-[state=open]:bg-zinc-100 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus:bg-zinc-800 dark:data-[state=open]:bg-zinc-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-zinc-200 bg-white p-1 text-zinc-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-zinc-200 bg-white p-1 text-zinc-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-zinc-100 focus:text-zinc-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-zinc-800 dark:focus:text-zinc-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-zinc-100 dark:bg-zinc-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n",
      "path": "components/ui/dropdown-menu.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/input.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-zinc-200 bg-white px-3 py-2 text-base ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:bg-zinc-950 dark:ring-offset-zinc-950 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
      "path": "components/ui/input.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/textarea.tsx",
      "content": "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface TextareaProps\n    extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n    ({ className, ...props }, ref) => {\n        return (\n            <textarea\n                className={cn(\n                    \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n",
      "path": "components/ui/textarea.tsx"
    }
  ]
}
