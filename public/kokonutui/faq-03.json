{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faq-03",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-accordion",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/faq/faq-03.tsx",
      "content": "import {\n    Accordion,\n    AccordionContent,\n    AccordionItem,\n    AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface FAQItemProps {\n    question: string;\n    answer: string;\n    category?: string;\n}\n\nfunction FAQItem({ question, answer, category }: FAQItemProps) {\n    return (\n        <AccordionItem\n            value={question}\n            className=\"mb-4 bg-white dark:bg-black/5 rounded-xl border border-gray-100 dark:border-gray-800/60 shadow-xs dark:shadow-black/10\"\n        >\n            <AccordionTrigger className=\"px-6 py-4 text-left hover:no-underline data-[state=open]:border-b data-[state=open]:border-gray-100 dark:data-[state=open]:border-gray-800/60\">\n                <div className=\"flex flex-col gap-2\">\n                    {category && (\n                        <Badge\n                            variant=\"secondary\"\n                            className=\"w-fit text-xs font-normal dark:bg-black/10 dark:text-gray-300\"\n                        >\n                            {category}\n                        </Badge>\n                    )}\n                    <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-200 group-hover:text-primary\">\n                        {question}\n                    </h3>\n                </div>\n            </AccordionTrigger>\n            <AccordionContent className=\"px-6 pt-4 pb-6\">\n                <p className=\"text-gray-600 dark:text-gray-400 leading-relaxed\">\n                    {answer}\n                </p>\n            </AccordionContent>\n        </AccordionItem>\n    );\n}\n\nfunction Faq03() {\n    const faqs: FAQItemProps[] = [\n        {\n            question: \"How do I get started?\",\n            answer: \"Getting started is easy! Simply sign up for an account and follow our quick setup guide. We'll walk you through each step of the process.\",\n            category: \"Getting Started\",\n        },\n        {\n            question: \"What payment methods do you accept?\",\n            answer: \"We accept all major credit cards, PayPal, and bank transfers. All payments are processed securely through our payment partners.\",\n            category: \"Billing\",\n        },\n        {\n            question: \"Is there a free trial available?\",\n            answer: \"Yes! We offer a 14-day free trial with full access to all features. No credit card required to start your trial.\",\n            category: \"Pricing\",\n        },\n        {\n            question: \"How can I contact support?\",\n            answer: \"Our support team is available 24/7 through our help center, email support, or live chat. We typically respond within 2 hours.\",\n            category: \"Support\",\n        },\n    ];\n\n    return (\n        <section className=\"py-16 w-full\">\n            <div className=\"container mx-auto px-4\">\n                <div className=\"max-w-3xl mx-auto\">\n                    <div className=\"text-center space-y-4 mb-12\">\n                        <h2 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                            Frequently Asked Questions\n                        </h2>\n                        <p className=\"text-gray-600 dark:text-gray-400\">\n                            Find answers to common questions about our services\n                        </p>\n                    </div>\n\n                    <Accordion type=\"single\" collapsible className=\"space-y-4\">\n                        {faqs.map((faq, index) => (\n                            <FAQItem key={index} {...faq} />\n                        ))}\n                    </Accordion>\n\n                    <div className=\"mt-12 text-center\">\n                        <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n                            Still have questions?\n                        </p>\n                        <button\n                            type=\"button\"\n                            className=\"inline-flex items-center justify-center px-6 py-3 rounded-lg\"\n                        >\n                            Contact Support\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Faq03;\n",
      "path": "components/kokonutui/faq/faq-03.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/accordion.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
      "path": "components/ui/accordion.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-zinc-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-hidden focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 dark:border-zinc-800 dark:focus:ring-zinc-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-zinc-900 text-zinc-50 hover:bg-zinc-900/80 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/80\",\n        secondary:\n          \"border-transparent bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-zinc-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/80\",\n        outline: \"text-zinc-950 dark:text-zinc-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
      "path": "components/ui/badge.tsx"
    }
  ]
}
