{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cards-team-members",
  "type": "registry:component",
  "dependencies": [
    "@kobalte/core",
    "clsx",
    "solid-js",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/cards/team-members.tsx",
      "content": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  Combobox,\n  ComboboxContent,\n  ComboboxControl,\n  ComboboxInput,\n  ComboboxItem,\n  ComboboxItemLabel,\n  ComboboxTrigger\n} from \"@/components/ui/combobox\"\n\ninterface Role {\n  label: string\n  description: string\n}\n\nconst OPTIONS: Role[] = [\n  { label: \"Viewer\", description: \"Can view and comment.\" },\n  { label: \"Developer\", description: \"Can view, comment and edit.\" },\n  { label: \"Billing\", description: \"Can view, comment and manage billing.\" },\n  { label: \"Owner\", description: \"Admin-level access to all resources.\" }\n]\n\nexport function TeamMembers() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Team Members</CardTitle>\n        <CardDescription>Invite your team members to collaborate.</CardDescription>\n      </CardHeader>\n      <CardContent class=\"grid gap-6\">\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/01.png\" />\n              <AvatarFallback>OM</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Sofia Davis</p>\n              <p class=\"text-sm text-muted-foreground\">m@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[3]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/02.png\" />\n              <AvatarFallback>JL</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Jackson Lee</p>\n              <p class=\"text-sm text-muted-foreground\">p@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[0]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n        <div class=\"flex items-center justify-between space-x-4\">\n          <div class=\"flex items-center space-x-4\">\n            <Avatar>\n              <AvatarImage src=\"/avatars/03.png\" />\n              <AvatarFallback>IN</AvatarFallback>\n            </Avatar>\n            <div>\n              <p class=\"text-sm font-medium leading-none\">Isabella Nguyen</p>\n              <p class=\"text-sm text-muted-foreground\">i@example.com</p>\n            </div>\n          </div>\n          <Combobox<Role>\n            options={OPTIONS}\n            defaultValue={OPTIONS[0]}\n            optionValue=\"label\"\n            optionTextValue=\"label\"\n            optionLabel=\"label\"\n            placeholder=\"Select new role...\"\n            itemComponent={(props) => (\n              <ComboboxItem item={props.item} class=\"flex flex-col items-start space-y-1 px-4 py-2\">\n                <ComboboxItemLabel>\n                  <p>{props.item.rawValue.label}</p>\n                  <p class=\"text-sm text-muted-foreground\">{props.item.rawValue.description}</p>\n                </ComboboxItemLabel>\n              </ComboboxItem>\n            )}\n          >\n            <ComboboxControl aria-label=\"Food\">\n              <ComboboxInput />\n              <ComboboxTrigger />\n            </ComboboxControl>\n            <ComboboxContent />\n          </Combobox>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "path": "src/components/cards/team-members.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import type { ClassValue } from \"clsx\"\nimport { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function clamp(val: number, min: number, max: number) {\n  return val > max ? max : val < min ? min : val\n}\n\nexport function toggleValue<T>(array: T[], value: T): T[] {\n  return array.includes(value) ? array.filter((item) => item !== value) : [...array, value]\n}\n",
      "path": "src/lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/avatar.tsx",
      "content": "import type { ValidComponent } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport * as ImagePrimitive from \"@kobalte/core/image\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype AvatarRootProps<T extends ValidComponent = \"span\"> = ImagePrimitive.ImageRootProps<T> & {\n  class?: string | undefined\n}\n\nconst Avatar = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, AvatarRootProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarRootProps, [\"class\"])\n  return (\n    <ImagePrimitive.Root\n      class={cn(\"relative flex size-10 shrink-0 overflow-hidden rounded-full\", local.class)}\n      {...others}\n    />\n  )\n}\n\ntype AvatarImageProps<T extends ValidComponent = \"img\"> = ImagePrimitive.ImageImgProps<T> & {\n  class?: string | undefined\n}\n\nconst AvatarImage = <T extends ValidComponent = \"img\">(\n  props: PolymorphicProps<T, AvatarImageProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarImageProps, [\"class\"])\n  return <ImagePrimitive.Img class={cn(\"aspect-square size-full\", local.class)} {...others} />\n}\n\ntype AvatarFallbackProps<T extends ValidComponent = \"span\"> =\n  ImagePrimitive.ImageFallbackProps<T> & { class?: string | undefined }\n\nconst AvatarFallback = <T extends ValidComponent = \"span\">(\n  props: PolymorphicProps<T, AvatarFallbackProps<T>>\n) => {\n  const [local, others] = splitProps(props as AvatarFallbackProps, [\"class\"])\n  return (\n    <ImagePrimitive.Fallback\n      class={cn(\"flex size-full items-center justify-center bg-muted\", local.class)}\n      {...others}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
      "path": "src/registry/ui/avatar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import type { Component, ComponentProps } from \"solid-js\"\nimport { splitProps } from \"solid-js\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <div\n      class={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", local.class)}\n      {...others}\n    />\n  )\n}\n\nconst CardHeader: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex flex-col space-y-1.5 p-6\", local.class)} {...others} />\n}\n\nconst CardTitle: Component<ComponentProps<\"h3\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return (\n    <h3 class={cn(\"text-lg font-semibold leading-none tracking-tight\", local.class)} {...others} />\n  )\n}\n\nconst CardDescription: Component<ComponentProps<\"p\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <p class={cn(\"text-sm text-muted-foreground\", local.class)} {...others} />\n}\n\nconst CardContent: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"p-6 pt-0\", local.class)} {...others} />\n}\n\nconst CardFooter: Component<ComponentProps<\"div\">> = (props) => {\n  const [local, others] = splitProps(props, [\"class\"])\n  return <div class={cn(\"flex items-center p-6 pt-0\", local.class)} {...others} />\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "src/registry/ui/card.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/combobox.tsx",
      "content": "import type { JSX, ValidComponent } from \"solid-js\"\nimport { Show, splitProps } from \"solid-js\"\n\nimport * as ComboboxPrimitive from \"@kobalte/core/combobox\"\nimport type { PolymorphicProps } from \"@kobalte/core/polymorphic\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Combobox = ComboboxPrimitive.Root\nconst ComboboxItemLabel = ComboboxPrimitive.ItemLabel\nconst ComboboxHiddenSelect = ComboboxPrimitive.HiddenSelect\n\ntype ComboboxItemProps<T extends ValidComponent = \"li\"> = ComboboxPrimitive.ComboboxItemProps<T> & {\n  class?: string | undefined\n}\n\nconst ComboboxItem = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, ComboboxItemProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxItemProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Item\n      class={cn(\n        \"relative flex cursor-default select-none items-center justify-between rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxItemIndicatorProps<T extends ValidComponent = \"div\"> =\n  ComboboxPrimitive.ComboboxItemIndicatorProps<T> & {\n    children?: JSX.Element\n  }\n\nconst ComboboxItemIndicator = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, ComboboxItemIndicatorProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxItemIndicatorProps, [\"children\"])\n  return (\n    <ComboboxPrimitive.ItemIndicator {...others}>\n      <Show\n        when={local.children}\n        fallback={\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"size-4\"\n          >\n            <path d=\"M5 12l5 5l10 -10\" />\n          </svg>\n        }\n      >\n        {(children) => children()}\n      </Show>\n    </ComboboxPrimitive.ItemIndicator>\n  )\n}\n\ntype ComboboxSectionProps<T extends ValidComponent = \"li\"> =\n  ComboboxPrimitive.ComboboxSectionProps<T> & { class?: string | undefined }\n\nconst ComboboxSection = <T extends ValidComponent = \"li\">(\n  props: PolymorphicProps<T, ComboboxSectionProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxSectionProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Section\n      class={cn(\n        \"overflow-hidden p-1 px-2 py-1.5 text-xs font-medium text-muted-foreground \",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxControlProps<\n  U,\n  T extends ValidComponent = \"div\"\n> = ComboboxPrimitive.ComboboxControlProps<U, T> & {\n  class?: string | undefined\n}\n\nconst ComboboxControl = <T, U extends ValidComponent = \"div\">(\n  props: PolymorphicProps<U, ComboboxControlProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxControlProps<T>, [\"class\"])\n  return (\n    <ComboboxPrimitive.Control\n      class={cn(\"flex h-10 items-center rounded-md border px-3\", local.class)}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxInputProps<T extends ValidComponent = \"input\"> =\n  ComboboxPrimitive.ComboboxInputProps<T> & { class?: string | undefined }\n\nconst ComboboxInput = <T extends ValidComponent = \"input\">(\n  props: PolymorphicProps<T, ComboboxInputProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxInputProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Input\n      class={cn(\n        \"flex size-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        local.class\n      )}\n      {...others}\n    />\n  )\n}\n\ntype ComboboxTriggerProps<T extends ValidComponent = \"button\"> =\n  ComboboxPrimitive.ComboboxTriggerProps<T> & {\n    class?: string | undefined\n    children?: JSX.Element\n  }\n\nconst ComboboxTrigger = <T extends ValidComponent = \"button\">(\n  props: PolymorphicProps<T, ComboboxTriggerProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxTriggerProps, [\"class\", \"children\"])\n  return (\n    <ComboboxPrimitive.Trigger class={cn(\"size-4 opacity-50\", local.class)} {...others}>\n      <ComboboxPrimitive.Icon>\n        <Show\n          when={local.children}\n          fallback={\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-width=\"2\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              class=\"size-4\"\n            >\n              <path d=\"M8 9l4 -4l4 4\" />\n              <path d=\"M16 15l-4 4l-4 -4\" />\n            </svg>\n          }\n        >\n          {(children) => children()}\n        </Show>\n      </ComboboxPrimitive.Icon>\n    </ComboboxPrimitive.Trigger>\n  )\n}\n\ntype ComboboxContentProps<T extends ValidComponent = \"div\"> =\n  ComboboxPrimitive.ComboboxContentProps<T> & { class?: string | undefined }\n\nconst ComboboxContent = <T extends ValidComponent = \"div\">(\n  props: PolymorphicProps<T, ComboboxContentProps<T>>\n) => {\n  const [local, others] = splitProps(props as ComboboxContentProps, [\"class\"])\n  return (\n    <ComboboxPrimitive.Portal>\n      <ComboboxPrimitive.Content\n        class={cn(\n          \"relative z-50 min-w-32 overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-80\",\n          local.class\n        )}\n        {...others}\n      >\n        <ComboboxPrimitive.Listbox class=\"m-0 p-1\" />\n      </ComboboxPrimitive.Content>\n    </ComboboxPrimitive.Portal>\n  )\n}\n\nexport {\n  Combobox,\n  ComboboxItem,\n  ComboboxItemLabel,\n  ComboboxItemIndicator,\n  ComboboxSection,\n  ComboboxControl,\n  ComboboxTrigger,\n  ComboboxInput,\n  ComboboxHiddenSelect,\n  ComboboxContent\n}\n",
      "path": "src/registry/ui/combobox.tsx"
    }
  ]
}
