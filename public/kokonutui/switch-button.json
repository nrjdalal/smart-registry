{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "switch-button",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react",
    "next-themes"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/switch-button.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @dorian_baffier\n * @description: Switch Button\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { Sun } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\n\ninterface SwitchButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    variant?: \"minimal\";\n    size?: \"sm\" | \"default\" | \"lg\";\n    showLabel?: boolean;\n}\n\nexport default function SwitchButton({\n    className,\n    variant = \"minimal\",\n    size = \"default\",\n    showLabel = true,\n    ...props\n}: SwitchButtonProps) {\n    const { setTheme, theme } = useTheme();\n\n    const handleThemeToggle = () => {\n        setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n    };\n\n    const variants = {\n        minimal: [\n            \"rounded-lg\",\n            \"bg-gradient-to-b from-zinc-50/95 to-zinc-100/95 dark:from-zinc-800/95 dark:to-zinc-900/95\",\n            \"hover:from-zinc-100/95 hover:to-zinc-200/95 dark:hover:from-zinc-700/95 dark:hover:to-zinc-800/95\",\n            \"border border-zinc-200 dark:border-zinc-700/80\",\n            \"hover:border-zinc-300 dark:hover:border-zinc-600\",\n            \"shadow-[0_1px_2px_-1px_rgb(0_0_0/0.1),0_1px_3px_-2px_rgb(0_0_0/0.1)] dark:shadow-[0_1px_2px_-1px_rgb(0_0_0/0.3),0_1px_3px_-2px_rgb(0_0_0/0.3)]\",\n            \"hover:shadow-[0_2px_4px_-2px_rgb(0_0_0/0.15),0_2px_6px_-3px_rgb(0_0_0/0.15)] dark:hover:shadow-[0_2px_4px_-2px_rgb(0_0_0/0.4),0_2px_6px_-3px_rgb(0_0_0/0.4)]\",\n            \"active:shadow-[0_0px_1px_0_rgb(0_0_0/0.1)] dark:active:shadow-[0_0px_1px_0_rgb(0_0_0/0.2)]\",\n            \"transition-all duration-200 ease-out\",\n            \"backdrop-blur-sm\",\n            \"relative\",\n            \"after:absolute after:inset-0 after:rounded-lg after:bg-gradient-to-t after:from-white/10 after:to-transparent after:opacity-0 hover:after:opacity-100 after:transition-opacity\",\n            \"before:absolute before:inset-[1px] before:rounded-[7px] before:bg-gradient-to-b before:from-white/20 before:to-transparent before:opacity-0 hover:before:opacity-100 before:transition-opacity dark:before:from-white/5\",\n        ],\n    };\n\n    const sizes = {\n        sm: \"h-8 px-3 text-sm\",\n        default: \"h-10 px-4\",\n        lg: \"h-11 px-5\",\n    };\n\n    return (\n        <Button\n            onClick={handleThemeToggle}\n            className={cn(\n                \"relative group\",\n                \"transition-all duration-300 ease-out\",\n                \"text-zinc-600 dark:text-zinc-300\",\n                \"hover:text-zinc-800 dark:hover:text-zinc-100\",\n                variants[variant],\n                sizes[size],\n                className\n            )}\n            {...props}\n        >\n            <div\n                className={cn(\n                    \"flex items-center gap-2\",\n                    \"transition-all duration-300 ease-out\"\n                )}\n            >\n                <Sun\n                    className={cn(\n                        \"transition-all duration-700 ease-in-out\",\n                        size === \"sm\" && \"w-3.5 h-3.5\",\n                        size === \"default\" && \"w-4 h-4\",\n                        size === \"lg\" && \"w-5 h-5\",\n                        \"group-hover:rotate-[360deg] group-hover:scale-110\",\n                        theme === \"dark\" ? \"rotate-180\" : \"rotate-0\",\n                        \"transform-gpu\",\n                        \"drop-shadow-[0_0_12px_rgba(252,211,77,0.3)] dark:drop-shadow-[0_0_12px_rgba(252,211,77,0.2)]\",\n                        theme === \"dark\"\n                            ? \"text-zinc-300 group-hover:text-zinc-100\"\n                            : \"text-amber-500 group-hover:text-amber-600\",\n                        \"group-active:scale-95\"\n                    )}\n                />\n                {showLabel && (\n                    <span\n                        className={cn(\n                            \"capitalize font-medium relative\",\n                            \"transition-opacity duration-300 ease-out\"\n                        )}\n                    >\n                        <span\n                            className={cn(\n                                \"absolute inset-0\",\n                                theme === \"dark\" ? \"opacity-0\" : \"opacity-100\",\n                                \"transition-opacity duration-300 ease-out\"\n                            )}\n                        >\n                            Light\n                            <span\n                                className={cn(\n                                    \"absolute -bottom-px left-0 w-full h-px\",\n                                    \"bg-linear-to-r from-zinc-400/0 via-zinc-400/50 to-zinc-400/0\",\n                                    \"dark:from-zinc-600/0 dark:via-zinc-600/50 dark:to-zinc-600/0\",\n                                    \"opacity-0 group-hover:opacity-100\",\n                                    \"transition-opacity duration-200\"\n                                )}\n                            />\n                        </span>\n                        <span\n                            className={cn(\n                                \"absolute inset-0\",\n                                theme === \"dark\" ? \"opacity-100\" : \"opacity-0\",\n                                \"transition-opacity duration-300 ease-out\"\n                            )}\n                        >\n                            Dark\n                            <span\n                                className={cn(\n                                    \"absolute -bottom-px left-0 w-full h-px\",\n                                    \"bg-linear-to-r from-zinc-400/0 via-zinc-400/50 to-zinc-400/0\",\n                                    \"dark:from-zinc-600/0 dark:via-zinc-600/50 dark:to-zinc-600/0\",\n                                    \"opacity-0 group-hover:opacity-100\",\n                                    \"transition-opacity duration-200\"\n                                )}\n                            />\n                        </span>\n                        <span className=\"opacity-0\">Light</span>\n                    </span>\n                )}\n            </div>\n            <span\n                className={cn(\n                    \"absolute inset-0\",\n                    \"bg-gradient-to-r from-zinc-500/0 via-zinc-500/[0.12] to-zinc-500/0 dark:from-white/0 dark:via-white/[0.05]\",\n                    \"translate-x-[-100%]\",\n                    \"group-hover:translate-x-[100%]\",\n                    \"transition-transform duration-500\",\n                    \"ease-in-out\",\n                    \"pointer-events-none\",\n                    \"z-[1]\"\n                )}\n            />\n            <span\n                className={cn(\n                    \"absolute inset-0 opacity-0 group-hover:opacity-100\",\n                    \"bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.12),transparent_70%)] dark:bg-[radial-gradient(circle_at_50%_50%,rgba(255,255,255,0.07),transparent_70%)]\",\n                    \"transition-opacity duration-500\",\n                    \"pointer-events-none\",\n                    \"z-[2]\"\n                )}\n            />\n        </Button>\n    );\n}\n",
      "path": "components/kokonutui/switch-button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    }
  ]
}
