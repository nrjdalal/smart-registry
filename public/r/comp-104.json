{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components/smart-registry/comp-104",
  "type": "registry:component",
  "dependencies": [
    "react",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/smart-registry/comp-104.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  MinusIcon,\n  PlusIcon,\n  Volume1Icon,\n  Volume2Icon,\n  VolumeIcon,\n  VolumeXIcon,\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\nexport default function Component() {\n  const [volume, setVolume] = useState(3); // Initialize volume state (0-9)\n\n  const decreaseVolume = () => setVolume((prev) => Math.max(0, prev - 1));\n  const increaseVolume = () => setVolume((prev) => Math.min(6, prev + 1));\n\n  // Optimized volume icon selection\n  const Icon =\n    volume === 0 ? VolumeXIcon : volume < 3 ? VolumeIcon : volume < 5 ? Volume1Icon : Volume2Icon;\n\n  return (\n    <div className=\"inline-flex items-center\" role=\"group\" aria-labelledby=\"volume-control\">\n      <span id=\"volume-control\" className=\"sr-only\">\n        Volume Control\n      </span>\n      <Button\n        className=\"rounded-full\"\n        variant=\"outline\"\n        size=\"icon\"\n        aria-label=\"Decrease volume\"\n        onClick={decreaseVolume}\n        disabled={volume === 0}\n      >\n        <MinusIcon size={16} aria-hidden=\"true\" />\n      </Button>\n      <div className=\"flex items-center px-3 text-sm font-medium tabular-nums\" aria-live=\"polite\">\n        <Icon className=\"opacity-60\" size={16} aria-hidden=\"true\" />\n        <span className=\"ms-2\" aria-label={`Current volume is ${volume}`}>\n          {volume}\n        </span>\n      </div>\n      <Button\n        className=\"rounded-full\"\n        variant=\"outline\"\n        size=\"icon\"\n        aria-label=\"Increase volume\"\n        onClick={increaseVolume}\n        disabled={volume === 6}\n      >\n        <PlusIcon size={16} aria-hidden=\"true\" />\n      </Button>\n    </div>\n  );\n}\n",
      "path": "registry/default/components/comp-104.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/smart-registry/button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "path": "registry/default/ui/button.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/smart-registry/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/default/lib/utils.ts"
    }
  ]
}