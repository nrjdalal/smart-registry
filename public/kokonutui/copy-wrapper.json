{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "copy-wrapper",
  "type": "registry:lib",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "files": [
    {
      "type": "registry:lib",
      "target": "lib/copy-wrapper.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { CopyOverlay } from \"@/lib/copy-overlay\";\nimport { AnimatePresence } from \"motion/react\";\nimport { Code, Terminal } from \"lucide-react\";\nimport { useCopyToClipboard } from \"@/hooks/use-copy-to-clipboard\";\n\ninterface CopyWrapperProps {\n    fileName: string;\n    showCode: boolean;\n    setShowCode: (show: boolean) => void;\n}\n\nconst prePath = process.env.VERCEL_PROJECT_PRODUCTION_URL\n    ? `https://${process.env.VERCEL_PROJECT_PRODUCTION_URL}`\n    : `https://${process.env.NEXT_PUBLIC_SITE_URL}`;\n\nexport function CopyWrapper({\n    fileName,\n    showCode = false,\n    setShowCode,\n}: CopyWrapperProps) {\n    const [showOverlay, setShowOverlay] = useState(false);\n    const { copyToClipboard } = useCopyToClipboard({\n        timeout: 1000,\n        onCopy: () => {\n            setShowOverlay(true);\n            setTimeout(() => {\n                setShowOverlay(false);\n            }, 1000);\n        },\n    });\n\n    const handleCLI = () => {\n        copyToClipboard(\n            `bunx shadcn@latest add ${prePath}/r/${fileName?.replace(\n                \".tsx\",\n                \".json\"\n            )}`\n        );\n    };\n\n    return (\n        <>\n            <div className=\"flex items-center gap-1\">\n                <button\n                    type=\"button\"\n                    onClick={handleCLI}\n                    className=\"inline-flex items-center px-3 py-2 text-sm rounded-md bg-zinc-100 dark:bg-zinc-800 text-zinc-600 dark:text-zinc-400 hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                >\n                    <Terminal className=\"w-4 h-4\" />\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={() => setShowCode(!showCode)}\n                    className=\"inline-flex items-center px-3 py-2 text-sm rounded-md bg-zinc-100 dark:bg-zinc-800 text-zinc-600 dark:text-zinc-400 hover:bg-zinc-200 dark:hover:bg-zinc-700\"\n                >\n                    <Code className=\"w-4 h-4\" />\n                </button>\n            </div>\n            <AnimatePresence>\n                <CopyOverlay show={showOverlay} />\n            </AnimatePresence>\n        </>\n    );\n}\n",
      "path": "lib/copy-wrapper.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/copy-overlay.tsx",
      "content": "import { Check } from \"lucide-react\";\nimport { motion } from \"motion/react\";\n\ninterface CopyOverlayProps {\n    show: boolean;\n}\n\nexport function CopyOverlay({ show }: CopyOverlayProps) {\n    if (!show) return null;\n\n    return (\n        <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"absolute inset-0 flex items-center justify-center rounded-xl z-50 overflow-hidden px-4 sm:px-0\"\n        >\n            <div\n                className=\"absolute inset-0 \n                bg-linear-to-b from-white/90 via-gray-50/90 to-white/90\n                dark:from-zinc-900/90 dark:via-zinc-800/90 dark:to-zinc-900/90\n                backdrop-blur-md\"\n            />\n\n            <motion.div\n                initial={{ scale: 0.5, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{\n                    type: \"spring\",\n                    stiffness: 200,\n                    damping: 15,\n                }}\n                className=\"relative flex flex-col items-center gap-1.5 sm:gap-2\"\n            >\n                <div\n                    className=\"w-10 h-10 sm:w-12 sm:h-12 rounded-full bg-green-100 dark:bg-white/15 \n                    flex items-center justify-center border border-green-200 dark:border-white/25\"\n                >\n                    <Check className=\"w-5 h-5 sm:w-6 sm:h-6 text-green-600 dark:text-white/90\" />\n                </div>\n                <span\n                    className=\"text-sm sm:text-base text-zinc-600 \n                    dark:text-white/90 font-semibold\"\n                >\n                    Copied to clipboard\n                </span>\n            </motion.div>\n        </motion.div>\n    );\n}\n",
      "path": "lib/copy-overlay.tsx"
    },
    {
      "type": "registry:hook",
      "target": "hooks/use-copy-to-clipboard.ts",
      "content": "import * as React from \"react\";\n\nexport function useCopyToClipboard({\n    timeout = 2000,\n    onCopy,\n}: {\n    timeout?: number;\n    onCopy?: () => void;\n} = {}) {\n    const [isCopied, setIsCopied] = React.useState(false);\n\n    const copyToClipboard = (value: string) => {\n        if (typeof window === \"undefined\" || !navigator.clipboard.writeText) {\n            return;\n        }\n\n        if (!value) return;\n\n        navigator.clipboard.writeText(value).then(() => {\n            setIsCopied(true);\n\n            if (onCopy) {\n                onCopy();\n            }\n\n            setTimeout(() => {\n                setIsCopied(false);\n            }, timeout);\n        }, console.error);\n    };\n\n    return { isCopied, copyToClipboard };\n}\n",
      "path": "hooks/use-copy-to-clipboard.ts"
    }
  ]
}
