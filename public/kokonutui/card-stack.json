{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-stack",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/card-stack.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @dorian_baffier\n * @description: Card Stack\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport { useState } from \"react\";\nimport { motion } from \"motion/react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Specification {\n    label: string;\n    value: string;\n}\n\ninterface Product {\n    id: string;\n    title: string;\n    subtitle: string;\n    image: string;\n    specs: Specification[];\n}\n\n// Dummy Products Data\nconst products: Product[] = [\n    {\n        id: \"instant-pay\",\n        title: \"Quick Pay\",\n        subtitle: \"Instant Transfers\",\n        image: \"/undraw.svg\",\n        specs: [\n            { label: \"Speed\", value: \"Instant\" },\n            { label: \"Security\", value: \"256-bit\" },\n            { label: \"Limit\", value: \"$50,000\" },\n            { label: \"Fee\", value: \"0.5%\" },\n        ],\n    },\n    {\n        id: \"crypto-pay\",\n        title: \"Crypto Pay\",\n        subtitle: \"Web3 Payments\",\n        image: \"https://images.unsplash.com/photo-1527443224154-c4a3942d3acf?w=800&auto=format&fit=crop&q=80\",\n        specs: [\n            { label: \"Network\", value: \"Multi-chain\" },\n            { label: \"Gas\", value: \"Optimized\" },\n            { label: \"Support\", value: \"24/7\" },\n            { label: \"Security\", value: \"Top-tier\" },\n        ],\n    },\n    {\n        id: \"business-pay\",\n        title: \"Business Pay\",\n        subtitle: \"Enterprise Solutions\",\n        image: \"https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=800&auto=format&fit=crop&q=80\",\n        specs: [\n            { label: \"Volume\", value: \"Unlimited\" },\n            { label: \"API\", value: \"REST/SDK\" },\n            { label: \"Support\", value: \"Premium\" },\n            { label: \"Features\", value: \"Custom\" },\n        ],\n    },\n    {\n        id: \"global-pay\",\n        title: \"Global Pay\",\n        subtitle: \"International Transfers\",\n        image: \"https://images.unsplash.com/photo-1629131726692-1accd0c53ce0?w=800&auto=format&fit=crop&q=80\",\n        specs: [\n            { label: \"Countries\", value: \"180+\" },\n            { label: \"FX Rate\", value: \"Real-time\" },\n            { label: \"Speed\", value: \"Same-day\" },\n            { label: \"Support\", value: \"Local\" },\n        ],\n    },\n];\n\ninterface CardProps {\n    product: Product;\n    index: number;\n    totalCards: number;\n    isExpanded: boolean;\n}\n\nconst Card = ({ product, index, totalCards, isExpanded }: CardProps) => {\n    // Calculate center offset based on total cards\n    const centerOffset = (totalCards - 1) * 5;\n\n    // Initial stacked position - centered with slight overlap\n    const defaultX = index * 10 - centerOffset;\n    const defaultY = index * 2;\n    const defaultRotate = index * 1.5;\n    const defaultScale = 1;\n\n    // Calculate the total width of expanded cards and center offset\n    const cardWidth = 320; // Width of each card\n    const cardOverlap = 240; // Amount of overlap between cards\n    const totalExpandedWidth =\n        cardWidth + (totalCards - 1) * (cardWidth - cardOverlap); // Total width including overlap\n    const expandedCenterOffset = totalExpandedWidth / 2;\n\n    // Fanned out position - centered spread with overlap\n    const spreadX =\n        index * (cardWidth - cardOverlap) -\n        expandedCenterOffset +\n        cardWidth / 2;\n    const spreadY = 0;\n    const spreadRotate = index * 5 - (totalCards - 1) * 2.5; // Increased rotation for better visual effect\n    const spreadScale = 1;\n\n    return (\n        <motion.div\n            initial={{\n                x: defaultX,\n                y: defaultY,\n                rotate: defaultRotate,\n                scale: defaultScale,\n            }}\n            animate={{\n                x: isExpanded ? spreadX : defaultX,\n                y: isExpanded ? spreadY : defaultY,\n                rotate: isExpanded ? spreadRotate : defaultRotate,\n                scale: isExpanded ? spreadScale : defaultScale,\n                zIndex: totalCards - index,\n            }}\n            transition={{\n                type: \"spring\",\n                stiffness: 350,\n                damping: 30,\n                mass: 0.8,\n                restDelta: 0.001,\n                restSpeed: 0.001,\n            }}\n            className={cn(\n                \"absolute inset-0 rounded-2xl p-6 w-full\",\n                \"bg-gradient-to-br from-white/40 via-neutral-50/30 to-neutral-100/20\",\n                \"dark:from-neutral-800/40 dark:via-neutral-900/30 dark:to-black/20\",\n                \"border border-white/20 dark:border-neutral-800/20\",\n                \"before:absolute before:inset-0 before:rounded-2xl\",\n                \"before:bg-gradient-to-b before:from-white/20 before:via-neutral-100/10 before:to-transparent\",\n                \"dark:before:from-white/5 dark:before:via-neutral-500/5 dark:before:to-transparent\",\n                \"before:opacity-100 before:transition-opacity before:duration-500\",\n                \"after:absolute after:inset-0 after:rounded-2xl after:bg-gradient-to-br\",\n                \"after:from-white/80 after:to-neutral-100/70 dark:after:from-neutral-900/80 dark:after:to-black/70\",\n                \"after:z-[-1] after:blur-xl\",\n                \"backdrop-blur-xl backdrop-saturate-150\",\n                \"shadow-[0_8px_20px_rgb(0,0,0,0.08)] dark:shadow-[0_8px_20px_rgb(0,0,0,0.3)]\",\n                \"hover:border-white/30 dark:hover:border-neutral-700/30\",\n                \"hover:shadow-[0_12px_40px_rgb(0,0,0,0.12)] dark:hover:shadow-[0_12px_40px_rgb(0,0,0,0.4)]\",\n                \"hover:backdrop-blur-2xl\",\n                \"hover:bg-gradient-to-br hover:from-white/50 hover:via-neutral-50/40 hover:to-neutral-100/30\",\n                \"dark:hover:from-neutral-800/50 dark:hover:via-neutral-900/40 dark:hover:to-black/30\",\n                \"transition-all duration-500 ease-out\",\n                \"transform-gpu overflow-hidden\"\n            )}\n            style={{\n                maxWidth: \"320px\",\n                transformStyle: \"preserve-3d\",\n                perspective: \"2000px\",\n                left: \"50%\",\n                marginLeft: \"-160px\",\n                transform: isExpanded\n                    ? \"\"\n                    : `\n                        translateY(${index * 10}px)\n                        translateX(${index * 1}px)\n                        rotate(${index * 3}deg)\n                        scale(${1 - index * 0.02})\n                    `,\n                zIndex: products.length - index,\n            }}\n        >\n            {/* Inner Card */}\n            <div className=\"absolute inset-1 rounded-xl bg-neutral-50/50 dark:bg-neutral-900/50 backdrop-blur-sm border border-neutral-200/50 dark:border-neutral-700/50\" />\n\n            <div className=\"relative z-10\">\n                {/* Specs Grid moved to top */}\n                <dl className=\"mb-4 grid grid-cols-4 gap-2 justify-center\">\n                    {product.specs.map((spec) => (\n                        <div\n                            key={spec.label}\n                            className=\"text-[10px] backdrop-blur-sm flex flex-col items-start text-left\"\n                        >\n                            <dd className=\"font-medium text-gray-500 dark:text-gray-400 w-full text-left\">\n                                {spec.value}\n                            </dd>\n                            <dt className=\"text-gray-900 dark:text-gray-100 mb-0.5 w-full text-left\">\n                                {spec.label}\n                            </dt>\n                        </div>\n                    ))}\n                </dl>\n\n                <div\n                    className={cn(\n                        \"aspect-[16/11] w-full overflow-hidden rounded-lg\",\n                        \"bg-neutral-100 dark:bg-neutral-900\",\n                        \"transition-transform duration-300 ease-out\",\n                        \"group-hover:scale-[1.02]\",\n                        \"border border-neutral-200/50 dark:border-neutral-700/50\",\n                        \"shadow-inner\"\n                    )}\n                >\n                    <img\n                        src={product.image}\n                        alt={product.title}\n                        className=\"object-cover w-full h-full\"\n                        loading=\"lazy\"\n                    />\n                </div>\n\n                <div className=\"mt-4\">\n                    <div className=\"space-y-1\">\n                        <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 dark:text-white text-left\">\n                            {product.title}\n                        </h2>\n                        <span className=\"block text-3xl font-semibold tracking-tight bg-gradient-to-r from-gray-400 via-gray-300 to-gray-500 dark:from-gray-200 dark:via-white dark:to-gray-300 bg-clip-text text-transparent text-left\">\n                            {product.subtitle}\n                        </span>\n                    </div>\n                    <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400 text-left\">\n                        Experience the iconic design that revolutionized\n                        technology\n                    </p>\n                </div>\n            </div>\n        </motion.div>\n    );\n};\n\ninterface CardStackProps {\n    className?: string;\n}\n\nexport default function CardStackExample({ className }: CardStackProps) {\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const handleToggle = () => setIsExpanded(!isExpanded);\n\n    return (\n        <button\n            className={cn(\n                \"relative mx-auto cursor-pointer\",\n                \"min-h-[440px] w-full max-w-[90vw]\",\n                \"md:max-w-[1200px]\",\n                \"appearance-none bg-transparent border-0 p-0\",\n                \"flex items-center justify-center mb-8\",\n                className\n            )}\n            onClick={handleToggle}\n            aria-label=\"Toggle card stack\"\n            type=\"button\"\n        >\n            {products.map((product, index) => (\n                <Card\n                    key={product.id}\n                    product={product}\n                    index={index}\n                    totalCards={products.length}\n                    isExpanded={isExpanded}\n                />\n            ))}\n        </button>\n    );\n}\n",
      "path": "components/kokonutui/card-stack.tsx"
    }
  ]
}
