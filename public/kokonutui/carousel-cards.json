{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "carousel-cards",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react",
    "next"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/carousel-cards.tsx",
      "content": "\"use client\";\n\n/**\n * @author: @dorian_baffier\n * @description: Carousel Cards\n * @version: 1.0.0\n * @date: 2025-06-26\n * @license: MIT\n * @website: https://kokonutui.com\n * @github: https://github.com/kokonut-labs/kokonutui\n */\n\nimport React from \"react\";\nimport { Heart, ChevronLeft, ChevronRight, Star } from \"lucide-react\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ExperienceItem {\n    id: string;\n    title: string;\n    image: string;\n    location: string;\n    price: number;\n    currency?: string;\n    rating?: number;\n    reviewCount?: number;\n    badge?: string;\n    date?: string;\n}\n\ninterface ExperienceGridProps {\n    title: string;\n    items: ExperienceItem[];\n    viewAllHref?: string;\n}\n\nconst sampleExperiences: ExperienceItem[] = [\n    {\n        id: \"1\",\n        title: \"Become an Otaku Hottie with Megan Thee Stallion\",\n        image: \"https://images.unsplash.com/photo-1615571022219-eb45cf7faa9d\",\n        location: \"Los Angeles, United States\",\n        price: 120,\n        currency: \"€\",\n        rating: 4.97,\n        reviewCount: 128,\n        badge: \"Original\",\n        date: \"Closes May 21\",\n    },\n    {\n        id: \"2\",\n        title: \"Spend a Sunday Funday with Patrick Mahomes\",\n        image: \"https://images.unsplash.com/photo-1622127922040-13cab637ee78\",\n        location: \"Kansas City, United States\",\n        price: 150,\n        currency: \"€\",\n        rating: 4.92,\n        reviewCount: 86,\n        badge: \"Original\",\n        date: \"Closes Today\",\n    },\n    {\n        id: \"3\",\n        title: \"Celebrate with SEVENTEEN on their 10th anniversary\",\n        image: \"https://images.unsplash.com/photo-1534430480872-3498386e7856\",\n        location: \"Seoul, South Korea\",\n        price: 200,\n        currency: \"€\",\n        rating: 4.98,\n        reviewCount: 254,\n        badge: \"Original\",\n        date: \"Closed May 17\",\n    },\n    {\n        id: \"4\",\n        title: \"Learn the secrets of French pastry with nonnas\",\n        image: \"https://images.unsplash.com/photo-1604999333679-b86d54738315\",\n        location: \"Paris, France\",\n        price: 70,\n        currency: \"€\",\n        rating: 4.97,\n        reviewCount: 112,\n        badge: \"Original\",\n    },\n    {\n        id: \"5\",\n        title: \"Uncover the world of cabaret with a burlesque show\",\n        image: \"https://images.unsplash.com/photo-1552733407-5d5c46c3bb3b\",\n        location: \"Paris, France\",\n        price: 92,\n        currency: \"€\",\n        rating: 4.9,\n        reviewCount: 78,\n        badge: \"Original\",\n    },\n    {\n        id: \"6\",\n        title: \"The Super Powers of Art-family Game at the Louvre\",\n        image: \"https://images.unsplash.com/photo-1530789253388-582c481c54b0\",\n        location: \"Paris, France\",\n        price: 90,\n        currency: \"€\",\n        rating: 4.98,\n        reviewCount: 146,\n        badge: \"Original\",\n    },\n    {\n        id: \"7\",\n        title: \"Savor tasty vegan pastries with a plant-based pro\",\n        image: \"https://images.unsplash.com/photo-1608830597604-619220679440\",\n        location: \"Paris, France\",\n        price: 75,\n        currency: \"€\",\n        rating: 4.95,\n        reviewCount: 92,\n        badge: \"Original\",\n    },\n];\n\nconst popularExperiences: ExperienceItem[] = [\n    {\n        id: \"p1\",\n        title: \"Learn to bake the French Croissant\",\n        image: \"https://images.unsplash.com/photo-1555507036-ab1f4038808a\",\n        location: \"Paris, France\",\n        price: 95,\n        currency: \"€\",\n        rating: 4.95,\n        reviewCount: 218,\n        badge: \"Popular\",\n    },\n    {\n        id: \"p2\",\n        title: \"Seek out hidden speakeasy bars in the city\",\n        image: \"https://images.unsplash.com/photo-1470337458703-46ad1756a187\",\n        location: \"Paris, France\",\n        price: 74,\n        currency: \"€\",\n        rating: 4.9,\n        reviewCount: 165,\n        badge: \"Popular\",\n    },\n    {\n        id: \"p3\",\n        title: \"Versailles Food and Palace Bike Tour\",\n        image: \"https://images.unsplash.com/photo-1555507036-ab1f4038808a\",\n        location: \"Versailles, France\",\n        price: 122,\n        currency: \"€\",\n        rating: 4.97,\n        reviewCount: 89,\n        badge: \"Popular\",\n    },\n    {\n        id: \"p4\",\n        title: \"Haunted Paris Tour - Ghosts, Legends, True Crime\",\n        image: \"https://images.unsplash.com/photo-1549144511-f099e773c147\",\n        location: \"Paris, France\",\n        price: 25,\n        currency: \"€\",\n        rating: 4.98,\n        reviewCount: 345,\n        badge: \"Popular\",\n    },\n    {\n        id: \"p5\",\n        title: \"Learn to make the French macarons with a chef\",\n        image: \"https://images.unsplash.com/photo-1558326567-98ae2405596b\",\n        location: \"Paris, France\",\n        price: 110,\n        currency: \"€\",\n        rating: 4.95,\n        reviewCount: 203,\n        badge: \"Popular\",\n    },\n    {\n        id: \"p6\",\n        title: \"No Diet Club - Best food tour in Le Marais\",\n        image: \"https://images.unsplash.com/photo-1414235077428-338989a2e8c0\",\n        location: \"Paris, France\",\n        price: 65,\n        currency: \"€\",\n        rating: 4.92,\n        reviewCount: 178,\n        badge: \"5 spots left\",\n    },\n    {\n        id: \"p7\",\n        title: \"Soak up the nightlife of Paris\",\n        image: \"https://images.unsplash.com/photo-1546636889-ba9fdd63583e\",\n        location: \"Paris, France\",\n        price: 20,\n        currency: \"€\",\n        rating: 4.94,\n        reviewCount: 112,\n        badge: \"Popular\",\n    },\n];\n\nconst ExperienceCard = ({ experience }: { experience: ExperienceItem }) => {\n    return (\n        <Card className=\"group relative w-full h-[320px] rounded-xl border-0 overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-300 flex flex-col\">\n            <div className=\"relative aspect-[4/3] w-full overflow-hidden rounded-t-xl\">\n                <Image\n                    src={experience.image}\n                    alt={experience.title}\n                    fill\n                    className=\"object-cover transition-transform duration-300 group-hover:scale-105\"\n                />\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"absolute top-2 right-2 rounded-full bg-white/80 backdrop-blur-sm hover:bg-white/90 z-10 text-neutral-700 hover:text-black\"\n                >\n                    <Heart className=\"w-4 h-4 stroke-[2px]\" />\n                    <span className=\"sr-only\">Add to favorites</span>\n                </Button>\n                {experience.badge && (\n                    <Badge className=\"absolute top-2 left-2 bg-white/90 text-black text-xs font-medium px-1.5 py-0.5 rounded-md\">\n                        {experience.badge}\n                    </Badge>\n                )}\n            </div>\n\n            <div className=\"flex flex-col flex-1 justify-between\">\n                <CardContent className=\"p-2 pt-3 pb-0\">\n                    <h3 className=\"font-medium text-sm tracking-tight \">\n                        {experience.title}\n                    </h3>\n                    <p className=\"text-xs text-muted-foreground tracking-tight\">\n                        {experience.location}\n                    </p>\n                    {experience.date && (\n                        <p className=\"text-xs text-muted-foreground tracking-tight\">\n                            {experience.date}\n                        </p>\n                    )}\n                </CardContent>\n\n                <CardFooter className=\"p-2 pt-0 flex items-center gap-0.5 text-xs mt-auto\">\n                    {experience.rating && (\n                        <span className=\"flex items-center gap-0.5\">\n                            <Star className=\"w-3 h-3 fill-current\" />\n                            {experience.rating}\n                        </span>\n                    )}\n                    {experience.reviewCount && (\n                        <span className=\"text-muted-foreground text-xs tracking-tight\">\n                            {experience.rating && \"·\"}\n                            {experience.reviewCount > 0\n                                ? ` (${experience.reviewCount})`\n                                : \"\"}\n                        </span>\n                    )}\n                    <span className=\"ml-auto text-xs tracking-tight\">\n                        {experience.currency || \"€\"} {experience.price} / guest\n                    </span>\n                </CardFooter>\n            </div>\n        </Card>\n    );\n};\n\nconst ExperienceSection = ({\n    title,\n    items,\n    viewAllHref = \"#\",\n}: ExperienceGridProps) => {\n    const scrollContainer = React.useRef<HTMLDivElement>(null);\n\n    const handleScrollLeft = () => {\n        if (scrollContainer.current) {\n            scrollContainer.current.scrollBy({\n                left: -320,\n                behavior: \"smooth\",\n            });\n        }\n    };\n\n    const handleScrollRight = () => {\n        if (scrollContainer.current) {\n            scrollContainer.current.scrollBy({ left: 320, behavior: \"smooth\" });\n        }\n    };\n\n    return (\n        <div className=\"w-full py-4\">\n            <div className=\"max-w-[1760px] mx-auto px-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                    <h2 className=\"font-medium text-lg md:text-xl tracking-tight\">\n                        {title}\n                    </h2>\n                    <div className=\"flex items-center gap-1\">\n                        <Button\n                            variant=\"outline\"\n                            size=\"icon\"\n                            className=\"rounded-full w-7 h-7 border-neutral-200 hover:bg-neutral-100 dark:border-neutral-800 dark:hover:bg-neutral-900\"\n                            onClick={handleScrollLeft}\n                        >\n                            <ChevronLeft className=\"w-4 h-4\" />\n                            <span className=\"sr-only\">Scroll left</span>\n                        </Button>\n                        <Button\n                            variant=\"outline\"\n                            size=\"icon\"\n                            className=\"rounded-full w-7 h-7 border-neutral-200 hover:bg-neutral-100 dark:border-neutral-800 dark:hover:bg-neutral-900\"\n                            onClick={handleScrollRight}\n                        >\n                            <ChevronRight className=\"w-4 h-4\" />\n                            <span className=\"sr-only\">Scroll right</span>\n                        </Button>\n                        <Link\n                            href=\"#\"\n                            className=\"hidden md:block text-xs font-medium ml-1 hover:underline\"\n                        >\n                            Show all\n                        </Link>\n                    </div>\n                </div>\n\n                <div\n                    ref={scrollContainer}\n                    className=\"flex gap-3 overflow-x-auto pb-2 snap-x snap-mandatory scrollbar-hide -mx-1 px-1\"\n                    style={{\n                        scrollbarWidth: \"none\",\n                        msOverflowStyle: \"none\",\n                    }}\n                >\n                    {items.map((item) => (\n                        <div\n                            key={item.id}\n                            className=\"flex-none w-[240px] md:w-[260px] snap-start\"\n                        >\n                            <Link\n                                href=\"#\"\n                                className=\"block focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-primary rounded-xl\"\n                            >\n                                <ExperienceCard experience={item} />\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default function CarouselCards() {\n    return (\n        <div className=\"w-full space-y-4 mt-4\">\n            <ExperienceSection\n                title=\"Airbnb Originals ›\"\n                items={sampleExperiences}\n                viewAllHref=\"#\"\n            />\n            <ExperienceSection\n                title=\"Popular experiences in Paris\"\n                items={popularExperiences}\n                viewAllHref=\"#\"\n            />\n        </div>\n    );\n}\n",
      "path": "components/kokonutui/carousel-cards.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/badge.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-zinc-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-hidden focus:ring-2 focus:ring-zinc-950 focus:ring-offset-2 dark:border-zinc-800 dark:focus:ring-zinc-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-zinc-900 text-zinc-50 hover:bg-zinc-900/80 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/80\",\n        secondary:\n          \"border-transparent bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-zinc-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/80\",\n        outline: \"text-zinc-950 dark:text-zinc-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
      "path": "components/ui/badge.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-zinc-200 bg-white text-zinc-950 shadow-xs dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "components/ui/card.tsx"
    }
  ]
}
