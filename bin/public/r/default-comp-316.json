{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "default-comp-316",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "react",
    "@/registry",
    "@radix-ui/react-dialog",
    "lucide-react",
    "@radix-ui/react-scroll-area"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/default/comp-316.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\nexport default function Component() {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">Scrollable (custom scrollbar)</Button>\n      </DialogTrigger>\n      <DialogContent className=\"flex flex-col gap-0 p-0 sm:max-h-[min(640px,80vh)] sm:max-w-lg [&>button:last-child]:hidden\">\n        <ScrollArea className=\"flex max-h-full flex-col overflow-hidden\">\n          <DialogHeader className=\"contents space-y-0 text-left\">\n            <DialogTitle className=\"px-6 pt-6\">Frequently Asked Questions (FAQ)</DialogTitle>\n            <DialogDescription asChild>\n              <div className=\"p-6\">\n                <div className=\"[&_strong]:text-foreground space-y-4 [&_strong]:font-semibold\">\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Account Management</strong>\n                    </p>\n                    <p>\n                      Navigate to the registration page, provide required information, and verify\n                      your email address. You can sign up using your email or through social media\n                      platforms.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Password Reset Process</strong>\n                    </p>\n                    <p>\n                      Users can reset their password through the account settings page. Click\n                      &quot;Forgot Password&quot; and follow the email verification steps to regain\n                      account access quickly and securely.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Service Pricing Tiers</strong>\n                    </p>\n                    <p>\n                      We offer three primary subscription levels designed to meet diverse user\n                      needs: Basic (free with limited features), Professional (monthly fee with\n                      comprehensive access), and Enterprise (custom pricing with full platform\n                      capabilities).\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Technical Support Channels</strong>\n                    </p>\n                    <p>\n                      Customer support is accessible through multiple communication methods\n                      including email support, live chat during business hours, an integrated\n                      support ticket system, and phone support specifically for enterprise-level\n                      customers.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Data Protection Strategies</strong>\n                    </p>\n                    <p>\n                      Our platform implements rigorous security measures including 256-bit SSL\n                      encryption, regular comprehensive security audits, strict data access\n                      controls, and compliance with international privacy protection standards.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Platform Compatibility</strong>\n                    </p>\n                    <p>\n                      The service supports multiple device and operating system environments,\n                      including web browsers like Chrome and Firefox, mobile applications for iOS\n                      and Android, and desktop applications compatible with Windows and macOS.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Subscription Management</strong>\n                    </p>\n                    <p>\n                      Subscriptions can be cancelled at any time through account settings, with\n                      pro-rated refunds available within 30 days of payment. Both monthly and annual\n                      billing options are provided, with special discounts offered for annual\n                      commitments.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Payment Method Options</strong>\n                    </p>\n                    <p>\n                      We accept a wide range of payment methods including major credit cards such as\n                      Visa, MasterCard, and American Express, digital payment platforms like PayPal,\n                      and direct bank transfers. Regional payment options may also be available\n                      depending on user location.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Customer Support</strong>\n                    </p>\n                    <p>\n                      Our dedicated customer support team is available 24/7, providing quick and\n                      efficient assistance to address any inquiries or issues you may have.\n                    </p>\n                  </div>\n                  <div className=\"space-y-1\">\n                    <p>\n                      <strong>Privacy Policy</strong>\n                    </p>\n                    <p>\n                      Our privacy policy outlines how we collect, use, and protect your personal\n                      data, ensuring your privacy is protected at all times.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter className=\"px-6 pb-6 sm:justify-start\">\n            <DialogClose asChild>\n              <Button type=\"button\" variant=\"outline\">\n                Cancel\n              </Button>\n            </DialogClose>\n            <DialogClose asChild>\n              <Button type=\"button\">Okay</Button>\n            </DialogClose>\n          </DialogFooter>\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "path": "registry/default/components/comp-316.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "path": "registry/default/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/dialog.tsx",
      "content": "\"use client\";\n\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Dialog({ ...props }: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger({ ...props }: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({ ...props }: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogClose({ ...props }: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal>\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-1/2 left-1/2 z-50 grid max-h-[calc(100%-2rem)] w-full max-w-[calc(100%-2rem)] -translate-x-1/2 -translate-y-1/2 gap-4 overflow-y-auto rounded-xl border p-6 shadow-lg duration-200 sm:max-w-100\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"group focus-visible:border-ring focus-visible:ring-ring/50 absolute top-3 right-3 flex size-7 items-center justify-center rounded transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:pointer-events-none\">\n          <XIcon size={16} className=\"opacity-60 transition-opacity group-hover:opacity-100\" />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-1 text-center sm:text-left\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\"flex flex-col-reverse gap-3 sm:flex-row sm:justify-end\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogTitle({ className, ...props }: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n",
      "path": "registry/default/ui/dialog.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/scroll-area.tsx",
      "content": "\"use client\";\n\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"size-full rounded-[inherit]\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  );\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none select-none\",\n        orientation === \"vertical\" && \"h-full w-2.5 border-l border-l-transparent p-px\",\n        orientation === \"horizontal\" && \"h-2.5 flex-col border-t border-t-transparent p-px\",\n        className,\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  );\n}\n\nexport { ScrollArea, ScrollBar };\n",
      "path": "registry/default/ui/scroll-area.tsx"
    }
  ]
}
