{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "src/components/Calendar/calendar.spec",
  "type": "registry:file",
  "dependencies": [
    "@playwright/test"
  ],
  "files": [
    {
      "type": "registry:file",
      "target": "src/components/Calendar/calendar.spec.ts",
      "content": "import { expect, test } from \"@playwright/test\"\n\ntest.describe(\"Expect calendar single\", () => {\n  test(\"to be rendered\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-calendar--single\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"react-day-picker-calendar\"),\n    ).toBeVisible()\n  })\n  test(\"to render month navigation buttons\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-calendar--single\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous month\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next month\"),\n    ).toBeVisible()\n  })\n  test(\"to render a caption\", async ({ page }) => {\n    const currentMonthText = new Date().toLocaleString(\"en-US\", {\n      month: \"long\",\n    })\n    await page.goto(\"http://localhost:6006/?path=/story/ui-calendar--single\")\n\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByTestId(\"react-day-picker-calendar\")\n        .getByText(`${currentMonthText}`),\n    ).toBeVisible()\n  })\n  test(\"to render month and year navigation\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/ui-calendar--single-with-year-navigation\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous year\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous month\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next month\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next year\"),\n    ).toBeVisible()\n  })\n  test(\"to render disabled month and year navigation\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/ui-calendar--single-disable-navigation\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous year\"),\n    ).toBeDisabled()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous month\"),\n    ).toBeDisabled()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next month\"),\n    ).toBeDisabled()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next year\"),\n    ).toBeDisabled()\n  })\n  test(\"to render limited year nagivation\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/ui-calendar--with-year-navigation-limited\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous year\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to previous month\"),\n    ).toBeVisible()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next month\"),\n    ).toBeDisabled()\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByLabel(\"Go to next year\"),\n    ).toBeDisabled()\n  })\n})\n",
      "path": "src/components/Calendar/calendar.spec.ts"
    }
  ]
}
