{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tag/index",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "target": "components/tag/index.js",
      "content": "import Tag from '@/components/tag/Tag'\nimport Taglist from '@/components/tag/Taglist'\n\nimport { use, registerComponent } from '@/utils/plugins'\n\nconst Plugin = {\n    install(Vue) {\n        registerComponent(Vue, Tag)\n        registerComponent(Vue, Taglist)\n    }\n}\n\nuse(Plugin)\n\nexport default Plugin\n\nexport {\n    Tag as BTag,\n    Taglist as BTaglist\n}\n",
      "path": "src/components/tag/index.js"
    },
    {
      "type": "registry:component",
      "target": "components/tag/Tag.vue",
      "content": "<template>\n    <div v-if=\"attached && closable\" class=\"tags has-addons inline-tags\">\n        <span\n            class=\"tag\"\n            :class=\"[type, size, { 'is-rounded': rounded }]\">\n            <b-icon\n                v-if=\"icon\"\n                :icon=\"icon\"\n                :size=\"size\"\n                :type=\"iconType\"\n                :pack=\"iconPack\" />\n            <span :class=\"{ 'has-ellipsis': ellipsis }\" @click=\"click\">\n                <slot/>\n            </span>\n        </span>\n        <a\n            class=\"tag\"\n            role=\"button\"\n            :aria-label=\"ariaCloseLabel\"\n            :tabindex=\"tabstop ? 0 : false\"\n            :disabled=\"disabled\"\n            :class=\"[size,\n                     closeType,\n                     {'is-rounded': rounded},\n                     closeIcon ? 'has-delete-icon' : 'is-delete']\"\n            @click=\"close\"\n            @keyup.delete.prevent=\"close\">\n            <b-icon\n                custom-class=\"\"\n                v-if=\"closeIcon\"\n                :icon=\"closeIcon\"\n                :size=\"size\"\n                :type=\"closeIconType\"\n                :pack=\"closeIconPack\"\n            />\n        </a>\n    </div>\n    <span\n        v-else\n        class=\"tag\"\n        :class=\"[type, size, { 'is-rounded': rounded }]\">\n        <b-icon\n            v-if=\"icon\"\n            :icon=\"icon\"\n            :size=\"size\"\n            :type=\"iconType\"\n            :pack=\"iconPack\" />\n        <span :class=\"{ 'has-ellipsis': ellipsis }\" @click=\"click\">\n            <slot/>\n        </span>\n\n        <a\n            v-if=\"closable\"\n            role=\"button\"\n            :aria-label=\"ariaCloseLabel\"\n            class=\"delete is-small\"\n            :class=\"closeType\"\n            :disabled=\"disabled\"\n            :tabindex=\"tabstop ? 0 : false\"\n            @click=\"close\"\n            @keyup.delete.prevent=\"close\"\n        />\n    </span>\n</template>\n\n<script>\nexport default {\n    name: 'BTag',\n    props: {\n        attached: Boolean,\n        closable: Boolean,\n        type: [String, Object],\n        size: String,\n        rounded: Boolean,\n        disabled: Boolean,\n        ellipsis: Boolean,\n        tabstop: {\n            type: Boolean,\n            default: true\n        },\n        ariaCloseLabel: String,\n        icon: String,\n        iconType: String,\n        iconPack: String,\n        closeType: String,\n        closeIcon: String,\n        closeIconPack: String,\n        closeIconType: String\n    },\n    methods: {\n        /**\n        * Emit close event when delete button is clicked\n        * or delete key is pressed.\n        */\n        close(event) {\n            if (this.disabled) return\n\n            this.$emit('close', event)\n        },\n        /**\n        * Emit click event when tag is clicked.\n        */\n        click(event) {\n            if (this.disabled) return\n\n            this.$emit('click', event)\n        }\n    }\n}\n</script>\n",
      "path": "src/components/tag/Tag.vue"
    },
    {
      "type": "registry:component",
      "target": "components/tag/Taglist.vue",
      "content": "<template>\n    <div class=\"tags\" :class=\"{ 'has-addons': attached }\">\n        <slot/>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'BTaglist',\n    props: {\n        attached: Boolean\n    }\n}\n</script>\n",
      "path": "src/components/tag/Taglist.vue"
    },
    {
      "type": "registry:lib",
      "target": "utils/plugins.js",
      "content": "\nexport const use = (plugin) => {\n    if (typeof window !== 'undefined' && window.Vue) {\n        window.Vue.use(plugin)\n    }\n}\n\nexport const registerComponent = (Vue, component) => {\n    Vue.component(component.name, component)\n}\n\nexport const registerComponentProgrammatic = (Vue, property, component) => {\n    if (!Vue.prototype.$buefy) Vue.prototype.$buefy = {}\n    Vue.prototype.$buefy[property] = component\n}\n",
      "path": "src/utils/plugins.js"
    }
  ]
}
