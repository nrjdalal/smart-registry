{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-btn-11",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/button/btn-11.tsx",
      "content": "import { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { ChevronRight } from \"lucide-react\";\n\ninterface Btn11Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    children?: React.ReactNode;\n    showIcon?: boolean;\n}\n\nexport default function Btn11({\n    className,\n    children = \"Button\",\n    showIcon = true,\n    ...props\n}: Btn11Props) {\n    return (\n        <Button\n            className={cn(\n                \"relative h-10 px-4\",\n                \"bg-linear-to-b from-zinc-50 to-zinc-100/80\",\n                \"dark:from-zinc-900 dark:to-zinc-800/80\",\n                \"text-zinc-800 dark:text-zinc-200\",\n                \"border border-zinc-200 dark:border-zinc-800\",\n                \"hover:border-zinc-300 dark:hover:border-zinc-700\",\n                \"shadow-xs hover:shadow-sm\",\n                \"transition-all duration-200\",\n                \"group\",\n                className\n            )}\n            {...props}\n        >\n            <div className=\"flex items-center justify-center gap-2\">\n                <span className=\"relative\">\n                    {children}\n                    <span className={cn(\n                        \"absolute -bottom-px left-0 w-full h-px\",\n                        \"bg-linear-to-r from-zinc-400/0 via-zinc-400/50 to-zinc-400/0\",\n                        \"dark:from-zinc-600/0 dark:via-zinc-600/50 dark:to-zinc-600/0\",\n                        \"opacity-0 group-hover:opacity-100\",\n                        \"transition-opacity duration-200\"\n                    )} />\n                </span>\n                {showIcon && (\n                    <ChevronRight \n                        className={cn(\n                            \"w-4 h-4\",\n                            \"transform group-hover:translate-x-0.5\",\n                            \"transition-transform duration-200\"\n                        )}\n                    />\n                )}\n            </div>\n        </Button>\n    );\n} ",
      "path": "components/kokonutui/button/btn-11.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    }
  ]
}
