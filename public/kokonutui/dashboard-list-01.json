{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dashboard-list-01",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "lucide-react"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/kokonutui/blocks/dashboard/list-01.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport {\n    ArrowUpRight,\n    ArrowDownLeft,\n    Wallet,\n    SendHorizontal,\n    QrCode,\n    Plus,\n    ArrowRight,\n    CreditCard,\n} from \"lucide-react\";\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardFooter,\n    CardHeader,\n    CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface AccountItem {\n    id: string;\n    title: string;\n    description?: string;\n    balance: string;\n    type: \"savings\" | \"checking\" | \"investment\" | \"debt\";\n}\n\ninterface List01Props {\n    totalBalance?: string;\n    accounts?: AccountItem[];\n    className?: string;\n}\n\nconst ACCOUNTS: AccountItem[] = [\n    {\n        id: \"1\",\n        title: \"Main Savings\",\n        description: \"Personal savings\",\n        balance: \"$8,459.45\",\n        type: \"savings\",\n    },\n    {\n        id: \"2\",\n        title: \"Checking Account\",\n        description: \"Daily expenses\",\n        balance: \"$2,850.00\",\n        type: \"checking\",\n    },\n    {\n        id: \"3\",\n        title: \"Investment Portfolio\",\n        description: \"Stock & ETFs\",\n        balance: \"$15,230.80\",\n        type: \"investment\",\n    },\n    {\n        id: \"4\",\n        title: \"Credit Card\",\n        description: \"Pending charges\",\n        balance: \"$1,200.00\",\n        type: \"debt\",\n    },\n    {\n        id: \"5\",\n        title: \"Savings Account\",\n        description: \"Emergency fund\",\n        balance: \"$3,000.00\",\n        type: \"savings\",\n    },\n];\n\nexport default function List01({\n    totalBalance = \"$26,540.25\",\n    accounts = ACCOUNTS,\n    className,\n}: List01Props) {\n    return (\n        <Card\n            className={cn(\n                \"w-full max-w-xl\",\n                \"bg-white dark:bg-zinc-900/70\",\n                \"border border-zinc-100 dark:border-zinc-800\",\n                \"rounded-xl shadow-sm backdrop-blur-xl\",\n                className\n            )}\n        >\n            <CardHeader className=\"p-4 border-b border-zinc-100 dark:border-zinc-800\">\n                <CardDescription className=\"text-xs text-zinc-600 dark:text-zinc-400\">\n                    Total Balance\n                </CardDescription>\n                <CardTitle className=\"text-2xl font-semibold text-zinc-900 dark:text-zinc-50\">\n                    {totalBalance}\n                </CardTitle>\n            </CardHeader>\n\n            <CardContent className=\"p-3\">\n                <div className=\"flex items-center justify-between mb-2\">\n                    <h2 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                        Your Accounts\n                    </h2>\n                </div>\n\n                <div className=\"space-y-1\">\n                    {accounts.map((account) => (\n                        <div\n                            key={account.id}\n                            className={cn(\n                                \"group flex items-center justify-between\",\n                                \"p-2 rounded-lg\",\n                                \"hover:bg-zinc-100 dark:hover:bg-zinc-800/50\",\n                                \"transition-all duration-200\"\n                            )}\n                        >\n                            <div className=\"flex items-center gap-2\">\n                                <div\n                                    className={cn(\"p-1.5 rounded-lg\", {\n                                        \"bg-emerald-100 dark:bg-emerald-900/30\":\n                                            account.type === \"savings\",\n                                        \"bg-blue-100 dark:bg-blue-900/30\":\n                                            account.type === \"checking\",\n                                        \"bg-purple-100 dark:bg-purple-900/30\":\n                                            account.type === \"investment\",\n                                        \"bg-red-100 dark:bg-red-900/30\":\n                                            account.type === \"debt\",\n                                    })}\n                                >\n                                    {account.type === \"savings\" && (\n                                        <Wallet className=\"w-3.5 h-3.5 text-emerald-600 dark:text-emerald-400\" />\n                                    )}\n                                    {account.type === \"checking\" && (\n                                        <QrCode className=\"w-3.5 h-3.5 text-blue-600 dark:text-blue-400\" />\n                                    )}\n                                    {account.type === \"investment\" && (\n                                        <ArrowUpRight className=\"w-3.5 h-3.5 text-purple-600 dark:text-purple-400\" />\n                                    )}\n                                    {account.type === \"debt\" && (\n                                        <CreditCard className=\"w-3.5 h-3.5 text-red-600 dark:text-red-400\" />\n                                    )}\n                                </div>\n                                <div>\n                                    <h3 className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                        {account.title}\n                                    </h3>\n                                    {account.description && (\n                                        <p className=\"text-[11px] text-zinc-600 dark:text-zinc-400\">\n                                            {account.description}\n                                        </p>\n                                    )}\n                                </div>\n                            </div>\n\n                            <div className=\"text-right\">\n                                <span className=\"text-xs font-medium text-zinc-900 dark:text-zinc-100\">\n                                    {account.balance}\n                                </span>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n\n            <CardFooter className=\"p-2 border-t border-zinc-100 dark:border-zinc-800\">\n                <div className=\"grid grid-cols-4 gap-2 w-full\">\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <Plus className=\"w-3.5 h-3.5\" />\n                        <span>Add</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <SendHorizontal className=\"w-3.5 h-3.5\" />\n                        <span>Send</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <ArrowDownLeft className=\"w-3.5 h-3.5\" />\n                        <span>Top-up</span>\n                    </Button>\n                    <Button\n                        variant=\"default\"\n                        size=\"sm\"\n                        className={cn(\n                            \"flex items-center justify-center gap-2\",\n                            \"text-xs font-medium\",\n                            \"bg-zinc-900 dark:bg-zinc-50 text-zinc-50 dark:text-zinc-900\",\n                            \"hover:bg-zinc-800 dark:hover:bg-zinc-200\"\n                        )}\n                    >\n                        <ArrowRight className=\"w-3.5 h-3.5\" />\n                        <span>More</span>\n                    </Button>\n                </div>\n            </CardFooter>\n        </Card>\n    );\n}\n",
      "path": "components/kokonutui/blocks/dashboard/list-01.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 cursor-pointer\",\n    {\n        variants: {\n            variant: {\n                default:\n                    \"bg-zinc-900 text-zinc-50 hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90\",\n                destructive:\n                    \"bg-red-500 text-zinc-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90\",\n                outline:\n                    \"border border-zinc-200 bg-white hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                secondary:\n                    \"bg-zinc-100 text-zinc-900 hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80\",\n                ghost: \"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50\",\n                link: \"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n);\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n        VariantProps<typeof buttonVariants> {\n    asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\";\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        );\n    }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-zinc-200 bg-white text-zinc-950 shadow-xs dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-zinc-500 dark:text-zinc-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "components/ui/card.tsx"
    }
  ]
}
