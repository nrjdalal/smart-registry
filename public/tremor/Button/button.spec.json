{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Button/button.spec",
  "dependencies": [
    "@playwright/test"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/Button/button.spec.ts",
      "content": "import { expect, test } from \"@playwright/test\"\n\ntest.describe(\"Expect button variant\", () => {\n  test(\"primary to exist\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-button--primary\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Primary\" }),\n    ).toBeVisible()\n  })\n  test(\"secondary to exist\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-button--secondary\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Secondary\" }),\n    ).toBeVisible()\n  })\n  test(\"light to exist\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-button--light\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Light\" }),\n    ).toBeVisible()\n  })\n  test(\"ghost to exist\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-button--ghost\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Ghost\" }),\n    ).toBeVisible()\n  })\n  test(\"destructive to exist\", async ({ page }) => {\n    await page.goto(\"http://localhost:6006/?path=/story/ui-button--destructive\")\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Destructive\" }),\n    ).toBeVisible()\n  })\n})\n\ntest.describe(\"Expect button disabled\", () => {\n  test(\"to be disabled\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/ui-button--with-disabled\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"button\", { name: \"Disabled\" }),\n    ).toBeDisabled()\n  })\n})\n\ntest.describe(\"Expect button as link\", () => {\n  test(\"to be a link\", async ({ page }) => {\n    await page.goto(\n      \"http://localhost:6006/?path=/story/ui-button--as-child-anchor\",\n    )\n    await expect(\n      page\n        .frameLocator('iframe[title=\"storybook-preview-iframe\"]')\n        .getByRole(\"link\", { name: \"API Reference\" }),\n    ).toBeDefined()\n  })\n})\n",
      "path": "src/components/Button/button.spec.ts"
    }
  ],
  "type": "registry:component"
}
