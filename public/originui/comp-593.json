{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-593",
  "type": "registry:component",
  "dependencies": [
    "class-variance-authority",
    "date-fns",
    "lucide-react",
    "radix-ui",
    "react-day-picker"
  ],
  "registryDependencies": [
    "https://originui.com/r/breadcrumb.json",
    "https://originui.com/r/button.json",
    "https://originui.com/r/calendar.json",
    "https://originui.com/r/checkbox.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/comp-593.tsx",
      "content": "import { BookmarkIcon, HomeIcon } from \"lucide-react\"\n\nimport DatePicker from \"@/components/navbar-components/date-picker\"\nimport Filters from \"@/components/navbar-components/filters\"\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n} from \"@/components/ui/breadcrumb\"\nimport { Button } from \"@/components/ui/button\"\n\nexport default function Component() {\n  return (\n    <header className=\"border-b px-4 md:px-6\">\n      <div className=\"flex h-16 items-center justify-between gap-4\">\n        {/* Left side */}\n        <Breadcrumb>\n          <BreadcrumbList>\n            <BreadcrumbItem>\n              <BreadcrumbLink href=\"#\">\n                <HomeIcon size={16} aria-hidden=\"true\" />\n                <span className=\"sr-only\">Home</span>\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n            <BreadcrumbSeparator />\n            <BreadcrumbItem>\n              <BreadcrumbPage>Reports</BreadcrumbPage>\n            </BreadcrumbItem>\n          </BreadcrumbList>\n        </Breadcrumb>\n        {/* Right side */}\n        <div className=\"flex items-center gap-2\">\n          {/* Date picker */}\n          <DatePicker />\n          {/* Filters */}\n          <Filters />\n          {/* Saved button */}\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            className=\"aspect-square text-sm max-sm:p-0\"\n          >\n            <BookmarkIcon\n              className=\"text-muted-foreground/80 sm:-ms-1\"\n              size={16}\n              aria-hidden=\"true\"\n            />\n            <span className=\"max-sm:sr-only\">Saved</span>\n          </Button>\n        </div>\n      </div>\n    </header>\n  )\n}\n",
      "path": "registry/default/components/comp-593.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/navbar-components/date-picker.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { format } from \"date-fns\"\nimport { CalendarIcon } from \"lucide-react\"\nimport { DateRange } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Calendar } from \"@/components/ui/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\n\nexport default function DatePicker() {\n  const [date, setDate] = useState<DateRange | undefined>()\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"group bg-background border-input w-full justify-between px-3 text-sm font-normal outline-offset-0 outline-none focus-visible:outline-[3px]\"\n        >\n          <CalendarIcon\n            size={16}\n            className=\"text-muted-foreground/80 -ms-1 shrink-0 transition-colors\"\n            aria-hidden=\"true\"\n          />\n          <span className={cn(\"truncate\", !date && \"font-medium\")}>\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              \"Date\"\n            )}\n          </span>\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-2\" align=\"start\">\n        <Calendar mode=\"range\" selected={date} onSelect={setDate} />\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
      "path": "registry/default/components/navbar-components/date-picker.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/navbar-components/filters.tsx",
      "content": "import { useId } from \"react\"\nimport { ListFilterIcon } from \"lucide-react\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"\n\nexport default function Component() {\n  const id = useId()\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button variant=\"outline\" size=\"sm\" className=\"text-sm\">\n            <ListFilterIcon\n              size={16}\n              className=\"text-muted-foreground/80 -ms-1\"\n              aria-hidden=\"true\"\n            />\n            Filters\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-36 p-3\">\n          <div className=\"space-y-3\">\n            <div className=\"text-xs font-medium\">Filters</div>\n            <form>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-2\">\n                  <Checkbox id={`${id}-1`} />\n                  <Label htmlFor={`${id}-1`} className=\"font-normal\">\n                    Real Time\n                  </Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Checkbox id={`${id}-2`} />\n                  <Label htmlFor={`${id}-2`} className=\"font-normal\">\n                    Top Channels\n                  </Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Checkbox id={`${id}-3`} />\n                  <Label htmlFor={`${id}-3`} className=\"font-normal\">\n                    Last Orders\n                  </Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Checkbox id={`${id}-4`} />\n                  <Label htmlFor={`${id}-4`} className=\"font-normal\">\n                    Total Spent\n                  </Label>\n                </div>\n              </div>\n              <div\n                role=\"separator\"\n                aria-orientation=\"horizontal\"\n                className=\"bg-border -mx-3 my-3 h-px\"\n              ></div>\n              <div className=\"flex justify-between gap-2\">\n                <Button size=\"sm\" variant=\"outline\" className=\"h-7 px-2\">\n                  Clear\n                </Button>\n                <Button size=\"sm\" className=\"h-7 px-2\">\n                  Apply\n                </Button>\n              </div>\n            </form>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  )\n}\n",
      "path": "registry/default/components/navbar-components/filters.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/breadcrumb.tsx",
      "content": "import * as React from \"react\"\nimport { ChevronRightIcon, MoreHorizontal } from \"lucide-react\"\nimport { Slot as SlotPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Breadcrumb({ ...props }: React.ComponentProps<\"nav\">) {\n  return <nav aria-label=\"breadcrumb\" data-slot=\"breadcrumb\" {...props} />\n}\n\nfunction BreadcrumbList({ className, ...props }: React.ComponentProps<\"ol\">) {\n  return (\n    <ol\n      data-slot=\"breadcrumb-list\"\n      className={cn(\n        \"text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-item\"\n      className={cn(\"inline-flex items-center gap-1.5\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbLink({\n  asChild,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n}) {\n  const Comp = asChild ? SlotPrimitive.Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"breadcrumb-link\"\n      className={cn(\"hover:text-foreground transition-colors\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbPage({ className, ...props }: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-page\"\n      role=\"link\"\n      aria-disabled=\"true\"\n      aria-current=\"page\"\n      className={cn(\"text-foreground font-normal\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction BreadcrumbSeparator({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"breadcrumb-separator\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={className}\n      {...props}\n    >\n      {children ?? <ChevronRightIcon size={16} />}\n    </li>\n  )\n}\n\nfunction BreadcrumbEllipsis({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) {\n  return (\n    <span\n      data-slot=\"breadcrumb-ellipsis\"\n      role=\"presentation\"\n      aria-hidden=\"true\"\n      className={cn(\"flex size-5 items-center justify-center\", className)}\n      {...props}\n    >\n      <MoreHorizontal size={16} />\n      <span className=\"sr-only\">More</span>\n    </span>\n  )\n}\n\nexport {\n  Breadcrumb,\n  BreadcrumbEllipsis,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n}\n",
      "path": "registry/default/ui/breadcrumb.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { Slot as SlotPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? SlotPrimitive.Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n",
      "path": "registry/default/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/calendar.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  components: userComponents,\n  ...props\n}: React.ComponentProps<typeof DayPicker>) {\n  const defaultClassNames = {\n    months: \"relative flex flex-col sm:flex-row gap-4\",\n    month: \"w-full\",\n    month_caption:\n      \"relative mx-10 mb-1 flex h-9 items-center justify-center z-20\",\n    caption_label: \"text-sm font-medium\",\n    nav: \"absolute top-0 flex w-full justify-between z-10\",\n    button_previous: cn(\n      buttonVariants({ variant: \"ghost\" }),\n      \"size-9 text-muted-foreground/80 hover:text-foreground p-0\"\n    ),\n    button_next: cn(\n      buttonVariants({ variant: \"ghost\" }),\n      \"size-9 text-muted-foreground/80 hover:text-foreground p-0\"\n    ),\n    weekday: \"size-9 p-0 text-xs font-medium text-muted-foreground/80\",\n    day_button:\n      \"relative flex size-9 items-center justify-center whitespace-nowrap rounded-md p-0 text-foreground group-[[data-selected]:not(.range-middle)]:[transition-property:color,background-color,border-radius,box-shadow] group-[[data-selected]:not(.range-middle)]:duration-150 group-data-disabled:pointer-events-none focus-visible:z-10 hover:not-in-data-selected:bg-accent group-data-selected:bg-primary hover:not-in-data-selected:text-foreground group-data-selected:text-primary-foreground group-data-disabled:text-foreground/30 group-data-disabled:line-through group-data-outside:text-foreground/30 group-data-selected:group-data-outside:text-primary-foreground outline-none focus-visible:ring-ring/50 focus-visible:ring-[3px] group-[.range-start:not(.range-end)]:rounded-e-none group-[.range-end:not(.range-start)]:rounded-s-none group-[.range-middle]:rounded-none group-[.range-middle]:group-data-selected:bg-accent group-[.range-middle]:group-data-selected:text-foreground\",\n    day: \"group size-9 px-0 py-px text-sm\",\n    range_start: \"range-start\",\n    range_end: \"range-end\",\n    range_middle: \"range-middle\",\n    today:\n      \"*:after:pointer-events-none *:after:absolute *:after:bottom-1 *:after:start-1/2 *:after:z-10 *:after:size-[3px] *:after:-translate-x-1/2 *:after:rounded-full *:after:bg-primary [&[data-selected]:not(.range-middle)>*]:after:bg-background [&[data-disabled]>*]:after:bg-foreground/30 *:after:transition-colors\",\n    outside:\n      \"text-muted-foreground data-selected:bg-accent/50 data-selected:text-muted-foreground\",\n    hidden: \"invisible\",\n    week_number: \"size-9 p-0 text-xs font-medium text-muted-foreground/80\",\n  }\n\n  const mergedClassNames: typeof defaultClassNames = Object.keys(\n    defaultClassNames\n  ).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: classNames?.[key as keyof typeof classNames]\n        ? cn(\n            defaultClassNames[key as keyof typeof defaultClassNames],\n            classNames[key as keyof typeof classNames]\n          )\n        : defaultClassNames[key as keyof typeof defaultClassNames],\n    }),\n    {} as typeof defaultClassNames\n  )\n\n  const defaultComponents = {\n    Chevron: (props: {\n      className?: string\n      size?: number\n      disabled?: boolean\n      orientation?: \"left\" | \"right\" | \"up\" | \"down\"\n    }) => {\n      if (props.orientation === \"left\") {\n        return <ChevronLeftIcon size={16} {...props} aria-hidden=\"true\" />\n      }\n      return <ChevronRightIcon size={16} {...props} aria-hidden=\"true\" />\n    },\n  }\n\n  const mergedComponents = {\n    ...defaultComponents,\n    ...userComponents,\n  }\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"w-fit\", className)}\n      classNames={mergedClassNames}\n      components={mergedComponents}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar }\n",
      "path": "registry/default/ui/calendar.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/checkbox.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Checkbox as CheckboxPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive flex size-4 shrink-0 items-center justify-center rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-500\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"grid place-content-center text-current\"\n      >\n        {props.checked === \"indeterminate\" ? (\n          <svg\n            width=\"9\"\n            height=\"9\"\n            viewBox=\"0 0 9 9\"\n            fill=\"currentcolor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M0.75 4.5C0.75 4.08579 1.08579 3.75 1.5 3.75H7.5C7.91421 3.75 8.25 4.08579 8.25 4.5C8.25 4.91421 7.91421 5.25 7.5 5.25H1.5C1.08579 5.25 0.75 4.91421 0.75 4.5Z\"\n            />\n          </svg>\n        ) : (\n          <svg\n            width=\"9\"\n            height=\"9\"\n            viewBox=\"0 0 9 9\"\n            fill=\"currentcolor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M8.53547 0.62293C8.88226 0.849446 8.97976 1.3142 8.75325 1.66099L4.5083 8.1599C4.38833 8.34356 4.19397 8.4655 3.9764 8.49358C3.75883 8.52167 3.53987 8.45309 3.3772 8.30591L0.616113 5.80777C0.308959 5.52987 0.285246 5.05559 0.563148 4.74844C0.84105 4.44128 1.31533 4.41757 1.62249 4.69547L3.73256 6.60459L7.49741 0.840706C7.72393 0.493916 8.18868 0.396414 8.53547 0.62293Z\"\n            />\n          </svg>\n        )}\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n",
      "path": "registry/default/ui/checkbox.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/label.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Label as LabelPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"text-foreground text-sm leading-4 font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n",
      "path": "registry/default/ui/label.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/popover.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Popover as PopoverPrimitive } from \"radix-ui\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  showArrow = false,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content> & {\n  showArrow?: boolean\n}) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        {props.children}\n        {showArrow && (\n          <PopoverPrimitive.Arrow className=\"fill-popover -my-px drop-shadow-[0_1px_0_var(--border)]\" />\n        )}\n      </PopoverPrimitive.Content>\n    </PopoverPrimitive.Portal>\n  )\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />\n}\n\nexport { Popover, PopoverAnchor, PopoverContent, PopoverTrigger }\n",
      "path": "registry/default/ui/popover.tsx"
    }
  ],
  "meta": {
    "tags": [
      "navbar, navigation"
    ],
    "colSpan": 3
  }
}
