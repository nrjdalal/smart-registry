{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-389",
  "type": "registry:component",
  "dependencies": [
    "@radix-ui/react-popover",
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "react",
    "tailwind-merge"
  ],
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground shadow-sm hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\n        outline:\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\n        secondary: \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean;\n  }) {\n  const Comp = asChild ? Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n}\n\nexport { Button, buttonVariants };\n",
      "path": "registry/default/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/popover.tsx",
      "content": "\"use client\";\n\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Popover({ ...props }: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({ ...props }: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  showArrow = false,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content> & {\n  showArrow?: boolean;\n}) {\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden\",\n          className,\n        )}\n        {...props}\n      >\n        {props.children}\n        {showArrow && (\n          <PopoverPrimitive.Arrow className=\"fill-popover -my-px drop-shadow-[0_1px_0_hsl(var(--border))]\" />\n        )}\n      </PopoverPrimitive.Content>\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({ ...props }: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverAnchor, PopoverContent, PopoverTrigger };\n",
      "path": "registry/default/ui/popover.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n",
      "path": "registry/default/lib/utils.ts"
    },
    {
      "type": "registry:component",
      "target": "components/comp-389.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Popover,\n  PopoverAnchor,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useState } from \"react\";\n\nimport { ClubIcon, DiamondIcon, HeartIcon, LucideIcon, SpadeIcon } from \"lucide-react\";\n\ninterface TourStep {\n  icon: LucideIcon;\n  title: string;\n  description: string;\n}\n\nconst tourSteps: TourStep[] = [\n  {\n    icon: HeartIcon,\n    title: \"Heart\",\n    description:\n      \"This is your new workspace. Here you'll find all your projects, recent activities, settings, and more.\",\n  },\n  {\n    icon: DiamondIcon,\n    title: \"Diamond\",\n    description:\n      \"Use the toolbar above to create new projects, invite team members, or access settings.\",\n  },\n  {\n    icon: ClubIcon,\n    title: \"Club\",\n    description:\n      \"Click the support icon in the top right corner to access our help center and documentation.\",\n  },\n  {\n    icon: SpadeIcon,\n    title: \"Spade\",\n    description:\n      \"Press âŒ˜K to open the command palette. Use arrow keys to navigate and Enter to select an action.\",\n  },\n];\n\ninterface CardProps {\n  number: number;\n  isActive: boolean;\n}\n\nfunction Card({ number, isActive }: CardProps) {\n  const content = (\n    <div className=\"bg-secondary text-muted-foreground flex size-10 items-center justify-center rounded-md text-sm font-medium\">\n      {number + 1}\n    </div>\n  );\n\n  return isActive ? <PopoverAnchor>{content}</PopoverAnchor> : content;\n}\n\nexport default function Component() {\n  const [currentTip, setCurrentTip] = useState(0);\n\n  const handleNavigation = () => {\n    if (currentTip === tourSteps.length - 1) {\n      setCurrentTip(0);\n    } else {\n      setCurrentTip(currentTip + 1);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Popover\n        onOpenChange={(open) => {\n          if (open) setCurrentTip(0);\n        }}\n      >\n        <div className=\"grid grid-cols-2 place-items-center gap-4\">\n          {tourSteps.map((step, index) => (\n            <Card key={step.title} number={index} isActive={currentTip === index} />\n          ))}\n        </div>\n\n        <PopoverTrigger asChild>\n          <Button variant=\"outline\">Start tour</Button>\n        </PopoverTrigger>\n\n        <PopoverContent\n          className=\"max-w-[280px] py-3 shadow-none\"\n          side={currentTip % 2 === 0 ? \"left\" : \"right\"}\n          showArrow={true}\n        >\n          <div className=\"space-y-3\">\n            <div className=\"space-y-1\">\n              <p className=\"text-[13px] font-medium\">{tourSteps[currentTip].title}</p>\n              <p className=\"text-muted-foreground text-xs\">{tourSteps[currentTip].description}</p>\n            </div>\n            <div className=\"flex items-center justify-between gap-2\">\n              <span className=\"text-muted-foreground text-xs\">\n                {currentTip + 1}/{tourSteps.length}\n              </span>\n              <button className=\"text-xs font-medium hover:underline\" onClick={handleNavigation}>\n                {currentTip === tourSteps.length - 1 ? \"Start over\" : \"Next\"}\n              </button>\n            </div>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n",
      "path": "registry/default/components/comp-389.tsx"
    }
  ],
  "meta": {
    "tags": [
      "popover",
      "tour",
      "radix"
    ],
    "style": 1
  }
}
