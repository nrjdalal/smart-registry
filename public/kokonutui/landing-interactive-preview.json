{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "landing-interactive-preview",
  "type": "registry:component",
  "dependencies": [
    "clsx",
    "lucide-react",
    "motion",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/landing/interactive-preview.tsx",
      "content": "\"use client\";\n\nimport { motion } from \"motion/react\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Code, Palette, Zap } from \"lucide-react\";\n\ninterface Feature {\n    icon: React.ReactNode;\n    title: string;\n    description: string;\n    preview: React.ReactNode;\n}\n\nconst FEATURES: Feature[] = [\n    {\n        icon: <Code className=\"w-5 h-5\" />,\n        title: \"Copy & Paste Ready\",\n        description: \"Every component is ready to be copied directly into your project.\",\n        preview: (\n            <div className=\"w-full h-full bg-linear-to-br from-zinc-900 to-zinc-800 dark:from-zinc-200 dark:to-zinc-100 rounded-lg p-4\">\n                <pre className=\"text-xs text-white dark:text-zinc-900\">\n                    <code>{`export function Button() {\\n  return (\\n    <button className=\"...\">\\n      Click me\\n    </button>\\n  );\\n}`}</code>\n                </pre>\n            </div>\n        )\n    },\n    {\n        icon: <Palette className=\"w-5 h-5\" />,\n        title: \"Fully Customizable\",\n        description: \"Tailwind-based styling that's easy to modify and extend.\",\n        preview: (\n            <div className=\"grid grid-cols-3 gap-2\">\n                {[\n                    \"bg-blue-500\",\n                    \"bg-emerald-500\",\n                    \"bg-purple-500\",\n                    \"bg-amber-500\",\n                    \"bg-pink-500\",\n                    \"bg-cyan-500\"\n                ].map((color, i) => (\n                    <div\n                        key={i}\n                        className={cn(\n                            \"aspect-square rounded-lg transition-transform hover:scale-105\",\n                            color\n                        )}\n                    />\n                ))}\n            </div>\n        )\n    },\n    {\n        icon: <Zap className=\"w-5 h-5\" />,\n        title: \"Interactive Elements\",\n        description: \"Smooth animations and transitions built-in.\",\n        preview: (\n            <div className=\"flex items-center justify-center\">\n                <motion.div\n                    animate={{ \n                        scale: [1, 1.2, 1],\n                        rotate: [0, 180, 360] \n                    }}\n                    transition={{ \n                        duration: 2,\n                        repeat: Infinity,\n                        ease: \"easeInOut\"\n                    }}\n                    className=\"w-16 h-16 bg-linear-to-r from-indigo-500 via-purple-500 to-pink-500 rounded-2xl\"\n                />\n            </div>\n        )\n    }\n];\n\nexport function InteractivePreview() {\n    const [activeFeature, setActiveFeature] = useState(0);\n\n    return (\n        <div className=\"w-full max-w-6xl mx-auto px-4 py-16\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-[1fr_1.5fr] gap-8\">\n                <div className=\"space-y-8\">\n                    {FEATURES.map((feature, index) => (\n                        <motion.div\n                            key={index}\n                            className={cn(\n                                \"p-6 rounded-2xl cursor-pointer\",\n                                activeFeature === index\n                                    ? \"bg-zinc-100 dark:bg-zinc-800/50\"\n                                    : \"hover:bg-zinc-50 dark:hover:bg-zinc-800/30\"\n                            )}\n                            onClick={() => setActiveFeature(index)}\n                            whileHover={{ x: 5 }}\n                            transition={{ duration: 0.2 }}\n                        >\n                            <div className=\"flex items-start gap-4\">\n                                <div className=\"p-2 rounded-lg bg-zinc-200 dark:bg-zinc-700\">\n                                    {feature.icon}\n                                </div>\n                                <div>\n                                    <h3 className=\"font-semibold text-lg mb-1\">\n                                        {feature.title}\n                                    </h3>\n                                    <p className=\"text-sm text-zinc-600 dark:text-zinc-400\">\n                                        {feature.description}\n                                    </p>\n                                </div>\n                            </div>\n                        </motion.div>\n                    ))}\n                </div>\n\n                <div className=\"lg:h-[400px] p-8 rounded-3xl bg-linear-to-b from-white to-zinc-50 dark:from-zinc-900 dark:to-zinc-900/50 border border-zinc-200 dark:border-zinc-800\">\n                    <motion.div\n                        key={activeFeature}\n                        initial={{ opacity: 0, y: 20 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"w-full h-full\"\n                    >\n                        {FEATURES[activeFeature].preview}\n                    </motion.div>\n                </div>\n            </div>\n        </div>\n    );\n} ",
      "path": "components/landing/interactive-preview.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}\n",
      "path": "lib/utils.ts"
    }
  ]
}
