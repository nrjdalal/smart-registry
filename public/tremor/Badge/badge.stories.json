{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "Badge/badge.stories",
  "type": "registry:component",
  "dependencies": [
    "@storybook/react",
    "clsx",
    "react",
    "tailwind-merge",
    "tailwind-variants"
  ],
  "files": [
    {
      "type": "registry:lib",
      "target": "utils/cx.ts",
      "content": "// Tremor cx [v0.0.0]\n\nimport clsx, { type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cx(...args: ClassValue[]) {\n  return twMerge(clsx(...args))\n}\n",
      "path": "src/utils/cx.ts"
    },
    {
      "type": "registry:component",
      "target": "components/Badge/Badge.tsx",
      "content": "// Tremor Badge [v0.0.1]\n\nimport React from \"react\"\nimport { tv, type VariantProps } from \"tailwind-variants\"\n\nimport { cx } from \"@/utils/cx\"\n\nconst badgeVariants = tv({\n  base: cx(\n    \"inline-flex items-center gap-x-1 whitespace-nowrap rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset\",\n  ),\n  variants: {\n    variant: {\n      default: [\n        \"bg-blue-50 text-blue-900 ring-blue-500/30\",\n        \"dark:bg-blue-400/10 dark:text-blue-400 dark:ring-blue-400/30\",\n      ],\n      neutral: [\n        \"bg-gray-50 text-gray-900 ring-gray-500/30\",\n        \"dark:bg-gray-400/10 dark:text-gray-400 dark:ring-gray-400/20\",\n      ],\n      success: [\n        \"bg-emerald-50 text-emerald-900 ring-emerald-600/30\",\n        \"dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-emerald-400/20\",\n      ],\n      error: [\n        \"bg-red-50 text-red-900 ring-red-600/20\",\n        \"dark:bg-red-400/10 dark:text-red-400 dark:ring-red-400/20\",\n      ],\n      warning: [\n        \"bg-yellow-50 text-yellow-900 ring-yellow-600/30\",\n        \"dark:bg-yellow-400/10 dark:text-yellow-500 dark:ring-yellow-400/20\",\n      ],\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\ninterface BadgeProps\n  extends React.ComponentPropsWithoutRef<\"span\">,\n    VariantProps<typeof badgeVariants> {}\n\nconst Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(\n  ({ className, variant, ...props }: BadgeProps, forwardedRef) => {\n    return (\n      <span\n        ref={forwardedRef}\n        className={cx(badgeVariants({ variant }), className)}\n        tremor-id=\"tremor-raw\"\n        {...props}\n      />\n    )\n  },\n)\n\nBadge.displayName = \"Badge\"\n\nexport { Badge, badgeVariants, type BadgeProps }\n",
      "path": "src/components/Badge/Badge.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/Badge/badge.stories.tsx",
      "content": "import type { Meta, StoryObj } from \"@storybook/react\"\n\nimport { cx } from \"@/utils/cx\"\nimport { Badge, badgeVariants } from \"@/components/Badge/Badge\"\n\nconst meta: Meta<typeof Badge> = {\n  title: \"ui/Badge\",\n  component: Badge,\n  args: {\n    children: \"Badge\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: [...Object.keys(badgeVariants.variants.variant)],\n    },\n  },\n}\n\nexport default meta\ntype Story = StoryObj<typeof Badge>\n\nexport const Default: Story = {}\n\nexport const Variants: Story = {\n  render: () => (\n    <div className=\"flex flex-wrap gap-4\">\n      <Badge variant=\"neutral\">Neutral</Badge>\n      <Badge>Default</Badge>\n      <Badge variant=\"success\">Success</Badge>\n      <Badge variant=\"error\">Error</Badge>\n      <Badge variant=\"warning\">Warning</Badge>\n    </div>\n  ),\n}\n\nexport const AnchorWithBadgeVariantsStyle: Story = {\n  render: () => (\n    <div className=\"flex flex-wrap gap-4\">\n      <a\n        className={cx(badgeVariants({ variant: \"success\" }), \"cursor-pointer\")}\n      >\n        Anchor element\n      </a>\n    </div>\n  ),\n}\n\nexport const CustomisedBadge: Story = {\n  render: () => (\n    <div className=\"flex items-center justify-between gap-8 rounded-md bg-blue-50 py-2.5 pl-2.5 pr-4 text-sm dark:bg-blue-900/50\">\n      <div className=\"flex items-center gap-2 truncate\">\n        <Badge className=\"ring-none dark:ring-none rounded-full bg-blue-800 text-white dark:bg-blue-500 dark:text-white\">\n          Export Request\n        </Badge>\n        <span className=\"truncate text-blue-800 dark:text-blue-400\">\n          Your export is ready for download:{\" \"}\n          <span className=\"font-semibold\">263 transactions</span>\n        </span>\n      </div>\n      <button className=\"font-semibold text-blue-800 dark:text-blue-400\">\n        Download\n      </button>\n    </div>\n  ),\n}\n",
      "path": "src/components/Badge/badge.stories.tsx"
    }
  ]
}
